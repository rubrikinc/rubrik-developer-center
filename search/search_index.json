{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-the-rubrik-developer-guide","title":"Welcome to the Rubrik Developer Guide!","text":"<p>Rubrik's APIs provide an extremely flexible interface to automate and integrate with customer and partner systems. To get started, here are the APIs Rubrik currently offers.</p> <ul> <li> <p> Rubrik Security Cloud API</p> <ul> <li>SLA Domain Management</li> <li>SLA Assignment</li> <li>On-Demand Backups</li> <li>Recovery Operations</li> <li>Data Security Posture</li> <li>Data Threat Analytics</li> <li>Reporting</li> </ul> <p> Get Started</p> </li> </ul> <ul> <li> <p> Rubrik Cluster API</p> <ul> <li>On-demand backups</li> <li>Recovery operations</li> </ul> <p> Get Started</p> </li> </ul>"},{"location":"Rubrik-Cluster-API/","title":"Rubrik Cluster API","text":""},{"location":"Rubrik-Cluster-API/#description","title":"Description","text":"<p>The Rubrik Cluster API is REST based, and is located on each physical or virtual (Cloud Cluster). The primary purposes for this API are:</p> <ol> <li>Offline Recovery - In the event that you've gone dark and are unable to access the Internet, You're still able to automate your disaster recovery plan.</li> <li>Air-gapped Automation - Some systems performing backup automation may not have access to the Internet. A common example is a database server that initiates backups at a very specific time. The database server cloud have a script to freeze and write its logs, and needs to tell Rubrik to initiate the backup.</li> </ol> <p>The Rubrik Cluster API documentation can currently be located on any Rubrik node by navigating to:</p> <p><code>https://&lt;cluster_node&gt;/docs/internal/</code> <code>https://&lt;cluster_node&gt;/docs/v1/</code> <code>https://&lt;cluster_node&gt;/docs/v2/</code> <code>https://&lt;cluster_node&gt;/docs/v3/</code></p>"},{"location":"Rubrik-Security-Cloud-API/","title":"Rubrik Security Cloud API","text":""},{"location":"Rubrik-Security-Cloud-API/#getting-started","title":"Getting Started","text":"<p>The Rubrik Security Cloud(RSC) API is GraphQL.</p>"},{"location":"Rubrik-Security-Cloud-API/#graphql-features","title":"GraphQL Features","text":"<ol> <li>Single Endpoint - The RSC API endpoint will always be /api/graphql.</li> <li>Single HTTP method - Everything is an HTTP POST.</li> <li>Introspection - The API documentation is built in to the API itself, providing integrated development help and schema checking.</li> <li>Customized Response - Queries are customized to only return the fields that is needed.</li> </ol>"},{"location":"Rubrik-Security-Cloud-API/#help-im-new-to-graphql","title":"Help! I'm new to GraphQL!","text":"<p>GraphQL is a \"query language,\" comparable to SQL. In SQL, one might say, \"Select name and ID from the VM table.\" GraphQL is similar in this idea. A query which is much like a SQL table. We then select the properties called fields, which are like columns in that table. Unlike SQL, GraphQL fields can be types with their own fields, allowing a deeply nested structure for more complex objects.</p>"},{"location":"Rubrik-Security-Cloud-API/#example","title":"Example","text":"<p>Click on the arrow annotation (1) in the code to see an explanation of that part of the code.</p> <ol> <li>This is an annotation!</li> </ol> <p>Retrieve all MSSQL databases, and return the name, ID, and the name and ID of the Rubrik Cluster that protect's this MSSQL database.</p> <pre><code>query mssqlDatabasesExample { #(1)!\n  mssqlDatabases { # (2)!\n    nodes  { #(3)!\n      name #(4)! \n      id\n      cluster { #(5)!\n        name #(6)!\n        id\n      }\n    }\n  }\n}\n</code></pre> <ol> <li><code>mssqlDatabasesExample</code> is an operation name, You can change this to whatever you want.</li> <li><code>mssqlDatabases</code> is the name of the query in the API.</li> <li><code>nodes</code> is a paginated array of objects, in this case, mssqlDatabases.</li> <li><code>name</code> is a property, known as a <code>field</code> in GraphQL. It has a specific type, in this case <code>name</code> is a <code>String</code>.</li> <li><code>cluster</code> is also a field in the API, but unlike <code>name</code> that is of type <code>String</code>, <code>cluster</code> is a <code>Cluster</code> type, and it has its own fields.</li> <li>This is the cluster <code>name</code> field. It's a field on the <code>Cluster</code> type in the API.</li> </ol> <p>To learn more about the query syntax, check out GraphQL Language Syntax. </p> <p>Next: API Playground</p>"},{"location":"Rubrik-Security-Cloud-API/API-playground/","title":"API playground","text":"<p>The API Playground is an integrated development environment (IDE) that you can use to browse, explore, and run GraphQL APIs offered by Rubrik Security Cloud (RSC). The IDE also provides reference to the Rubrik GraphQL API documentation for your version. Running GraphQL queries and mutations in API Playground validates the GraphQL operations so that you can confirm that your queries or mutations will achieve the desired result when included in automation scripts.</p> <p>Initially, access to the playground uses the currently authenticated user credentials. Running queries as a service account is useful for testing permissions and can be accomplished by clicking the \"Test with Service Account\" button in the upper right of the Playground.</p> <p>The ability to access objects and queries depends on the RBAC roles assigned to the user account or service account. For enhanced security, API Playground does not persist the service account access credentials.</p> <p>Danger</p> <p>The GraphQL mutations that run in API Playground perform actions against this instance of RSC. This can result in data loss.</p>"},{"location":"Rubrik-Security-Cloud-API/API-playground/#accessing-api-playground","title":"Accessing API Playground","text":"<p>Access the API Playground through the RSC Settings menu or directly through the browser's url bar.</p> <ol> <li>Log in to RSC.</li> <li>Open the app tray and select Settings. The Settings menu appears.</li> <li>Click API Playground. The API Playground page appears.</li> <li>Click Open API Playground. API Playground opens in a new browser tab.</li> </ol> <p>Alternatively, The playground can be accessed directly by supplying the url in this format:</p> <pre><code>https://&lt;INSTANCE&gt;.my.rubrik.com/playground/\n</code></pre> <p>Copy and paste the below example query into the playground query pane, and click the execute button.</p> <pre><code>{\n  slaDomains {\n    nodes {\n      name\n      id\n    }\n  }\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/API-playground/#sample-output","title":"Sample output","text":"<pre><code>{\n  \"data\": {\n    \"slaDomains\": {\n      \"nodes\": [\n        {\n          \"name\": \"Bronze\",\n          \"id\": \"00000000-0000-0000-0000-000000000002\"\n        },\n        {\n          \"name\": \"Gold\",\n          \"id\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        {\n          \"name\": \"Silver\",\n          \"id\": \"00000000-0000-0000-0000-000000000001\"\n        }\n      ]\n    }\n  }\n}\n</code></pre> <p>Building on the query for SLA Domains, it may be desirable to search by name. The following will walk through using the API documentation in the playground to identify arguments that can be specified for a particular query, and how to implement the arguments.</p> <ol> <li>Hover the mouse cursor over <code>slaDomains</code> in the query.</li> <li>Click on the <code>slaDomains</code> link when the tooltip appears.</li> </ol> <p>A side pane will appear with the API documentation for <code>slaDomains.</code></p> <p>There are 3 sections in the documentation:</p> <ul> <li><code>Type</code> - The type of object that gets returned.</li> <li><code>Arguments</code> - Variables that can be passed into the query, such as filters or sorting preferences.</li> <li><code>Implementations</code> - Additional object types that have their own properties</li> </ul> <p>The arguments have types specified next to the name. The <code>filter</code> argument is a type of <code>[GlobalSlaFilterInput!]</code></p> <ul> <li><code>[]</code> The square braces indicate that we can pass in multiple<code>GlobalSlaFilterInput</code> objects. This means multiple filter objects can be passed in.</li> <li><code>!</code> The exclamation point means \"Non-Null.\" This symbol is used both in arguments and fields that get returned indicating that the field must be supplied.</li> </ul> <p>Click on the <code>GlobalSlaFilterInput</code> type in the documentation. The documentation will navigate to the documentation for this type.</p> <p>To search by name, set the <code>field</code> to <code>NAME</code>. Clicking on <code>GlobalSlaQueryFilterInputField</code> will display the enum values that are available to filter on.</p> <p>Set <code>text</code> to the name of the SLA domain to search for.</p> <p>Note</p> <p>Some queries will have their own filtering arguments that are unique to the context of that object. The API documentation for each query will specify the filtering syntax and capabilities for each query.</p> <p>Arguments are supplied to a query in parenthesis <code>()</code> after the query name. Create the filter object as an argument to the <code>slaDomains</code> query. Change the <code>text</code> content to an SLA domain name in the currently connected RSC instance.</p> <pre><code>{\n  slaDomains(filter: {field: NAME text: \"bronze\"}) {\n    nodes {\n      name\n      id\n    }\n  }\n}\n</code></pre> <p>The result will be only SLA Domains starting with <code>bronze</code></p> <pre><code>{\n  \"data\": {\n    \"slaDomains\": {\n      \"nodes\": [\n        {\n          \"name\": \"Bronze\",\n          \"id\": \"00000000-0000-0000-0000-000000000002\"\n        }\n      ]\n    }\n  }\n}\n</code></pre> <p>Next: Authentication</p>"},{"location":"Rubrik-Security-Cloud-API/authentication/","title":"Authentication","text":""},{"location":"Rubrik-Security-Cloud-API/authentication/#service-accounts","title":"Service Accounts","text":"<p>A service account represents an application that needs authentication and authorization to invoke Rubrik APIs, as opposed to a user account that represents an individual user. Service accounts are OAuth2 client credentials grants. A client ID and client secret are used to authenticate to an authorization server and obtain an access token to invoke the Rubrik APIs. Similar to user accounts, Rubrik allows assigning roles to the service accounts to enable role-based access control. But contrary to user accounts, service accounts cannot be used to access the Rubrik web UI.</p>"},{"location":"Rubrik-Security-Cloud-API/authentication/#security","title":"Security","text":"<p>Service accounts enable client applications and other services to invoke the Rubrik APIs securely. When creating a service account, the authorization server assigns a unique client ID and client secret to the account. The combination of client ID and client secret is known as client credentials. The client credentials are known only to the client that is represented by the service account and the authorization server that grants the credentials to the service account. The client application authenticates to the authorization server using the client credentials and obtains an access token to authenticate to the Rubrik API server and access the protected resources.</p>"},{"location":"Rubrik-Security-Cloud-API/authentication/#guidelines","title":"Guidelines","text":"<p>Consider the following best practices when using service accounts:</p> <ul> <li>One service account should represent only one client application.</li> <li>The role assigned to the service account should be the one with least number of privileges that would be sufficient for the client application being   -epresented by the service account to access the Rubrik APIs.</li> <li>The client credentials must be saved when they are first created as Rubrik does not provide an option to display them again.</li> <li>The client secret must be treated like a password and stored in a secure location.</li> <li>Service account access tokens should be cached and reused until they are valid.</li> </ul>"},{"location":"Rubrik-Security-Cloud-API/authentication/#usage","title":"Usage","text":""},{"location":"Rubrik-Security-Cloud-API/authentication/#adding-a-service-account","title":"Adding a service account","text":"<p>Refer to the RSC userguide: adding a service account</p>"},{"location":"Rubrik-Security-Cloud-API/authentication/#obtaining-an-access-token","title":"Obtaining an access token","text":"Shell <pre><code>export RSC_CLIENT_ID=\"your-client-id\"\nexport RSC_CLIENT_SECRET=\"your-client-secret\"\nexport RSC_CLIENT_TOKEN_URI=\"your-token-uri\"\n\ncurl -X POST $RSC_CLIENT_TOKEN_URI \\\n     -H \"Content-Type: application/x-www-form-urlencoded\" \\\n     -d \"client_id=$RSC_CLIENT_ID\" \\\n     -d \"client_secret=$RSC_CLIENT_SECRET\"\n</code></pre> <p>The authorization server responds with an encoded access token. Client applications use the access token to invoke Rubrik APIs.</p> <pre><code>{\"client_id\":\"client|c9bba9a9-1234-1234-b7c6-123440b4cf64\",\"access_token\":\"eyJ...\",\"expires_in\":43200}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/authentication/#using-the-access-token","title":"Using the access token","text":"<p>The access token is used as a <code>Bearer</code> token in the <code>Authorization</code> header of all subsequent API calls.</p> Shell <pre><code>curl -X POST \"https://INSTANCE_NAME.my.rubrik.com/api/graphql\" \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Bearer $ACCESS_TOKEN\" \\\n     -d '{\"query\": \"{ slaDomains { nodes { name id }}}\"}'\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/authentication/#deleting-a-session","title":"Deleting a session","text":"<p>While there is no restriction on the number of active sessions a service account can have, Rubrik provides an API endpoint to delete an existing session.</p> <p>Run the following command to revoke the session established for the service account. Successful revocation will result in an HTTP status code of <code>204</code>.</p> Shell <pre><code>curl -o /dev/null -s -w \"%{http_code}\\n\" -X DELETE https://INSTANCE_NAME.my.rubrik.com/api/session \\\n     --header \"Authorization: Bearer $ACCESS_TOKEN\"\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/","title":"Troubleshooting","text":"<p>Note</p> <p>The response code of the HTTP request will be 200, and the body of the response will contain the HTTP error code.</p> <p>Note</p> <p>It can extremely difficult to troubleshoot code logic without much context. If additional help from the Rubrik support team is required, limit the code shared to only the offending query or SDK method. Include literal variable values to verify what is being passed in to the query or SDK method.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#400","title":"400","text":""},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#reason","title":"Reason","text":"<p>These occur when the query is incorrect according to the schema.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#solution","title":"Solution","text":"<p>Verify the query and variables supplied to the query are in accordance with the schema. This can be done with any tool that can validate the query against the schema. The RSC API playground is the easiest way to accomplish this.</p> <p>Example Erroneous Query <pre><code>query {\n  slaDomains {\n    nodes {\n      name\n      id\n      description\n    }\n  }\n}\n</code></pre></p> <p>Example Error Response <pre><code>{\n  \"code\": 400,\n  \"uri\": \"/api/graphql\",\n  \"traceSpan\": {\n    \"traceId\": \"yQq0Pl2VftOESD4kCtiFdg==\",\n    \"operation\": \"/api/graphql\",\n    \"spanId\": \"hEMkvglH1gc=\"\n  },\n  \"message\": \"[QueryAnalysisError] [DLC Team] Encountered Client error (400) executing query with operations: [] and variables {}. Error: Query does not pass validation. Violations:\\n\\nCannot query field 'description' on type 'SlaDomain'. Did you mean to use an inline fragment on 'GlobalSlaReply'? (line 6, column 7):\\n      description\\n      ^\"\n}\n</code></pre></p> <p>The error message states the query doesn't pass validation, and describes the violations saying it cannot query the field <code>description</code>. Many times, the API will give suggestions as to what can be done to correct the query such as \"Did you mean to use an inline fragment on 'GlobalSlaReply'?\" This indicates the field <code>description</code> is actually located on an 'implementation' of the <code>SlaDomain</code> type.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#corrected-query","title":"Corrected Query","text":"<pre><code>query {\n  slaDomains {\n    nodes {\n      name\n      id\n      ... on GlobalSlaReply {\n        description\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#403","title":"403","text":""},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#reason_1","title":"Reason","text":"<p>These errors are the result of a permissions issue. While RBAC is a common cause, the other reason could be that the query, or even a field in the query is behind a feature flag that is not enabled. This occurs when a development feature is deployed into the production API schema behind a feature flag, or the query is a part of licensing that has not been purchased or approved.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#solution_1","title":"Solution","text":"<p>Remove the field, find an alternative query, or be sure that the permissions applied to the service account are sufficient to perform this query.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#example-erroneous-query","title":"Example Erroneous Query","text":"<pre><code>query {\n  clusterConnection(filter: {name: \"example\"}) {\n    nodes {\n      name\n      isTprEnabled\n    }\n  }\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#example-error-response","title":"Example Error Response","text":"<pre><code>{\n  \"data\": {\n    \"clusterConnection\": {\n      \"nodes\": [\n        {\n          \"name\": \"example\",\n          \"isTprEnabled\": null\n        }\n      ]\n    }\n  },\n  \"errors\": [\n    {\n      \"message\": \"Account does not have the appropriate features enabled to access the field.\",\n      \"path\": [\n        \"clusterConnection\",\n        \"nodes\",\n        0,\n        \"isTprEnabled\"\n      ],\n      \"locations\": [\n        {\n          \"line\": 5,\n          \"column\": 7\n        }\n      ],\n      \"extensions\": {\n        \"code\": 403,\n        \"trace\": {\n          \"operation\": \"/api/graphql\",\n          \"traceId\": \"9v0wj/Sm9UVOdUFd1ottJQ==\",\n          \"spanId\": \"Jygbg58zl/M=\"\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#corrected-query_1","title":"Corrected Query","text":"<p><pre><code>query {\n  clusterConnection(filter: {name: \"example\"}) {\n    nodes {\n      name\n    }\n  }\n}\n</code></pre> The offending field mentioned in the error has been removed.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#500","title":"500","text":""},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#reason_2","title":"Reason","text":"<p>These errors are server-side, and a defect should be filed immediately. It could be that the query is not being used as intended, but the API should catch this. This error indicates that the API let the call through to the back-end service and the service is responding with an error. Essentially this is an \u201cuncaught exception.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#solution_2","title":"Solution","text":"<p>File an engineering case with the product team that owns this query. If possible, use a different query.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#example-erroneous-query_1","title":"Example Erroneous Query","text":"<pre><code>mutation {\n  takeOnDemandSnapshot(input: {workloadIds: \"fef3f155-7092-5b19-bcea-fe8021c38dc6\" slaId: \"c2c3823f-d74d-49a1-afbe-8d7e0a4d3b7c\"}) {\n    taskchainUuids {\n      taskchainUuid\n    }\n  }\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#example-error-response_1","title":"Example Error Response","text":"<pre><code>{\n  \"data\": null,\n  \"errors\": [\n    {\n      \"message\": \"The on-demand snapshot is not supported for given workload type: Mssql\",\n      \"path\": [\n        \"takeOnDemandSnapshot\"\n      ],\n      \"locations\": [\n        {\n          \"line\": 2,\n          \"column\": 3\n        }\n      ],\n      \"extensions\": {\n        \"code\": 500,\n        \"trace\": {\n          \"operation\": \"/api/graphql\",\n          \"traceId\": \"7hcbDGDPt7EqAkBQ1vSu/A==\",\n          \"spanId\": \"HrzcWppCISg=\"\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#corrected-query_2","title":"Corrected Query","text":"<p><pre><code>mutation {\n createOnDemandMssqlBackup(\n  input: {\n    id: \"fef3f155-7092-5b19-bcea-fe8021c38dc6\" \n    config:{\n      baseOnDemandSnapshotConfig: {\n        slaId: \"c2c3823f-d74d-49a1-afbe-8d7e0a4d3b7c\"\n      }\n    }\n  }) {\n    id\n  }\n}\n</code></pre> The query was updated to utilize the correct mutation for performing an on-demand snapshot of an MSSQL server.</p>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Job-Status/","title":"Job Status","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Job-Status/#retrieving-job-status-of-all-cloud-native-objects-aws-azure-gcp","title":"Retrieving Job Status of all Cloud Native Objects (AWS, Azure, GCP)","text":"GraphQLPowerShell SDKShell <pre><code>query {\n    taskchain(taskchainId: \"019523cf-0ded-7373-9e35-cdddc24e5233\") {\n    state\n    progress\n    error\n    startTime\n    endTime\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/On-Demand-Backup/","title":"On Demand Backup","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/On-Demand-Backup/#on-demand-backup-for-cloud-native-objects-aws-azure-gcp","title":"On-Demand Backup for Cloud Native Objects (AWS, Azure, GCP)","text":"GraphQLPowerShell SDKShell <pre><code>mutation {\n  takeOnDemandSnapshot(input: {\n    workloadIds: [\"0966c161-7156-495a-9a9c-73ec08e61e0d\"]\n    slaId: \"603d0b87-966a-4eb7-9705-d29fd45cf663\"\n  }) {\n    taskchainUuids {\n      workloadId\n      taskchainUuid\n    }\n    errors {\n      workloadId\n      error\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/AWS/EBS/","title":"EBS","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/AWS/EBS/#retrieving-aws-ebs-volumes","title":"Retrieving AWS EBS Volumes","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  awsNativeEbsVolumes(ebsVolumeFilters: {\n    #nameOrIdSubstringFilter: {nameOrIdSubstring: \"example\"}\n    #regionFilter: {regions: [US_EAST_1]}\n    #tagFilter: {tagFilterParams: {tagKey: \"foo\" tagValue: \"bar\" filterType: TAG_KEY_VALUE}}\n    #typeFilter: {ebsVolumeTypes: [IO1,IO2]}\n  }) {\n    nodes {\n      name\n      id\n      nativeName\n      cloudNativeId\n      volumeType\n      sizeInGiBs\n      iops\n      region\n      availabilityZone\n      tags {\n        key\n        value\n      }\n      awsAccountRubrikId\n      awsAccount {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/AWS/EC2/","title":"EC2","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/AWS/EC2/#retrieving-aws-ec2-instances","title":"Retrieving AWS EC2 Instances","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  azureNativeVirtualMachines( virtualMachineFilters: {\n      #nameSubstringFilter: {nameSubstring: \"example\"}\n      #tagFilter: {tagFilterParams: {tagKey: \"foo\", tagValue: \"bar\", filterType: TAG_KEY_VALUE}}\n      #resourceGroupFilter: {resourceGroupNames: [\"example\"]}\n      #subscriptionFilter: {subscriptionIds: [\"7d0d81dc-3323-4f45-bd0b-cc37e5bf9f37\"]}\n      #regionFilter: {regions: [EAST_US, EAST_US2]}\n      #relicFilter: {relic: false}\n  }) {\n    nodes {\n      name\n      id\n      sizeType # https://docs.microsoft.com/en-us/azure/virtual-machines/sizes-general\n      nativeName\n      cloudNativeId\n      region\n      availabilityZone\n      vnetName\n      subnetName\n      privateIp\n      isAcceleratedNetworkingEnabled\n      availabilitySetNativeId\n      attachmentSpecs {\n        managedDiskId\n        isOsDisk\n        lun\n        isExcludedFromSnapshot\n      }\n      tags {\n        key\n        value\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/AWS/RDS/","title":"RDS","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/AWS/RDS/#retrieving-aws-rds-instances","title":"Retrieving AWS RDS Instances","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  awsNativeRdsInstances(rdsInstanceFilters: {\n    #nameSubstringFilter: {nameSubstring: \"example\"}\n    #regionFilter: {regions: [US_EAST_1]}\n    #tagFilter: {tagFilterParams: {tagKey: \"foo\" tagValue: \"bar\" filterType: TAG_KEY_VALUE}}\n    #vpcFilter: {vpcIds: [\"093e5470-22b4-483c-8910-fff0cbb982b1\"]}\n  }) {\n    nodes {\n      name\n      id\n      dbInstanceName\n      dbiResourceId\n      dbInstanceClass\n      dbEngine\n      readReplicaSourceName\n      rdsType\n      vpcName\n      vpcId\n      isMultiAz\n      allocatedStorageInGibi\n\n      region\n      primaryAvailabilityZone\n      tags {\n        key\n        value\n      }\n      awsAccountRubrikId\n      awsAccount {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/AWS/S3/","title":"S3","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/AWS/S3/#retrieving-aws-s3-buckets","title":"Retrieving AWS S3 Buckets","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  awsNativeRoot {\n    objectTypeDescendantConnection(\n      objectTypeFilter: AWS_NATIVE_S3_BUCKET\n      filter: [\n        {field: NAME_EXACT_MATCH texts: \"example\"}\n        #{field: AWS_TAG tagFilterParams: {tagKey: \"foo\" tagValue: \"bar\" filterType: TAG_KEY_VALUE}}\n      ]\n    ) {\n      nodes {\n        name\n        id\n        nativeName\n        cloudNativeId\n        region\n        tags {\n          key\n          value\n        }\n        ... on AwsNativeS3Bucket {\n          numberOfObjects\n          bucketSizeBytes\n          isOnboarding\n        }\n        effectiveSlaDomain {\n          name\n          id\n        }\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/SQL-Managed-Instances/","title":"SQL Managed Instances","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/SQL-Managed-Instances/#retrieving-managed-instance-sql-databases","title":"Retrieving Managed Instance SQL Databases","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  azureSqlManagedInstanceDatabases( azureSqlManagedInstanceDatabaseFilters: {\n      #nameSubstringFilter: {nameSubstring: \"example\"}\n      #resourceGroupFilter: {resourceGroupNames: [\"example\"]}\n      #serverFilter: {serverNames: [\"example\"]}\n      #subscriptionFilter: {subscriptionIds: [\"7d0d81dc-3323-4f45-bd0b-cc37e5bf9f37\"]}\n      #regionFilter: {regions: [EAST_US, EAST_US2]}\n      #relicFilter: {relic: false}\n  }) {\n    nodes {\n      name\n      id\n      region\n      persistentStorage {\n        name\n        id\n      }\n      azureSqlManagedInstanceServer {\n        name\n        id\n      }\n      persistentStorage {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/SQL-Managed-Instances/#retrieving-managed-instance-sql-servers","title":"Retrieving Managed Instance SQL Servers","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  azureSqlManagedInstanceServers( azureSqlManagedInstanceServerFilters: {\n      #nameSubstringFilter: {nameSubstring: \"example\"}\n      #tagFilter: {tagFilterParams: {tagKey: \"foo\", tagValue: \"bar\", filterType: TAG_KEY_VALUE}}\n      #resourceGroupFilter: {resourceGroupNames: [\"example\"]}\n      #subscriptionFilter: {subscriptionIds: [\"7d0d81dc-3323-4f45-bd0b-cc37e5bf9f37\"]}\n      #regionFilter: {regions: [EAST_US, EAST_US2]}\n  }) {\n    nodes {\n      name\n      id\n      region\n      vCoresCount\n      storageSizeGib\n      instancePoolName\n      serviceTier\n      vnetName\n      subnetName\n      azureNativeResourceGroup {\n        name\n        id\n      }\n      tags {\n        key\n        value\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/SQL/","title":"SQL","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/SQL/#retrieving-azure-sql-databases","title":"Retrieving Azure SQL Databases","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  azureSqlDatabases( azureSqlDatabaseFilters: {\n      #nameSubstringFilter: {nameSubstring: \"example\"}\n      #tagFilter: {tagFilterParams: {tagKey: \"foo\", tagValue: \"bar\", filterType: TAG_KEY_VALUE}}\n      #resourceGroupFilter: {resourceGroupNames: [\"example\"]}\n      #subscriptionFilter: {subscriptionIds: [\"7d0d81dc-3323-4f45-bd0b-cc37e5bf9f37\"]}\n      #regionFilter: {regions: [EAST_US, EAST_US2]}\n      #relicFilter: {relic: false}\n  }) {\n    nodes {\n      name\n      id\n      region\n            elasticPoolName\n      backupStorageRedundancy\n      serviceTier\n      maximumSizeInBytes\n      persistentStorage {\n        name\n        id\n      }\n      serviceObjectiveName\n      azureSqlDatabaseServer {\n        name\n        id\n      }\n      tags {\n        key\n        value\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/SQL/#retrieving-azure-sql-database-servers","title":"Retrieving Azure SQL Database Servers","text":"GraphQLPowerShell SDKShell <pre><code># https://docs.microsoft.com/en-us/azure/azure-sql/database/logical-servers\nquery {\n  azureSqlDatabaseServers( azureSqlDatabaseServerFilters: {\n      #nameSubstringFilter: {nameSubstring: \"example\"}\n      #resourceGroupFilter: {resourceGroupNames: [\"example\"]}\n      #subscriptionFilter: {subscriptionIds: [\"7d0d81dc-3323-4f45-bd0b-cc37e5bf9f37\"]}\n      #regionFilter: {regions: [EAST_US, EAST_US2]}\n  }) {\n    nodes {\n      name\n      id\n      region\n      tags {\n        key\n        value\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/VM/","title":"VM","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/VM/#azure-virtual-machines","title":"Azure Virtual Machines","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/VM/#retrieving-azure-virtual-machines","title":"Retrieving Azure Virtual Machines","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  azureNativeVirtualMachines( virtualMachineFilters: {\n      #nameSubstringFilter: {nameSubstring: \"example\"}\n      #tagFilter: {tagFilterParams: {tagKey: \"foo\", tagValue: \"bar\", filterType: TAG_KEY_VALUE}}\n      #resourceGroupFilter: {resourceGroupNames: [\"example\"]}\n      #subscriptionFilter: {subscriptionIds: [\"7d0d81dc-3323-4f45-bd0b-cc37e5bf9f37\"]}\n      #regionFilter: {regions: [EAST_US, EAST_US2]}\n      #relicFilter: {relic: false}\n  }) {\n    nodes {\n      name\n      id\n      nativeName\n      cloudNativeId\n      availabilitySetNativeId\n      resourceGroup {\n        name\n        id\n      }\n      region\n      sizeType\n      osType\n      vnetName\n      subnetName\n      privateIp\n      attachedManagedDisks {\n        name\n        id\n        cloudNativeId\n        diskSizeGib\n      }\n      tags {\n        key\n        value\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/GCP/Instances/","title":"Instances","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/GCP/Instances/#retrieving-google-compute-engine-gce-instances","title":"Retrieving Google Compute Engine (GCE) Instances","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  gcpNativeGceInstances( gceInstanceFilters: {\n      #nameOrIdSubstringFilter: {nameOrIdSubstring: \"example\"}\n      #labelFilter: {labelFilterParams: {labelKey: \"foo\", labelValue: \"bar\", filterType: LABEL_KEY_VALUE}}\n      #projectFilter: {projectIds: [\"7d0d81dc-3323-4f45-bd0b-cc37e5bf9f37\"]}\n      #machineTypeFilter: {machineTypes: [\"example\"]}\n      #networkFilter: {networkNames: [\"example\"]}\n      #regionFilter: {regions: [\"example\"]}\n      #relicFilter: {relic: false}\n  }) {\n    nodes {\n      name\n      id\n      nativeName\n            nativeId\n      region\n            zone\n      machineType\n      vpcName\n      attachedDisks {\n        diskName\n        diskId\n        deviceName\n        sizeInGiBs\n        isBootDisk\n        isExcluded\n      }\n      labels {\n        key\n        value\n      }\n      networkHostProjectNativeId\n      gcpNativeProject {\n        name\n        id\n        nativeName\n        nativeId\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/IBM-DB2/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/IBM-DB2/#retrieving-db2-instances","title":"Retrieving DB2 instances","text":"GraphQLPowerShell SDKShell <pre><code>query db2Instances {\n  objects: db2Instances(\n    filter: [\n      {field: NAME texts: \"example\"}\n      {field: IS_RELIC texts: \"false\"}\n      {field: IS_REPLICATED texts: \"false\"}\n    ]\n    ) {\n    nodes {\n      name\n      id\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n      primaryClusterUuid\n      hosts {\n        name\n        id\n      }\n      status\n      statusMessage\n      instanceType\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/IBM-DB2/#retrieving-db2-databases","title":"Retrieving DB2 databases","text":"GraphQLPowerShell SDKShell <pre><code>query db2Databases{\n  db2Databases(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n      db2DbType\n      db2Instance {\n        name\n        id\n      }\n      status\n      statusMessage\n      backupSessions\n      backupParallelism\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-AD/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-AD/#retrieving-microsoft-active-directory-domain-controllers","title":"Retrieving Microsoft Active Directory Domain Controllers","text":"GraphQLPowerShell SDKShell <pre><code>query microsoftAdDomainControllers {\n  activeDirectoryDomainControllers(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      domainControllerGuid\n      adServiceStatus {\n        serviceStatus\n      }\n      hostname\n      fsmoRoles\n      serverRoles\n      isGlobalCatalog\n      host {\n        name\n        id\n      }\n      dcLocation\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-AD/#retrieving-microsoft-active-directory-domains","title":"Retrieving Microsoft Active Directory Domains","text":"GraphQLPowerShell SDKShell <pre><code>query microsoftAdDomains {\n  activeDirectoryDomains(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      domainName\n      domainSid\n      registeredDomainControllersCount\n      smbDomain {\n        name\n        domainId\n        accountName\n        status\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-Exchange/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-Exchange/#retrieving-microsoft-exchange-database-availability-groups","title":"Retrieving Microsoft Exchange Database Availability Groups","text":"GraphQLPowerShell SDKShell <pre><code>query microsoftExchangeDags {\n  exchangeDags(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      totalHosts\n      backupPreference\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-Exchange/#retrieving-microsoft-exchange-servers","title":"Retrieving Microsoft Exchange Servers","text":"GraphQLPowerShell SDKShell <pre><code>query microsoftExchangeServers {\n  exchangeServers(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      totalDbs\n      version\n      exchangeDag {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-Exchange/#retrieving-microsoft-exchange-databases","title":"Retrieving Microsoft Exchange Databases","text":"GraphQLPowerShell SDKShell <pre><code>query microsoftExchangeDbs {\n  exchangeDatabases(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      totalCopies\n      activeCopies\n      exchangeServer {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-HyperV/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-HyperV/#retrieving-microsoft-hyper-v-system-center-virtual-machine-managers","title":"Retrieving Microsoft Hyper-V System Center Virtual Machine Managers","text":"GraphQLPowerShell SDKShell <pre><code>query hypervScvmms {\n  hypervScvmms(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      hostName\n      scvmmInfo {\n        version\n      }\n      connectionStatus\n      status {\n        connectivity\n      }\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-HyperV/#retrieving-microsoft-hyper-v-servers","title":"Retrieving Microsoft Hyper-V Servers","text":"GraphQLPowerShell SDKShell <pre><code>query hypervServers {\n  hypervServersPaginated(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      connectionStatus\n      status {\n        connectivity\n      }\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-HyperV/#retrieving-microsoft-hyper-v-virtual-machines","title":"Retrieving Microsoft Hyper-V Virtual Machines","text":"GraphQLPowerShell SDKShell <pre><code>query hypervVirtualMachines {\n  hypervVirtualMachines(filter: [\n    #{field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      osType\n      agentStatus {\n        connectionStatus\n        disconnectReason\n      }\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-SQL/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-SQL/#retrieving-microsoft-sql-instances","title":"Retrieving Microsoft SQL Instances","text":"GraphQLPowerShell SDKShell <pre><code>query mssqlInstances {\n  mssqlTopLevelDescendants(filter: [\n    {field: NAME_EXACT_MATCH, texts: \"example\"}\n    {field: IS_RELIC, texts: \"false\"}\n    {field: IS_ARCHIVED, texts: \"false\"}\n    {field: IS_REPLICATED, texts: \"false\"}\n    ]) {\n      nodes {\n        id\n        name\n        numWorkloadDescendants\n        ... on PhysicalHost {\n          id\n          name\n          cbtStatus\n          physicalChildConnection {\n            nodes {\n              ... on MssqlInstance {\n                id\n                name\n                slaAssignment\n                effectiveSlaDomain {\n                  name\n                  id\n                  version\n                }\n              }\n            }\n          }\n        }\n      }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-SQL/#retrieving-microsoft-sql-databases","title":"Retrieving Microsoft SQL Databases","text":"GraphQLPowerShell SDKShell <pre><code>query mssqlDatabases {\n  mssqlDatabases(\n    filter: [\n      {field: NAME_EXACT_MATCH, texts: \"example\"}\n      {field: IS_RELIC, texts: \"false\"}\n      #{field: LOCATION, texts: \"hostname\\instancename\"}\n      {field: IS_ARCHIVED, texts: \"false\"}\n      {field: IS_REPLICATED, texts: \"false\"}]\n  ) {\n    nodes {\n      name\n      id\n      logicalPath {\n        name\n        objectType\n      }\n      effectiveSlaDomain {\n        id\n        name\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/MongoDB/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/MongoDB/#retrieving-mongo-collections","title":"Retrieving Mongo Collections","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  mongoCollections(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      source {\n        name\n        id\n      }\n      database {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/MongoDB/#retrieving-mongo-databases","title":"Retrieving Mongo Databases","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  mongoDatabases(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      source {\n        name\n        id\n      }\n      activeCollectionCount\n      protectedCollectionCount\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/MongoDB/#retrieving-mongo-sources","title":"Retrieving Mongo Sources","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  mongoSources(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      sourceType\n      status\n      discoveryStatus\n      hostDetails {\n        name\n        id\n        connectionStatus\n      }\n      managementType\n      activeCollectionCount\n      protectedCollectionCount\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/NAS-Unstructured-Data/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/NAS-Unstructured-Data/#retrieving-nas-shares","title":"Retrieving NAS Shares","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nasShares(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      shareType\n      exportPoint\n      isChangelistEnabled\n      isStale\n      nasSystem {\n        name\n        id\n      }\n      nasVolume {\n        name\n        id\n        nasNamespace {\n          name\n          id\n        }\n      }\n      primaryFileset {\n        name\n        id\n      }\n      connectedThrough\n      hostAddress\n      hostIdForRestore\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/NAS-Unstructured-Data/#retrieving-nas-systems","title":"Retrieving NAS Systems","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nasSystems(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      osVersion\n      lastRefreshTime\n      vendorType\n      isSmbSupported\n      isNfsSupported\n      lastStatus\n      volumeCount\n      shareCount\n      namespaceCount\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/NAS-Unstructured-Data/#retrieving-nas-namespaces","title":"Retrieving NAS Namespaces","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nasNamespaces(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      vendorType\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/NAS-Unstructured-Data/#retrieving-cloud-direct-nas-shares","title":"Retrieving Cloud Direct NAS Shares","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  cloudDirectNasShares(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      protocol\n      ncdPolicyName\n      systemId\n      namespaceId\n      cloudDirectId\n      cloudDirectNasSystem {\n        name\n        id\n      }\n      cloudDirectNasNamespace {\n        name\n        id\n      }\n      excludes {\n        path\n        pattern\n      }\n\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/NAS-Unstructured-Data/#retrieving-cloud-direct-nas-systems","title":"Retrieving Cloud Direct NAS Systems","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nasSystems(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      osVersion\n      lastRefreshTime\n      vendorType\n      isSmbSupported\n      isNfsSupported\n      lastStatus\n      volumeCount\n      shareCount\n      namespaceCount\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/NAS-Unstructured-Data/#retrieving-cloud-direct-nas-namespaces","title":"Retrieving Cloud Direct NAS Namespaces","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  cloudDirectNasNamespaces(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cloudDirectId\n      cloudDirectNasSystem {\n        name\n        id\n      }\n      shareCount\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Nutanix-AHV/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Nutanix-AHV/#retrieving-nutanix-vms","title":"Retrieving Nutanix VMs","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nutanixVms(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      vmUuid\n      osType\n      vmDisks {\n        label\n        uuid\n        vmDiskUuid\n        sizeInBytes\n        isSnapshottable\n        storageContainerName\n        storageContainerId\n      }\n      preBackupScript {\n        scriptPath\n      }\n      postSnapScript {\n        scriptPath\n      }\n      postBackupScript {\n        scriptPath\n      }\n      snapshotConsistencyMandate\n      agentStatus {\n        connectionStatus\n        disconnectReason\n      }\n      isAgentRegistered\n      hypervisorType\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Nutanix-AHV/#retrieving-nutanix-clusters","title":"Retrieving Nutanix Clusters","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nutanixClusters(filter: [\n    #{field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      hostName\n      naturalId\n      nosVersion\n      connectionStatus {\n        message\n        status\n      }\n      clusterNetworks {\n        name\n        uuid\n      }\n      storageContainers {\n        name\n        uuid\n        freeBytes\n        usedBytes\n        totalBytes\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Nutanix-AHV/#retreiving-nutanix-prism-central-servers","title":"Retreiving Nutanix Prism Central Servers","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nutanixPrismCentrals(filter: [\n    #{field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      hostName\n      naturalId\n      nosVersion\n      nutanixClusters {\n        nodes {\n          name\n          id\n        }\n      }\n      isDrEnabled\n      connectionStatus {\n        message\n        status\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Oracle/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Oracle/#retrieving-oracle-databases","title":"Retrieving Oracle Databases","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  oracleDatabases(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      dbUniqueName\n      numTablespaces\n      numInstances\n      numChannels\n      logRetentionHours\n      hostLogRetentionHours\n      useSecureThrift\n      osType\n      osNames\n      tablespaces\n      numLogSnapshots\n      pdbs {\n        name\n        dbId\n        openMode\n        isApplicationPdb\n        isApplicationRoot\n        applicationRootContainerId\n      }\n      dbRole\n      dataGuardType\n      dataGuardGroup {\n        name\n        id\n      }\n      lastValidationResult {\n        isSuccess\n        snapshotId\n      }\n      instances {\n        instanceName\n        hostId\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Oracle/#retrieving-oracle-hosts-and-clusters","title":"Retrieving Oracle Hosts and Clusters","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  oracleTopLevelDescendants(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      objectType\n      ... on OracleHost {\n        descendantConnection {\n          nodes {\n            name\n            id\n            objectType\n          }\n        }\n      }\n      ... on OracleRac {\n        descendantConnection {\n          nodes {\n            name\n            id\n            objectType\n          }\n        }\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/SAP-HANA/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/SAP-HANA/#retrieving-sap-hana-databases","title":"Retrieving SAP HANA Databases","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  sapHanaDatabases(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      info {\n        databaseType\n        status\n        backintPath\n        paramFilePath\n        numChannels\n        approxDbSizeInMb\n        logBackupIntervalSecs\n        restoreConfiguredSrcDatabaseId\n        logMode\n      }\n      dataPathType\n      dataPathSpec {\n        name\n      }\n      sapHanaSystem {\n        name\n        id\n      }\n      forceFull\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/SAP-HANA/#retrieving-sap-hana-systems","title":"Retrieving SAP HANA Systems","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  sapHanaSystems(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      objectType\n      sid\n      instanceNumber\n      status\n      statusMessage\n      systemInfo {\n        hanaVersion\n        isDtEnabled\n        authType\n      }\n      hosts {\n        hostName\n        hostUuid\n        hostType\n        status\n        systemHost {\n          name\n          id\n        }\n      }\n            descendantConnection {\n        nodes {\n          name\n          id\n          objectType\n        }\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Job-Status/","title":"Job Status","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Job-Status/#description","title":"Description","text":"<p>Tasks such as on-demand backups and recoveries are asynchronous requests and return an AsynRequestStatus which can be monitored for progress and completion.</p> <p>To monitor the asynchronous request status for VMware vSphere, provide the ID of the cluster and the ID of the job. You can query the request status periodically until a terminal state (<code>SUCCEEDED</code>, <code>FAILED</code>, <code>CANCELLED</code>) is set given in the status field.</p>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Job-Status/#code-samples","title":"Code Samples","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  vSphereVMAsyncRequestStatus(\n    id: \"d4822e3d-c6e3-4bbe-950e-3e63c4770a78\"\n    clusterUuid: \"e4e7d2a2-c58b-4bc2-b11e-d6f9102e6fc8\"\n  ) {\n    id\n    status\n    startTime\n    progress\n    endTime\n    error {\n      message\n    }\n  }\n}\n</code></pre> <pre><code>$statusQuery = New-RscQuery -GqlQuery vSphereVMAsyncRequestStatus\n$statusQuery.var.id = $request.Id\n$statusQuery.var.clusterUuid = $my_vm.cluster.Id\n$status = Invoke-Rsc $statusQuery\n</code></pre> <pre><code>    curl --location 'https://EXAMPLE.my.rubrik.com/api/graphql' \\\n    --header 'Content-Type: application/json' \\\n    --header 'Authorization: Bearer XXXXXXX' \\\n    --data '{\"query\":\"query requestStatus($id: String! $clusterUuid: UUID!) {  vSphereVMAsyncRequestStatus(id: $id clusterUuid: $clusterUuid) { id status startTime progress endTime error { message }}}\",\"variables\":{\"id\":\"TASK_ID\",\"clusterUuid\":\"CLUSTER_UUID\"}}'\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/On-Demand-Backup/","title":"On Demand Backup","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/On-Demand-Backup/#vmware-vm-on-demand-backup","title":"VMware VM On-Demand Backup","text":"<p>To Perform an On-Demand Backup, you will need the Virtual Machine <code>ID</code> and SLA <code>ID</code>.</p> GraphQLPowerShell SDKShell <pre><code>mutation {\n  vsphereBulkOnDemandSnapshot(\n    input: {\n      config: {\n        vms: [\"EC6A4D79-8F6F-4105-9DD6-11F4875C7A8B\"]\n        slaId: \"def96ac0-be74-5e59-87e2-5af73b65ac1e\"\n        }\n      }\n    ) {\n    responses {\n      id\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-Rscmutation -GqlMutation vsphereBulkOnDemandSnapshot -FieldProfile FULL\n$query.var.input = Get-RscType -Name vsphereBulkOnDemandSnapshotInput\n$query.var.input.config = Get-RscType -Name BulkOnDemandSnapshotJobConfigInput\n$query.var.input.config.Vms = @($vm.id)\n$query.var.input.config.SlaId = $vm.EffectiveSlaDomain.Id\ninvoke-rsc $query\n</code></pre> <pre><code>\n</code></pre> <p>To monitor the status of the on-demand backup, see job status</p>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/job-status/","title":"Job status","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/job-status/#description","title":"Description","text":"<p>Tasks such as on-demand backups and recoveries are asynchronous requests and return an AsynRequestStatus which can be monitored for progress and completion.</p> <p>To monitor the asynchronous request status for VMware vSphere, provide the ID of the cluster and the ID of the job. You can query the request status periodically until a terminal state (<code>SUCCEEDED</code>, <code>FAILED</code>, <code>CANCELLED</code>) is set given in the status field.</p>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/job-status/#code-samples","title":"Code Samples","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  vSphereVMAsyncRequestStatus(\n    id: \"d4822e3d-c6e3-4bbe-950e-3e63c4770a78\"\n    clusterUuid: \"e4e7d2a2-c58b-4bc2-b11e-d6f9102e6fc8\"\n  ) {\n    id\n    status\n    startTime\n    progress\n    endTime\n    error {\n      message\n    }\n  }\n}\n</code></pre> <pre><code>$statusQuery = New-RscQuery -GqlQuery vSphereVMAsyncRequestStatus\n$statusQuery.var.id = $request.Id\n$statusQuery.var.clusterUuid = $my_vm.cluster.Id\n$status = Invoke-Rsc $statusQuery\n</code></pre> <pre><code>    curl --location 'https://EXAMPLE.my.rubrik.com/api/graphql' \\\n    --header 'Content-Type: application/json' \\\n    --header 'Authorization: Bearer XXXXXXX' \\\n    --data '{\"query\":\"query requestStatus($id: String! $clusterUuid: UUID!) {  vSphereVMAsyncRequestStatus(id: $id clusterUuid: $clusterUuid) { id status startTime progress endTime error { message }}}\",\"variables\":{\"id\":\"TASK_ID\",\"clusterUuid\":\"CLUSTER_UUID\"}}'\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/on-demand-backup/","title":"On demand backup","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/on-demand-backup/#vmware-vm-on-demand-backup","title":"VMware VM On-Demand Backup","text":"<p>To Perform an On-Demand Backup, you will need the Virtual Machine <code>ID</code> and SLA <code>ID</code>.</p> GraphQLPowerShell SDKShell <pre><code>mutation {\n  vsphereBulkOnDemandSnapshot(\n    input: {\n      config: {\n        vms: [\"EC6A4D79-8F6F-4105-9DD6-11F4875C7A8B\"]\n        slaId: \"def96ac0-be74-5e59-87e2-5af73b65ac1e\"\n        }\n      }\n    ) {\n    responses {\n      id\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-Rscmutation -GqlMutation vsphereBulkOnDemandSnapshot -FieldProfile FULL\n$query.var.input = Get-RscType -Name vsphereBulkOnDemandSnapshotInput\n$query.var.input.config = Get-RscType -Name BulkOnDemandSnapshotJobConfigInput\n$query.var.input.config.Vms = @($vm.id)\n$query.var.input.config.SlaId = $vm.EffectiveSlaDomain.Id\ninvoke-rsc $query\n</code></pre> <pre><code>\n</code></pre> <p>To monitor the status of the on-demand backup, see job status</p>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/","title":"SLA Domains","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/#what-are-sla-domains","title":"What are SLA Domains?","text":"<p>Rubrik SLA Domains are data protection policies that define:</p> <ul> <li>The object types for which the policy can be applied</li> <li>The frequency of the backups</li> <li>The retention of the backups</li> <li>The replication destination of the backups</li> <li>The archival location of the backups</li> <li>Object specific settings based on the type (e.g. MSSQL Database)</li> </ul>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/#retrieve-all-slas","title":"Retrieve All SLAs","text":"GraphQLPowerShell SDK <pre><code>query slaDomains {\n  slaDomains {\n    nodes {\n      id\n      name\n      ... on GlobalSlaReply {\n        isDefault\n        description\n        snapshotSchedule {\n          minute {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          hourly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          daily {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          weekly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfWeek\n          }\n          monthly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfMonth\n          }\n          quarterly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfQuarter\n            quarterStartMonth\n          }\n          yearly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfYear\n            yearStartMonth\n          }\n        }\n        archivalSpecs {\n          threshold\n          thresholdUnit\n          storageSetting {\n            id\n            name\n            groupType\n          }\n          archivalTieringSpec {\n            coldStorageClass\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n        }\n        backupWindows {\n          durationInHours\n          startTimeAttributes {\n            hour\n            minute\n          }\n        }\n        firstFullBackupWindows {\n          durationInHours\n          startTimeAttributes {\n            dayOfWeek {\n              day\n            }\n            hour\n            minute\n          }\n        }\n        replicationSpecsV2 {\n          replicationLocalRetentionDuration {\n            duration\n            unit\n          }\n          cascadingArchivalSpecs {\n            archivalTieringSpec {\n              coldStorageClass\n              shouldTierExistingSnapshots\n              minAccessibleDurationInSeconds\n              isInstantTieringEnabled\n            }\n            archivalLocation {\n              id\n              name\n              targetType\n              ... on RubrikManagedAwsTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedNfsTarget {\n                host\n              }\n              ... on CdmManagedAwsTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on CdmManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n            }\n            frequency\n            archivalThreshold {\n              duration\n              unit\n            }\n          }\n          retentionDuration {\n            duration\n            unit\n          }\n          cluster {\n            id\n            name\n          }\n          targetMapping {\n            id\n            name\n          }\n          awsTarget {\n            accountId\n            accountName\n            region\n          }\n          azureTarget {\n            region\n          }\n        }\n        localRetentionLimit {\n          duration\n          unit\n        }\n        objectSpecificConfigs {\n          sapHanaConfig {\n            incrementalFrequency {\n              duration\n              unit\n            }\n            differentialFrequency {\n              duration\n              unit\n            }\n            logRetention {\n              duration\n              unit\n            }\n          }\n          awsRdsConfig {\n            logRetention {\n              duration\n            }\n          }\n          vmwareVmConfig {\n            logRetentionSeconds\n          }\n        }\n        clusterToSyncStatusMap {\n          clusterUuid\n          slaSyncStatus\n        }\n        objectTypes\n        upgradeInfo {\n          eligibility {\n            isEligible\n            ineligibilityReason\n          }\n          latestUpgrade {\n            status\n            msg\n          }\n        }\n        allOrgsHavingAccess {\n          id\n          name\n        }\n        ownerOrg {\n          id\n          name\n        }\n        isRetentionLockedSla\n      }\n      ... on ClusterSlaDomain {\n        cdmId\n        name\n        cluster {\n          name\n          version\n        }\n        snapshotSchedule {\n          minute {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          hourly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          daily {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          weekly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfWeek\n          }\n          monthly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfMonth\n          }\n          quarterly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfQuarter\n            quarterStartMonth\n          }\n          yearly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfYear\n            yearStartMonth\n          }\n        }\n        backupWindows {\n          durationInHours\n          startTimeAttributes {\n            hour\n            minute\n          }\n        }\n        firstFullBackupWindows {\n          durationInHours\n          startTimeAttributes {\n            dayOfWeek {\n              day\n            }\n            hour\n            minute\n          }\n        }\n        archivalSpec {\n          threshold\n          thresholdUnit\n          archivalLocationName\n          archivalLocationId\n          archivalTieringSpec {\n            coldStorageClass\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n        }\n        replicationSpecsV2 {\n          retentionDuration {\n            duration\n            unit\n          }\n          cluster {\n            id\n            name\n          }\n          targetMapping {\n            id\n            name\n          }\n          awsTarget {\n            accountId\n            accountName\n            region\n          }\n          azureTarget {\n            region\n          }\n        }\n        localRetentionLimit {\n          duration\n          unit\n        }\n        upgradeInfo {\n          eligibility {\n            isEligible\n            ineligibilityReason\n          }\n          latestUpgrade {\n            status\n            msg\n          }\n        }\n        ownerOrg {\n          id\n          name\n        }\n        isRetentionLockedSla\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscSla\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/#retrieve-an-sla-by-name","title":"Retrieve an SLA by Name","text":"<p>Generally, the name of the SLA may be known, but not the ID. The <code>slaDomains</code> query allows filtering on several fields, including <code>NAME</code>.</p> GraphQLPowerShell SDK <pre><code>query slaDomains {\n  slaDomains(filter: {field: NAME text: \"foo\"}) {\n    nodes {\n      id\n      name\n      ... on GlobalSlaReply {\n        isDefault\n        description\n        snapshotSchedule {\n          minute {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          hourly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          daily {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          weekly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfWeek\n          }\n          monthly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfMonth\n          }\n          quarterly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfQuarter\n            quarterStartMonth\n          }\n          yearly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfYear\n            yearStartMonth\n          }\n        }\n        archivalSpecs {\n          threshold\n          thresholdUnit\n          storageSetting {\n            id\n            name\n            groupType\n          }\n          archivalTieringSpec {\n            coldStorageClass\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n        }\n        backupWindows {\n          durationInHours\n          startTimeAttributes {\n            hour\n            minute\n          }\n        }\n        firstFullBackupWindows {\n          durationInHours\n          startTimeAttributes {\n            dayOfWeek {\n              day\n            }\n            hour\n            minute\n          }\n        }\n        replicationSpecsV2 {\n          replicationLocalRetentionDuration {\n            duration\n            unit\n          }\n          cascadingArchivalSpecs {\n            archivalTieringSpec {\n              coldStorageClass\n              shouldTierExistingSnapshots\n              minAccessibleDurationInSeconds\n              isInstantTieringEnabled\n            }\n            archivalLocation {\n              id\n              name\n              targetType\n              ... on RubrikManagedAwsTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedNfsTarget {\n                host\n              }\n              ... on CdmManagedAwsTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on CdmManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n            }\n            frequency\n            archivalThreshold {\n              duration\n              unit\n            }\n          }\n          retentionDuration {\n            duration\n            unit\n          }\n          cluster {\n            id\n            name\n          }\n          targetMapping {\n            id\n            name\n          }\n          awsTarget {\n            accountId\n            accountName\n            region\n          }\n          azureTarget {\n            region\n          }\n        }\n        localRetentionLimit {\n          duration\n          unit\n        }\n        objectSpecificConfigs {\n          sapHanaConfig {\n            incrementalFrequency {\n              duration\n              unit\n            }\n            differentialFrequency {\n              duration\n              unit\n            }\n            logRetention {\n              duration\n              unit\n            }\n          }\n          awsRdsConfig {\n            logRetention {\n              duration\n            }\n          }\n          vmwareVmConfig {\n            logRetentionSeconds\n          }\n        }\n        clusterToSyncStatusMap {\n          clusterUuid\n          slaSyncStatus\n        }\n        objectTypes\n        upgradeInfo {\n          eligibility {\n            isEligible\n            ineligibilityReason\n          }\n          latestUpgrade {\n            status\n            msg\n          }\n        }\n        allOrgsHavingAccess {\n          id\n          name\n        }\n        ownerOrg {\n          id\n          name\n        }\n        isRetentionLockedSla\n      }\n      ... on ClusterSlaDomain {\n        cdmId\n        name\n        cluster {\n          name\n          version\n        }\n        snapshotSchedule {\n          minute {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          hourly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          daily {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          weekly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfWeek\n          }\n          monthly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfMonth\n          }\n          quarterly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfQuarter\n            quarterStartMonth\n          }\n          yearly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfYear\n            yearStartMonth\n          }\n        }\n        backupWindows {\n          durationInHours\n          startTimeAttributes {\n            hour\n            minute\n          }\n        }\n        firstFullBackupWindows {\n          durationInHours\n          startTimeAttributes {\n            dayOfWeek {\n              day\n            }\n            hour\n            minute\n          }\n        }\n        archivalSpec {\n          threshold\n          thresholdUnit\n          archivalLocationName\n          archivalLocationId\n          archivalTieringSpec {\n            coldStorageClass\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n        }\n        replicationSpecsV2 {\n          retentionDuration {\n            duration\n            unit\n          }\n          cluster {\n            id\n            name\n          }\n          targetMapping {\n            id\n            name\n          }\n          awsTarget {\n            accountId\n            accountName\n            region\n          }\n          azureTarget {\n            region\n          }\n        }\n        localRetentionLimit {\n          duration\n          unit\n        }\n        upgradeInfo {\n          eligibility {\n            isEligible\n            ineligibilityReason\n          }\n          latestUpgrade {\n            status\n            msg\n          }\n        }\n        ownerOrg {\n          id\n          name\n        }\n        isRetentionLockedSla\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscSla -Name \"Foo\"\n</code></pre> <p>Note</p> <p>Name filtering in <code>slaDomains</code> is partial matching. If you provide the name \"bronze\", it will also return any other SLA domain with that name (e.g. \"super-bronze\").</p>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/#retrieve-an-individual-sla","title":"Retrieve an Individual SLA","text":"GraphQLPowerShell SDK <pre><code>query slaDomain {\n  slaDomain(id: \"0CC22D1B-B761-4EF3-BC5B-82706D97FB05\") {\n    id\n    name\n    ... on GlobalSlaReply {\n      isDefault\n      description\n      snapshotSchedule {\n        minute {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n        }\n        hourly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n        }\n        daily {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n        }\n        weekly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n          dayOfWeek\n        }\n        monthly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n          dayOfMonth\n        }\n        quarterly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n          dayOfQuarter\n          quarterStartMonth\n        }\n        yearly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n          dayOfYear\n          yearStartMonth\n        }\n      }\n      archivalSpecs {\n        threshold\n        thresholdUnit\n        archivalLocationToClusterMapping {\n          cluster {\n            id\n            name\n          }\n          location {\n            id\n            name\n            targetType\n          }\n        }\n        storageSetting {\n          id\n          name\n          groupType\n        }\n        archivalTieringSpec {\n          coldStorageClass\n          minAccessibleDurationInSeconds\n          isInstantTieringEnabled\n        }\n        frequencies\n      }\n      archivalLocationsUpgradeInfo {\n        locationId\n        upgradeStatus\n        upgradeUnsupportedReason\n      }\n      backupWindows {\n        durationInHours\n        startTimeAttributes {\n          hour\n          minute\n        }\n      }\n      firstFullBackupWindows {\n        durationInHours\n        startTimeAttributes {\n          dayOfWeek {\n            day\n          }\n          hour\n          minute\n        }\n      }\n      replicationSpecsV2 {\n        replicationPairs {\n          sourceCluster {\n            id\n            name\n          }\n          targetCluster {\n            id\n            name\n            version\n            clusterInfo {\n              ... on LocalClusterInfo {\n                isIsolated: isAirGapped\n                isConnected\n              }\n              ... on CrossAccountClusterInfo {\n                originAccount\n                isConnected\n              }\n            }\n          }\n        }\n        replicationLocalRetentionDuration {\n          duration\n          unit\n        }\n        cascadingArchivalSpecs {\n          archivalTieringSpec {\n            coldStorageClass\n            shouldTierExistingSnapshots\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n          archivalLocationToClusterMapping {\n            cluster {\n              id\n              name\n              version\n              clusterInfo {\n                ... on LocalClusterInfo {\n                  isIsolated: isAirGapped\n                  isConnected\n                }\n                ... on CrossAccountClusterInfo {\n                  originAccount\n                  isConnected\n                }\n              }\n            }\n            location {\n              id\n              name\n              targetType\n              ... on RubrikManagedAwsTarget {\n                storageClass\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on CdmManagedAwsTarget {\n                storageClass\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on CdmManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedRcsTarget {\n                immutabilityPeriodDays\n                syncStatus\n                tier\n              }\n              ... on RubrikManagedS3CompatibleTarget {\n                immutabilitySetting {\n                  bucketLockDurationDays\n                }\n              }\n            }\n          }\n          archivalLocation {\n            id\n            name\n            targetType\n            ... on RubrikManagedAwsTarget {\n              storageClass\n              immutabilitySettings {\n                lockDurationDays\n              }\n            }\n            ... on RubrikManagedAzureTarget {\n              immutabilitySettings {\n                lockDurationDays\n              }\n            }\n            ... on CdmManagedAwsTarget {\n              storageClass\n              immutabilitySettings {\n                lockDurationDays\n              }\n            }\n            ... on CdmManagedAzureTarget {\n              immutabilitySettings {\n                lockDurationDays\n              }\n            }\n            ... on RubrikManagedRcsTarget {\n              immutabilityPeriodDays\n              syncStatus\n              tier\n            }\n            ... on RubrikManagedS3CompatibleTarget {\n              immutabilitySetting {\n                bucketLockDurationDays\n              }\n            }\n          }\n          frequency\n          archivalThreshold {\n            duration\n            unit\n          }\n        }\n        retentionDuration {\n          duration\n          unit\n        }\n        cluster {\n          id\n          name\n          version\n          clusterInfo {\n            ... on LocalClusterInfo {\n              isIsolated: isAirGapped\n              isConnected\n            }\n            ... on CrossAccountClusterInfo {\n              originAccount\n              isConnected\n            }\n          }\n        }\n        targetMapping {\n          id\n          name\n          targets {\n            id\n            name\n            cluster {\n              id\n              name\n            }\n          }\n        }\n        awsTarget {\n          accountId\n          accountName\n          region\n        }\n        azureTarget {\n          region\n        }\n      }\n      localRetentionLimit {\n        duration\n        unit\n      }\n      objectSpecificConfigs {\n        awsRdsConfig {\n          logRetention {\n            duration\n            unit\n          }\n        }\n        sapHanaConfig {\n          incrementalFrequency {\n            duration\n            unit\n          }\n          differentialFrequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n        }\n        db2Config {\n          incrementalFrequency {\n            duration\n            unit\n          }\n          differentialFrequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n        }\n        mongoConfig {\n          logFrequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n        }\n        mssqlConfig {\n          frequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n        }\n        oracleConfig {\n          frequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n          hostLogRetention {\n            duration\n            unit\n          }\n        }\n        vmwareVmConfig {\n          logRetentionSeconds\n        }\n        azureSqlDatabaseDbConfig {\n          logRetentionInDays\n        }\n        azureSqlManagedInstanceDbConfig {\n          logRetentionInDays\n        }\n      }\n      clusterToSyncStatusMap {\n        clusterUuid\n        slaSyncStatus\n      }\n      objectTypes\n      upgradeInfo {\n        eligibility {\n          isEligible\n          ineligibilityReason\n        }\n        latestUpgrade {\n          status\n          msg\n        }\n      }\n      allOrgsHavingAccess {\n        id\n        name\n      }\n      isRetentionLockedSla\n      retentionLockMode\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscSla -Id \"0CC22D1B-B761-4EF3-BC5B-82706D97FB05\"\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/assignment/","title":"Assignment","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/assignment/#assigning-an-sla-to-a-workload","title":"Assigning an SLA to a workload","text":"GraphQLPowerShell SDK <pre><code>mutation assignSla {\n  assignSla(input: {\n    slaDomainAssignType: protectWithSlaId\n    slaOptionalId: \"CC4AFC96-A8DD-401F-A618-1C03742D21AA\"\n    objectIds: [\"DEF42837-C14D-45E2-8F11-F1BE9ED50F4E\"]\n    # shouldApplyToExistingSnapshots: true # optional. if you want existing snaps applied to new SLA assignment\n    # existingSnapshotRetention: RETAIN_SNAPSHOTS # optional. What do you want to do with the old snaps if you change to DONOTPROTECT?\n  }) {\n    success\n  }\n}\n</code></pre> <pre><code>$vm = Get-RscVmwareVm -Name \"foo\"\n$sla = Get-RscSla -Name \"Bar\"\n$vm | Protect-RscWorkload -Sla $sla\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/assignment/#assigning-an-sla-to-a-snapshot","title":"Assigning an SLA to a snapshot","text":"GraphQLPowerShell SDKShell <pre><code>mutation AssignSlaToSnapshot {\n  assignRetentionSLAToSnapshots(\n    snapshotFids: [\"b77f85ae-62d1-435b-9abf-2a1d97c6802f\"]\n    globalSlaAssignType: protectWithSlaId\n    globalSlaOptionalFid: \"5b6e44ca-9a0d-42e8-a6ba-952159c69bab\"\n  ) {\n    success\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/creating-and-modifying/","title":"Creating and modifying","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/creating-and-modifying/#creating-an-sla-domain","title":"Creating an SLA Domain","text":"<p>SLA domains can range from simple to very complex policy definitions.</p> GraphQLPowerShell SDKShell <pre><code>mutation createSla {\n  createGlobalSla(input: {\n    name: \"foo\"\n    objectTypes: [VSPHERE_OBJECT_TYPE MSSQL_OBJECT_TYPE]\n    snapshotSchedule: {\n      daily: {\n        basicSchedule: {\n          frequency: 1\n          retention: 7\n          retentionUnit: DAYS\n        }\n      }\n    }\n  }) {\n    name\n    id\n  }\n}\n</code></pre> <pre><code>$dailySchedule = New-RscSlaSnapshotSchedule -Type daily -Frequency 1 -Retention 2 -RetentionUnit DAYS\nNew-RscSla -name \"foo\" -DailySchedule $dailySchedule -ObjectType VSPHERE_OBJECT_TYPE,MSSQL_OBJECT_TYPE\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/creating-and-modifying/#modifying-an-sla-domain","title":"Modifying an SLA Domain","text":"<p>Modification of an SLA requires the entire SLA object to be passed in to the mutation. If every property is not passed in, the SLA update will either fail, or will be updated with only the portions of the object that were passed in to the update arguments.</p> GraphQLPowerShell SDKShell <pre><code>mutation createSla {\n  updateGlobalSla(input: {\n    id: \"2794261b-0e3b-4eab-8a32-f1ce4579e8c7\"\n    name: \"foo\"\n    objectTypes: [VSPHERE_OBJECT_TYPE MSSQL_OBJECT_TYPE]\n    description: \"This is my foo SLA Domain\"\n    snapshotSchedule: {\n      daily: {\n        basicSchedule: {\n          frequency: 1\n          retention: 7\n          retentionUnit: DAYS\n        }\n      }\n    }\n  }) {\n    name\n    id\n  }\n}\n</code></pre> <pre><code>$sla = Get-RscSla \"foo\"\n$sla | Set-RscSla -Description \"This is my foo SLA\"\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-domains/","title":"SLA Domains","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-domains/#what-are-sla-domains","title":"What are SLA Domains?","text":"<p>Rubrik SLA Domains are data protection policies that define:</p> <ul> <li>The object types for which the policy can be applied</li> <li>The frequency of the backups</li> <li>The retention of the backups</li> <li>The replication destination of the backups</li> <li>The archival location of the backups</li> <li>Object specific settings based on the type (e.g. MSSQL Database)</li> </ul>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-domains/#retrieve-all-slas","title":"Retrieve All SLAs","text":"GraphQLPowerShell SDK <pre><code>query slaDomains {\n  slaDomains {\n    nodes {\n      id\n      name\n      ... on GlobalSlaReply {\n        isDefault\n        description\n        snapshotSchedule {\n          minute {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          hourly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          daily {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          weekly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfWeek\n          }\n          monthly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfMonth\n          }\n          quarterly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfQuarter\n            quarterStartMonth\n          }\n          yearly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfYear\n            yearStartMonth\n          }\n        }\n        archivalSpecs {\n          threshold\n          thresholdUnit\n          storageSetting {\n            id\n            name\n            groupType\n          }\n          archivalTieringSpec {\n            coldStorageClass\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n        }\n        backupWindows {\n          durationInHours\n          startTimeAttributes {\n            hour\n            minute\n          }\n        }\n        firstFullBackupWindows {\n          durationInHours\n          startTimeAttributes {\n            dayOfWeek {\n              day\n            }\n            hour\n            minute\n          }\n        }\n        replicationSpecsV2 {\n          replicationLocalRetentionDuration {\n            duration\n            unit\n          }\n          cascadingArchivalSpecs {\n            archivalTieringSpec {\n              coldStorageClass\n              shouldTierExistingSnapshots\n              minAccessibleDurationInSeconds\n              isInstantTieringEnabled\n            }\n            archivalLocation {\n              id\n              name\n              targetType\n              ... on RubrikManagedAwsTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedNfsTarget {\n                host\n              }\n              ... on CdmManagedAwsTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on CdmManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n            }\n            frequency\n            archivalThreshold {\n              duration\n              unit\n            }\n          }\n          retentionDuration {\n            duration\n            unit\n          }\n          cluster {\n            id\n            name\n          }\n          targetMapping {\n            id\n            name\n          }\n          awsTarget {\n            accountId\n            accountName\n            region\n          }\n          azureTarget {\n            region\n          }\n        }\n        localRetentionLimit {\n          duration\n          unit\n        }\n        objectSpecificConfigs {\n          sapHanaConfig {\n            incrementalFrequency {\n              duration\n              unit\n            }\n            differentialFrequency {\n              duration\n              unit\n            }\n            logRetention {\n              duration\n              unit\n            }\n          }\n          awsRdsConfig {\n            logRetention {\n              duration\n            }\n          }\n          vmwareVmConfig {\n            logRetentionSeconds\n          }\n        }\n        clusterToSyncStatusMap {\n          clusterUuid\n          slaSyncStatus\n        }\n        objectTypes\n        upgradeInfo {\n          eligibility {\n            isEligible\n            ineligibilityReason\n          }\n          latestUpgrade {\n            status\n            msg\n          }\n        }\n        allOrgsHavingAccess {\n          id\n          name\n        }\n        ownerOrg {\n          id\n          name\n        }\n        isRetentionLockedSla\n      }\n      ... on ClusterSlaDomain {\n        cdmId\n        name\n        cluster {\n          name\n          version\n        }\n        snapshotSchedule {\n          minute {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          hourly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          daily {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          weekly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfWeek\n          }\n          monthly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfMonth\n          }\n          quarterly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfQuarter\n            quarterStartMonth\n          }\n          yearly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfYear\n            yearStartMonth\n          }\n        }\n        backupWindows {\n          durationInHours\n          startTimeAttributes {\n            hour\n            minute\n          }\n        }\n        firstFullBackupWindows {\n          durationInHours\n          startTimeAttributes {\n            dayOfWeek {\n              day\n            }\n            hour\n            minute\n          }\n        }\n        archivalSpec {\n          threshold\n          thresholdUnit\n          archivalLocationName\n          archivalLocationId\n          archivalTieringSpec {\n            coldStorageClass\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n        }\n        replicationSpecsV2 {\n          retentionDuration {\n            duration\n            unit\n          }\n          cluster {\n            id\n            name\n          }\n          targetMapping {\n            id\n            name\n          }\n          awsTarget {\n            accountId\n            accountName\n            region\n          }\n          azureTarget {\n            region\n          }\n        }\n        localRetentionLimit {\n          duration\n          unit\n        }\n        upgradeInfo {\n          eligibility {\n            isEligible\n            ineligibilityReason\n          }\n          latestUpgrade {\n            status\n            msg\n          }\n        }\n        ownerOrg {\n          id\n          name\n        }\n        isRetentionLockedSla\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscSla\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-domains/#retrieve-an-sla-by-name","title":"Retrieve an SLA by Name","text":"<p>Generally, the name of the SLA may be known, but not the ID. The <code>slaDomains</code> query allows filtering on several fields, including <code>NAME</code>.</p> GraphQLPowerShell SDK <pre><code>query slaDomains {\n  slaDomains(filter: {field: NAME text: \"foo\"}) {\n    nodes {\n      id\n      name\n      ... on GlobalSlaReply {\n        isDefault\n        description\n        snapshotSchedule {\n          minute {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          hourly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          daily {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          weekly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfWeek\n          }\n          monthly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfMonth\n          }\n          quarterly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfQuarter\n            quarterStartMonth\n          }\n          yearly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfYear\n            yearStartMonth\n          }\n        }\n        archivalSpecs {\n          threshold\n          thresholdUnit\n          storageSetting {\n            id\n            name\n            groupType\n          }\n          archivalTieringSpec {\n            coldStorageClass\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n        }\n        backupWindows {\n          durationInHours\n          startTimeAttributes {\n            hour\n            minute\n          }\n        }\n        firstFullBackupWindows {\n          durationInHours\n          startTimeAttributes {\n            dayOfWeek {\n              day\n            }\n            hour\n            minute\n          }\n        }\n        replicationSpecsV2 {\n          replicationLocalRetentionDuration {\n            duration\n            unit\n          }\n          cascadingArchivalSpecs {\n            archivalTieringSpec {\n              coldStorageClass\n              shouldTierExistingSnapshots\n              minAccessibleDurationInSeconds\n              isInstantTieringEnabled\n            }\n            archivalLocation {\n              id\n              name\n              targetType\n              ... on RubrikManagedAwsTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedNfsTarget {\n                host\n              }\n              ... on CdmManagedAwsTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on CdmManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n            }\n            frequency\n            archivalThreshold {\n              duration\n              unit\n            }\n          }\n          retentionDuration {\n            duration\n            unit\n          }\n          cluster {\n            id\n            name\n          }\n          targetMapping {\n            id\n            name\n          }\n          awsTarget {\n            accountId\n            accountName\n            region\n          }\n          azureTarget {\n            region\n          }\n        }\n        localRetentionLimit {\n          duration\n          unit\n        }\n        objectSpecificConfigs {\n          sapHanaConfig {\n            incrementalFrequency {\n              duration\n              unit\n            }\n            differentialFrequency {\n              duration\n              unit\n            }\n            logRetention {\n              duration\n              unit\n            }\n          }\n          awsRdsConfig {\n            logRetention {\n              duration\n            }\n          }\n          vmwareVmConfig {\n            logRetentionSeconds\n          }\n        }\n        clusterToSyncStatusMap {\n          clusterUuid\n          slaSyncStatus\n        }\n        objectTypes\n        upgradeInfo {\n          eligibility {\n            isEligible\n            ineligibilityReason\n          }\n          latestUpgrade {\n            status\n            msg\n          }\n        }\n        allOrgsHavingAccess {\n          id\n          name\n        }\n        ownerOrg {\n          id\n          name\n        }\n        isRetentionLockedSla\n      }\n      ... on ClusterSlaDomain {\n        cdmId\n        name\n        cluster {\n          name\n          version\n        }\n        snapshotSchedule {\n          minute {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          hourly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          daily {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          weekly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfWeek\n          }\n          monthly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfMonth\n          }\n          quarterly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfQuarter\n            quarterStartMonth\n          }\n          yearly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfYear\n            yearStartMonth\n          }\n        }\n        backupWindows {\n          durationInHours\n          startTimeAttributes {\n            hour\n            minute\n          }\n        }\n        firstFullBackupWindows {\n          durationInHours\n          startTimeAttributes {\n            dayOfWeek {\n              day\n            }\n            hour\n            minute\n          }\n        }\n        archivalSpec {\n          threshold\n          thresholdUnit\n          archivalLocationName\n          archivalLocationId\n          archivalTieringSpec {\n            coldStorageClass\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n        }\n        replicationSpecsV2 {\n          retentionDuration {\n            duration\n            unit\n          }\n          cluster {\n            id\n            name\n          }\n          targetMapping {\n            id\n            name\n          }\n          awsTarget {\n            accountId\n            accountName\n            region\n          }\n          azureTarget {\n            region\n          }\n        }\n        localRetentionLimit {\n          duration\n          unit\n        }\n        upgradeInfo {\n          eligibility {\n            isEligible\n            ineligibilityReason\n          }\n          latestUpgrade {\n            status\n            msg\n          }\n        }\n        ownerOrg {\n          id\n          name\n        }\n        isRetentionLockedSla\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscSla -Name \"Foo\"\n</code></pre> <p>Note</p> <p>Name filtering in <code>slaDomains</code> is partial matching. If you provide the name \"bronze\", it will also return any other SLA domain with that name (e.g. \"super-bronze\").</p>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-domains/#retrieve-an-individual-sla","title":"Retrieve an Individual SLA","text":"GraphQLPowerShell SDK <pre><code>query slaDomain {\n  slaDomain(id: \"0CC22D1B-B761-4EF3-BC5B-82706D97FB05\") {\n    id\n    name\n    ... on GlobalSlaReply {\n      isDefault\n      description\n      snapshotSchedule {\n        minute {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n        }\n        hourly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n        }\n        daily {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n        }\n        weekly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n          dayOfWeek\n        }\n        monthly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n          dayOfMonth\n        }\n        quarterly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n          dayOfQuarter\n          quarterStartMonth\n        }\n        yearly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n          dayOfYear\n          yearStartMonth\n        }\n      }\n      archivalSpecs {\n        threshold\n        thresholdUnit\n        archivalLocationToClusterMapping {\n          cluster {\n            id\n            name\n          }\n          location {\n            id\n            name\n            targetType\n          }\n        }\n        storageSetting {\n          id\n          name\n          groupType\n        }\n        archivalTieringSpec {\n          coldStorageClass\n          minAccessibleDurationInSeconds\n          isInstantTieringEnabled\n        }\n        frequencies\n      }\n      archivalLocationsUpgradeInfo {\n        locationId\n        upgradeStatus\n        upgradeUnsupportedReason\n      }\n      backupWindows {\n        durationInHours\n        startTimeAttributes {\n          hour\n          minute\n        }\n      }\n      firstFullBackupWindows {\n        durationInHours\n        startTimeAttributes {\n          dayOfWeek {\n            day\n          }\n          hour\n          minute\n        }\n      }\n      replicationSpecsV2 {\n        replicationPairs {\n          sourceCluster {\n            id\n            name\n          }\n          targetCluster {\n            id\n            name\n            version\n            clusterInfo {\n              ... on LocalClusterInfo {\n                isIsolated: isAirGapped\n                isConnected\n              }\n              ... on CrossAccountClusterInfo {\n                originAccount\n                isConnected\n              }\n            }\n          }\n        }\n        replicationLocalRetentionDuration {\n          duration\n          unit\n        }\n        cascadingArchivalSpecs {\n          archivalTieringSpec {\n            coldStorageClass\n            shouldTierExistingSnapshots\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n          archivalLocationToClusterMapping {\n            cluster {\n              id\n              name\n              version\n              clusterInfo {\n                ... on LocalClusterInfo {\n                  isIsolated: isAirGapped\n                  isConnected\n                }\n                ... on CrossAccountClusterInfo {\n                  originAccount\n                  isConnected\n                }\n              }\n            }\n            location {\n              id\n              name\n              targetType\n              ... on RubrikManagedAwsTarget {\n                storageClass\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on CdmManagedAwsTarget {\n                storageClass\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on CdmManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedRcsTarget {\n                immutabilityPeriodDays\n                syncStatus\n                tier\n              }\n              ... on RubrikManagedS3CompatibleTarget {\n                immutabilitySetting {\n                  bucketLockDurationDays\n                }\n              }\n            }\n          }\n          archivalLocation {\n            id\n            name\n            targetType\n            ... on RubrikManagedAwsTarget {\n              storageClass\n              immutabilitySettings {\n                lockDurationDays\n              }\n            }\n            ... on RubrikManagedAzureTarget {\n              immutabilitySettings {\n                lockDurationDays\n              }\n            }\n            ... on CdmManagedAwsTarget {\n              storageClass\n              immutabilitySettings {\n                lockDurationDays\n              }\n            }\n            ... on CdmManagedAzureTarget {\n              immutabilitySettings {\n                lockDurationDays\n              }\n            }\n            ... on RubrikManagedRcsTarget {\n              immutabilityPeriodDays\n              syncStatus\n              tier\n            }\n            ... on RubrikManagedS3CompatibleTarget {\n              immutabilitySetting {\n                bucketLockDurationDays\n              }\n            }\n          }\n          frequency\n          archivalThreshold {\n            duration\n            unit\n          }\n        }\n        retentionDuration {\n          duration\n          unit\n        }\n        cluster {\n          id\n          name\n          version\n          clusterInfo {\n            ... on LocalClusterInfo {\n              isIsolated: isAirGapped\n              isConnected\n            }\n            ... on CrossAccountClusterInfo {\n              originAccount\n              isConnected\n            }\n          }\n        }\n        targetMapping {\n          id\n          name\n          targets {\n            id\n            name\n            cluster {\n              id\n              name\n            }\n          }\n        }\n        awsTarget {\n          accountId\n          accountName\n          region\n        }\n        azureTarget {\n          region\n        }\n      }\n      localRetentionLimit {\n        duration\n        unit\n      }\n      objectSpecificConfigs {\n        awsRdsConfig {\n          logRetention {\n            duration\n            unit\n          }\n        }\n        sapHanaConfig {\n          incrementalFrequency {\n            duration\n            unit\n          }\n          differentialFrequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n        }\n        db2Config {\n          incrementalFrequency {\n            duration\n            unit\n          }\n          differentialFrequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n        }\n        mongoConfig {\n          logFrequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n        }\n        mssqlConfig {\n          frequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n        }\n        oracleConfig {\n          frequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n          hostLogRetention {\n            duration\n            unit\n          }\n        }\n        vmwareVmConfig {\n          logRetentionSeconds\n        }\n        azureSqlDatabaseDbConfig {\n          logRetentionInDays\n        }\n        azureSqlManagedInstanceDbConfig {\n          logRetentionInDays\n        }\n      }\n      clusterToSyncStatusMap {\n        clusterUuid\n        slaSyncStatus\n      }\n      objectTypes\n      upgradeInfo {\n        eligibility {\n          isEligible\n          ineligibilityReason\n        }\n        latestUpgrade {\n          status\n          msg\n        }\n      }\n      allOrgsHavingAccess {\n        id\n        name\n      }\n      isRetentionLockedSla\n      retentionLockMode\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscSla -Id \"0CC22D1B-B761-4EF3-BC5B-82706D97FB05\"\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-domains/assignment/","title":"Assignment","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-domains/assignment/#assigning-an-sla-to-a-workload","title":"Assigning an SLA to a workload","text":"GraphQLPowerShell SDK <pre><code>mutation assignSla {\n  assignSla(input: {\n    slaDomainAssignType: protectWithSlaId\n    slaOptionalId: \"CC4AFC96-A8DD-401F-A618-1C03742D21AA\"\n    objectIds: [\"DEF42837-C14D-45E2-8F11-F1BE9ED50F4E\"]\n    # shouldApplyToExistingSnapshots: true # optional. if you want existing snaps applied to new SLA assignment\n    # existingSnapshotRetention: RETAIN_SNAPSHOTS # optional. What do you want to do with the old snaps if you change to DONOTPROTECT?\n  }) {\n    success\n  }\n}\n</code></pre> <pre><code>$vm = Get-RscVmwareVm -Name \"foo\"\n$sla = Get-RscSla -Name \"Bar\"\n$vm | Protect-RscWorkload -Sla $sla\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-domains/assignment/#assigning-an-sla-to-a-snapshot","title":"Assigning an SLA to a snapshot","text":"GraphQLPowerShell SDKShell <pre><code>mutation AssignSlaToSnapshot {\n  assignRetentionSLAToSnapshots(\n    snapshotFids: [\"b77f85ae-62d1-435b-9abf-2a1d97c6802f\"]\n    globalSlaAssignType: protectWithSlaId\n    globalSlaOptionalFid: \"5b6e44ca-9a0d-42e8-a6ba-952159c69bab\"\n  ) {\n    success\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-domains/creating-and-modifying/","title":"Creating and modifying","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-domains/creating-and-modifying/#creating-an-sla-domain","title":"Creating an SLA Domain","text":"<p>SLA domains can range from simple to very complex policy definitions.</p> GraphQLPowerShell SDKShell <pre><code>mutation createSla {\n  createGlobalSla(input: {\n    name: \"foo\"\n    objectTypes: [VSPHERE_OBJECT_TYPE MSSQL_OBJECT_TYPE]\n    snapshotSchedule: {\n      daily: {\n        basicSchedule: {\n          frequency: 1\n          retention: 7\n          retentionUnit: DAYS\n        }\n      }\n    }\n  }) {\n    name\n    id\n  }\n}\n</code></pre> <pre><code>$dailySchedule = New-RscSlaSnapshotSchedule -Type daily -Frequency 1 -Retention 2 -RetentionUnit DAYS\nNew-RscSla -name \"foo\" -DailySchedule $dailySchedule -ObjectType VSPHERE_OBJECT_TYPE,MSSQL_OBJECT_TYPE\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-domains/creating-and-modifying/#modifying-an-sla-domain","title":"Modifying an SLA Domain","text":"<p>Modification of an SLA requires the entire SLA object to be passed in to the mutation. If every property is not passed in, the SLA update will either fail, or will be updated with only the portions of the object that were passed in to the update arguments.</p> GraphQLPowerShell SDKShell <pre><code>mutation createSla {\n  updateGlobalSla(input: {\n    id: \"2794261b-0e3b-4eab-8a32-f1ce4579e8c7\"\n    name: \"foo\"\n    objectTypes: [VSPHERE_OBJECT_TYPE MSSQL_OBJECT_TYPE]\n    description: \"This is my foo SLA Domain\"\n    snapshotSchedule: {\n      daily: {\n        basicSchedule: {\n          frequency: 1\n          retention: 7\n          retentionUnit: DAYS\n        }\n      }\n    }\n  }) {\n    name\n    id\n  }\n}\n</code></pre> <pre><code>$sla = Get-RscSla \"foo\"\n$sla | Set-RscSla -Description \"This is my foo SLA\"\n</code></pre> <pre><code>\n</code></pre>"}]}