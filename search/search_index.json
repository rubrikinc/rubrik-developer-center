{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-the-rubrik-developer-guide","title":"Welcome to the Rubrik Developer Guide!","text":"<p>Rubrik's API-First Architecture increases operational efficiency and maximizes the investment and experience of the data security platform.</p> <ul> <li> <p> Rubrik Security Cloud API</p> <ul> <li>SLA Domain Management</li> <li>SLA Assignment</li> <li>On-Demand Backups</li> <li>Recovery Operations</li> <li>Data Security Posture</li> <li>Data Threat Analytics</li> <li>Reporting</li> </ul> <p> Get Started</p> </li> </ul> <ul> <li> <p> Rubrik Cluster API</p> <ul> <li>On-demand backups</li> <li>Recovery operations</li> </ul> <p> Get Started</p> </li> </ul>"},{"location":"Integrations/","title":"Rubrik Security Cloud Integrations","text":"<ul> <li> <p>ServiceNow Self-Service Workflows</p> <ul> <li>Provides lightweight independent discovery outside of CMDB into custom data tables</li> <li>Pre-built dashboards for capacity and job reporting</li> <li>Self-Service workflows for Rubrik admins, including restore and on-demand backups</li> <li>No additional Rubrik licensing required </li> <li>Requires ServiceNow ITSM</li> <li>No custom table fees or licenses for the integration</li> </ul> <p> ServiceNow Store</p> </li> </ul> <ul> <li> <p>ServiceNow Rubrik Service Graph Connector</p> <ul> <li>CMDB discovery for Rubrik assets and protected workloads</li> <li>Fully customizable and extendable to add additional workload types and data mappings</li> <li>No additional Rubrik licensing required</li> <li>Requires ServiceNow ITOM</li> </ul> <p> ServiceNow Store</p> </li> </ul> <ul> <li> <p>ServiceNow Automatic Incident Creation</p> <ul> <li>Send ANY Rubrik events to ServiceNow scripted rest endpoint, or EventManagement endpoint</li> <li>No integration installation required</li> <li>Sending events to ServiceNow Event Management requires ServiceNow ITOM</li> <li>Sending events to ServiceNow scripted REST endpoint has no requirements</li> <li>Incident creation requires ITSM and an incident creation script</li> </ul> <p> RSC Docs</p> </li> </ul> <ul> <li> <p>Rubrik Ticketing Integration</p> <ul> <li>Create ServiceNow incidents with a single click for data access issues in Data Security Posture</li> <li>No integration installation required</li> <li>Requires Rubrik Enterprise Proactive Edition</li> <li>Incident creation requires ITSM and an incident creation script</li> </ul> <p> RSC Docs</p> </li> </ul>"},{"location":"Rubrik-Cluster-API/","title":"Rubrik Cluster API","text":""},{"location":"Rubrik-Cluster-API/#description","title":"Description","text":"<p>The Rubrik Cluster API is REST based, and is located on each physical or virtual (Cloud Cluster). The primary purposes for this API are:</p> <ol> <li>Offline Recovery - In the event that you've gone dark and are unable to access the Internet, You're still able to automate your disaster recovery plan.</li> <li>Air-gapped Automation - Some systems performing backup automation may not have access to the Internet. A common example is a database server that initiates backups at a very specific time. The database server cloud have a script to freeze and write its logs, and needs to tell Rubrik to initiate the backup.</li> </ol> <p>The Rubrik Cluster API documentation can currently be located on any Rubrik node by navigating to:</p> <p><code>https://&lt;cluster_node&gt;/docs/internal/</code> <code>https://&lt;cluster_node&gt;/docs/v1/</code> <code>https://&lt;cluster_node&gt;/docs/v2/</code> <code>https://&lt;cluster_node&gt;/docs/v3/</code></p>"},{"location":"Rubrik-Security-Cloud-API/","title":"Rubrik Security Cloud API","text":""},{"location":"Rubrik-Security-Cloud-API/#getting-started","title":"Getting Started","text":"<p>The Rubrik Security Cloud (RSC) API is GraphQL.</p>"},{"location":"Rubrik-Security-Cloud-API/#graphql-features","title":"GraphQL Features","text":"<ol> <li>Single Endpoint - The RSC API endpoint will always be /api/graphql.</li> <li>Single HTTP method - Everything is an HTTP POST.</li> <li>Introspection - The API documentation is built in to the API itself, providing integrated development help and schema checking.</li> <li>Customized Response - Queries are customized to only return the fields that is needed.</li> </ol>"},{"location":"Rubrik-Security-Cloud-API/#graphql-basics","title":"GraphQL Basics","text":"<p>GraphQL is a \"query language\" comparable to SQL. In SQL, one might say, \"Select name and ID from the VM table.\" GraphQL is similar in this idea. A query is much like a SQL table. Properties (called fields in GraphQL) are like columns in that table. Unlike SQL, GraphQL fields can be complex types with their own fields, allowing functionality of a SQL join.</p>"},{"location":"Rubrik-Security-Cloud-API/#example","title":"Example","text":"<p>Click on the arrow annotation (1) in the code to see an explanation of that part of the code.</p> <ol> <li>This is an annotation!</li> </ol> <p>Retrieve all MSSQL databases, and return the name, ID, and the name and ID of the Rubrik Cluster that protect's this MSSQL database.</p> <ol> <li><code>mssqlDatabasesExample</code> is an operation name, You can change this to whatever you want.</li> <li><code>mssqlDatabases</code> is the name of the query in the API.</li> <li><code>nodes</code> is a paginated array of objects, in this case, mssqlDatabases.</li> <li><code>name</code> is a property, known as a <code>field</code> in GraphQL. It has a specific type, in this case <code>name</code> is a <code>String</code>.</li> <li><code>cluster</code> is also a field in the API, but unlike <code>name</code> that is of type <code>String</code>, <code>cluster</code> is a <code>Cluster</code> type, and it has its own fields.</li> <li>This is the cluster <code>name</code> field. It's a field on the <code>Cluster</code> type in the API.</li> </ol> <p>To learn more about the query syntax, check out GraphQL Language Syntax. </p> <p>Next: API Playground</p>"},{"location":"Rubrik-Security-Cloud-API/API-playground/","title":"API playground","text":"<p>The API Playground is an integrated development environment (IDE) that you can use to browse, explore, and run GraphQL APIs offered by Rubrik Security Cloud (RSC). The IDE also provides reference to the Rubrik GraphQL API documentation for your version. Running GraphQL queries and mutations in API Playground validates the GraphQL operations so that you can confirm that your queries or mutations will achieve the desired result when included in automation scripts.</p> <p>Initially, access to the playground uses the currently authenticated user credentials. Running queries as a service account is useful for testing permissions and can be accomplished by clicking the \"Test with Service Account\" button in the upper right of the Playground.</p> <p>The ability to access objects and queries depends on the RBAC roles assigned to the user account or service account. For enhanced security, API Playground does not persist the service account access credentials.</p> <p>Danger</p> <p>The GraphQL mutations that run in API Playground perform actions against this instance of RSC. This can result in data loss.</p>"},{"location":"Rubrik-Security-Cloud-API/API-playground/#accessing-api-playground","title":"Accessing API Playground","text":"<p>Access the API Playground through the RSC Settings menu or directly through the browser's url bar.</p> <ol> <li>Log in to RSC.</li> <li>Open the app tray and select Settings. The Settings menu appears.</li> <li>Click API Playground. The API Playground page appears.</li> <li>Click Open API Playground. API Playground opens in a new browser tab.</li> </ol> <p>Alternatively, The playground can be accessed directly by supplying the url in this format:</p> <pre><code>https://&lt;INSTANCE&gt;.my.rubrik.com/playground/\n</code></pre> <p>Copy and paste the below example query into the playground query pane, and click the execute button.</p> <pre><code>{\n  slaDomains {\n    nodes {\n      name\n      id\n    }\n  }\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/API-playground/#sample-output","title":"Sample output","text":"<pre><code>{\n  \"data\": {\n    \"slaDomains\": {\n      \"nodes\": [\n        {\n          \"name\": \"Bronze\",\n          \"id\": \"00000000-0000-0000-0000-000000000002\"\n        },\n        {\n          \"name\": \"Gold\",\n          \"id\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        {\n          \"name\": \"Silver\",\n          \"id\": \"00000000-0000-0000-0000-000000000001\"\n        }\n      ]\n    }\n  }\n}\n</code></pre> <p>Building on the query for SLA Domains, it may be desirable to search by name. The following will walk through using the API documentation in the playground to identify arguments that can be specified for a particular query, and how to implement the arguments.</p> <ol> <li>Hover the mouse cursor over <code>slaDomains</code> in the query.</li> <li>Click on the <code>slaDomains</code> link when the tooltip appears.</li> </ol> <p>A side pane will appear with the API documentation for <code>slaDomains.</code></p> <p>There are 3 sections in the documentation:</p> <ul> <li><code>Type</code> - The type of object that gets returned.</li> <li><code>Arguments</code> - Variables that can be passed into the query, such as filters or sorting preferences.</li> <li><code>Implementations</code> - Additional object types that have their own properties</li> </ul> <p>The arguments have types specified next to the name. The <code>filter</code> argument is a type of <code>[GlobalSlaFilterInput!]</code></p> <ul> <li><code>[]</code> The square braces indicate that we can pass in multiple<code>GlobalSlaFilterInput</code> objects. This means multiple filter objects can be passed in.</li> <li><code>!</code> The exclamation point means \"Non-Null.\" This symbol is used both in arguments and fields that get returned indicating that the field must be supplied.</li> </ul> <p>Click on the <code>GlobalSlaFilterInput</code> type in the documentation. The documentation will navigate to the documentation for this type.</p> <p>To search by name, set the <code>field</code> to <code>NAME</code>. Clicking on <code>GlobalSlaQueryFilterInputField</code> will display the enum values that are available to filter on.</p> <p>Set <code>text</code> to the name of the SLA domain to search for.</p> <p>Note</p> <p>Some queries will have their own filtering arguments that are unique to the context of that object. The API documentation for each query will specify the filtering syntax and capabilities for each query.</p> <p>Arguments are supplied to a query in parenthesis <code>()</code> after the query name. Create the filter object as an argument to the <code>slaDomains</code> query. Change the <code>text</code> content to an SLA domain name in the currently connected RSC instance.</p> <pre><code>{\n  slaDomains(filter: {field: NAME text: \"bronze\"}) {\n    nodes {\n      name\n      id\n    }\n  }\n}\n</code></pre> <p>The result will be only SLA Domains starting with <code>bronze</code></p> <pre><code>{\n  \"data\": {\n    \"slaDomains\": {\n      \"nodes\": [\n        {\n          \"name\": \"Bronze\",\n          \"id\": \"00000000-0000-0000-0000-000000000002\"\n        }\n      ]\n    }\n  }\n}\n</code></pre> <p>Next: Authentication</p>"},{"location":"Rubrik-Security-Cloud-API/authentication/","title":"Authentication","text":""},{"location":"Rubrik-Security-Cloud-API/authentication/#service-accounts-oauth2-client-credentials-grant","title":"Service Accounts (OAuth2 Client Credentials Grant)","text":"<p>A service account represents an application that needs authentication and authorization to invoke Rubrik APIs, as opposed to a user account that represents an individual user. A client ID and client secret are used to authenticate to an authorization server and obtain an access token to invoke the Rubrik APIs. Similar to user accounts, Rubrik allows assigning roles to the service accounts to enable role-based access control. But contrary to user accounts, service accounts cannot be used to access the Rubrik web UI.</p>"},{"location":"Rubrik-Security-Cloud-API/authentication/#security","title":"Security","text":"<p>Service accounts enable client applications and other services to invoke the Rubrik APIs securely. When creating a service account, the authorization server assigns a unique client ID and client secret to the account. The combination of client ID and client secret is known as client credentials. The client credentials are known only to the client that is represented by the service account and the authorization server that grants the credentials to the service account. The client application authenticates to the authorization server using the client credentials and obtains an access token to authenticate to the Rubrik API server and access the protected resources.</p>"},{"location":"Rubrik-Security-Cloud-API/authentication/#guidelines","title":"Guidelines","text":"<p>Consider the following best practices when using service accounts:</p> <ul> <li>One service account should represent only one client application.</li> <li>The role assigned to the service account should be the one with least number of privileges that would be sufficient for the client application being   -epresented by the service account to access the Rubrik APIs.</li> <li>The client credentials must be saved when they are first created as Rubrik does not provide an option to display them again.</li> <li>The client secret must be treated like a password and stored in a secure location.</li> <li>Service account access tokens should be cached and reused until they are valid.</li> </ul>"},{"location":"Rubrik-Security-Cloud-API/authentication/#usage","title":"Usage","text":""},{"location":"Rubrik-Security-Cloud-API/authentication/#adding-a-service-account","title":"Adding a service account","text":"<p>Refer to the RSC user guide: adding a service account</p>"},{"location":"Rubrik-Security-Cloud-API/authentication/#obtaining-an-access-token","title":"Obtaining an access token","text":"<p>In this example, the service account client ID and secret are exported into environment variables and posted to the RSC client_token endpoint. The response contains the access token needed for authenticated API calls. The <code>jq</code> tool is used to parse the access token from the JSON response and stored in a variable for usage.</p> Shell <pre><code>export RSC_FQDN=\"example.my.rubrik.com\"\nexport RSC_CLIENT_ID=\"client|c9bba9a9-1234-1234-b7c6-123440b4cf64\"\nexport RSC_CLIENT_SECRET=\"ExampleServiceAccountSecret\"\n\nRSC_TOKEN=$(curl --silent --location \"https://$RSC_FQDN/api/client_token\" \\\n  --header \"Content-Type: application/x-www-form-urlencoded\" \\\n  --data \"client_id=$RSC_CLIENT_ID&amp;client_secret=$RSC_CLIENT_SECRET&amp;grant_type=client_credentials\" | jq -r '.access_token')\n\nexport RSC_TOKEN\n</code></pre> <p>An example response from the authorization server shows the access token and the number of seconds when the token will expire. This time is configurable up to 24 hours within the RSC session security settings. </p> <pre><code>{\"client_id\":\"client|c9bba9a9-1234-1234-b7c6-123440b4cf64\",\"access_token\":\"eyJ...\",\"expires_in\":43200}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/authentication/#using-the-access-token","title":"Using the access token","text":"<p>The access token is used as a <code>Bearer</code> token in the <code>Authorization</code> header of all subsequent API calls.</p> Shell <pre><code>curl --location \"https://$RSC_FQDN/api/graphql\" \\\n--header \"Content-Type: application/json\" \\\n--header \"Authorization: Bearer $RSC_TOKEN\" \\\n--data '{\"query\":\"query slaDomains {nodes {name id}}}\",\"variables\":{}}'\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/authentication/#deleting-a-session","title":"Deleting a session","text":"<p>While there is no restriction on the number of active sessions a service account can have, Rubrik provides an API endpoint to delete an existing session.</p> <p>Run the following command to revoke the session established for the service account. Successful revocation will result in an HTTP status code of <code>204</code>.</p> Shell <pre><code>curl -X DELETE --location \"https://$RSC_FQDN/api/graphql\" \\\n--header \"Content-Type: application/json\" \\\n--header \"Authorization: Bearer $RSC_TOKEN\"\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/","title":"Troubleshooting","text":"<p>Note</p> <p>The response code of the HTTP request will be 200, and the body of the response will contain the HTTP error code.</p> <p>Note</p> <p>It can extremely difficult to troubleshoot code logic without much context. If additional help from the Rubrik support team is required, limit the code shared to only the offending query or SDK method. Include literal variable values to verify what is being passed in to the query or SDK method.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#error-code-400","title":"Error code 400","text":""},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#reason","title":"Reason","text":"<p>These occur when the query is incorrect according to the schema.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#solution","title":"Solution","text":"<p>Verify the query and variables supplied to the query are in accordance with the schema. This can be done with any tool that can validate the query against the schema. The RSC API playground is the easiest way to accomplish this.</p> <p>Example Erroneous Query <pre><code>query {\n  slaDomains {\n    nodes {\n      name\n      id\n      description\n    }\n  }\n}\n</code></pre></p> <p>Example Error Response <pre><code>{\n  \"code\": 400,\n  \"uri\": \"/api/graphql\",\n  \"traceSpan\": {\n    \"traceId\": \"yQq0Pl2VftOESD4kCtiFdg==\",\n    \"operation\": \"/api/graphql\",\n    \"spanId\": \"hEMkvglH1gc=\"\n  },\n  \"message\": \"[QueryAnalysisError] [DLC Team] Encountered Client error (400) executing query with operations: [] and variables {}. Error: Query does not pass validation. Violations:\\n\\nCannot query field 'description' on type 'SlaDomain'. Did you mean to use an inline fragment on 'GlobalSlaReply'? (line 6, column 7):\\n      description\\n      ^\"\n}\n</code></pre></p> <p>The error message states the query doesn't pass validation, and describes the violations saying it cannot query the field <code>description</code>. Many times, the API will give suggestions as to what can be done to correct the query such as \"Did you mean to use an inline fragment on 'GlobalSlaReply'?\" This indicates the field <code>description</code> is actually located on an 'implementation' of the <code>SlaDomain</code> type.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#corrected-query","title":"Corrected Query","text":"<pre><code>query {\n  slaDomains {\n    nodes {\n      name\n      id\n      ... on GlobalSlaReply {\n        description\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#error-code-403","title":"Error Code 403","text":""},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#reason_1","title":"Reason","text":"<p>These errors are the result of a permissions issue. While RBAC is a common cause, the other reason could be that the query, or even a field in the query is behind a feature flag that is not enabled. This occurs when a development feature is deployed into the production API schema behind a feature flag, or the query is a part of licensing that has not been purchased or approved.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#solution_1","title":"Solution","text":"<p>Remove the field, find an alternative query, or be sure that the permissions applied to the service account are sufficient to perform this query.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#example-erroneous-query","title":"Example Erroneous Query","text":"<pre><code>query {\n  clusterConnection(filter: {name: \"example\"}) {\n    nodes {\n      name\n      isTprEnabled\n    }\n  }\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#example-error-response","title":"Example Error Response","text":"<pre><code>{\n  \"data\": {\n    \"clusterConnection\": {\n      \"nodes\": [\n        {\n          \"name\": \"example\",\n          \"isTprEnabled\": null\n        }\n      ]\n    }\n  },\n  \"errors\": [\n    {\n      \"message\": \"Account does not have the appropriate features enabled to access the field.\",\n      \"path\": [\n        \"clusterConnection\",\n        \"nodes\",\n        0,\n        \"isTprEnabled\"\n      ],\n      \"locations\": [\n        {\n          \"line\": 5,\n          \"column\": 7\n        }\n      ],\n      \"extensions\": {\n        \"code\": 403,\n        \"trace\": {\n          \"operation\": \"/api/graphql\",\n          \"traceId\": \"9v0wj/Sm9UVOdUFd1ottJQ==\",\n          \"spanId\": \"Jygbg58zl/M=\"\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#corrected-query_1","title":"Corrected Query","text":"<p><pre><code>query {\n  clusterConnection(filter: {name: \"example\"}) {\n    nodes {\n      name\n    }\n  }\n}\n</code></pre> The offending field mentioned in the error has been removed.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#error-code-404","title":"Error Code 404","text":""},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#reason_2","title":"Reason","text":"<p>These errors indicate you've provided an ID that does not exist for an object using the supplied query. </p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#solution_2","title":"Solution","text":"<p>Identify the correct ID or query to be used.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#example-erroneous-query_1","title":"Example Erroneous Query","text":"<pre><code>query {\n  vSphereVmNew(fid: \"7d303326-7c2c-4ea2-b463-dedb8910d98a\") {\n    name\n    id\n  }\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#example-error-response_1","title":"Example Error Response","text":"<pre><code>{\n  \"data\": null,\n  \"errors\": [\n    {\n      \"message\": \"NOT_FOUND: Unable to find managed object for ID or you are not authorized to access it\",\n      \"path\": [\n        \"vSphereVmNew\"\n      ],\n      \"locations\": [\n        {\n          \"line\": 2,\n          \"column\": 3\n        }\n      ],\n      \"extensions\": {\n        \"code\": 404,\n        \"trace\": {\n          \"operation\": \"/api/graphql\",\n          \"traceId\": \"gwzt2HR5GinN4PrhQfJ+Bg==\",\n          \"spanId\": \"/MR1LoaAiD8=\"\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#error-code-500","title":"Error Code 500","text":""},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#reason_3","title":"Reason","text":"<p>These errors are server-side, and a defect should be filed immediately. It could be that the query is not being used as intended, but the API should catch this. This error indicates that the API let the call through to the back-end service and the service is responding with an error. Essentially this is an \u201cuncaught exception.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#solution_3","title":"Solution","text":"<p>File an engineering case with the product team that owns this query. If possible, use a different query.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#example-erroneous-query_2","title":"Example Erroneous Query","text":"<pre><code>mutation {\n  takeOnDemandSnapshot(input: {workloadIds: \"fef3f155-7092-5b19-bcea-fe8021c38dc6\" slaId: \"c2c3823f-d74d-49a1-afbe-8d7e0a4d3b7c\"}) {\n    taskchainUuids {\n      taskchainUuid\n    }\n  }\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#example-error-response_2","title":"Example Error Response","text":"<pre><code>{\n  \"data\": null,\n  \"errors\": [\n    {\n      \"message\": \"The on-demand snapshot is not supported for given workload type: Mssql\",\n      \"path\": [\n        \"takeOnDemandSnapshot\"\n      ],\n      \"locations\": [\n        {\n          \"line\": 2,\n          \"column\": 3\n        }\n      ],\n      \"extensions\": {\n        \"code\": 500,\n        \"trace\": {\n          \"operation\": \"/api/graphql\",\n          \"traceId\": \"7hcbDGDPt7EqAkBQ1vSu/A==\",\n          \"spanId\": \"HrzcWppCISg=\"\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#corrected-query_2","title":"Corrected Query","text":"<p><pre><code>mutation {\n createOnDemandMssqlBackup(\n  input: {\n    id: \"fef3f155-7092-5b19-bcea-fe8021c38dc6\" \n    config:{\n      baseOnDemandSnapshotConfig: {\n        slaId: \"c2c3823f-d74d-49a1-afbe-8d7e0a4d3b7c\"\n      }\n    }\n  }) {\n    id\n  }\n}\n</code></pre> The query was updated to utilize the correct mutation for performing an on-demand snapshot of an MSSQL server.</p>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/","title":"Rubrik Annapurna","text":""},{"location":"Rubrik-Security-Cloud-API/Annapurna/#what-is-rubrik-annapurna","title":"What is Rubrik Annapurna?","text":"<p>Rubrik Annapurna turns snapshot data into a secure, central library of knowledge for AI applications.</p> <ul> <li> <p>No Expensive Data Lake Required</p> <p>Rubrik provides a centralized place to create retrievers for a multitude of data sources. This greatly simplifies the process by having a single API and retriever for heterogeneus data.</p> </li> <li> <p>Built-in Data Security Policies</p> <p>Policies applied to a retriever can eliminate the accidental leakage of sensitive data to LLMs. This protects against sensitive data leakage to Large Language Models(LLMs).</p> </li> <li> <p>Pass-Through File Permissions</p> <p>Permissions set on the source file are respected by the retriever. Only users that have access to the file in production will have access from the retriever.</p> </li> <li> <p>Application-Aware Embedding</p> <p>Leverage intelligent embeddings tailored for third-party or custom app data schemas to enhance compatibility, performance, and time to value.</p> </li> </ul>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/#how-annapurna-works","title":"How Annapurna works","text":"<p>Rubrik Annapurna retrievers or \"Chatbots\" are created from protected object data within Rubrik. </p> <p>Sensitive data policies can also be defined for the retriever, blocking access to any data containing data such as social security or credit card numbers.</p> <p>The retriever itself is a vector database with an API, resulting in a data source for Retrieval Augmented Generation (RAG).</p> <p>Large Language Models (LLMs) can use the retrieved data to provide a contextually accurate, human readable response, free of any sensitive data according to the policy, to any question related to the data in the retriever.</p> <pre><code>flowchart TD\n  subgraph B[Annapurna Retriever]\n    direction TB\n    subgraph data\n      direction TB\n      confluence[Confluence Data]\n      onedrive[M365 OneDrive Data]\n      exchange[Exchange Mailbox Data]\n    end\n    subgraph Security\n    direction TB\n      sdd[Sensitive Data Policy]\n      filepermissions[File Permissions]\n      retrieverpermissions[Retriever Permissions]\n    end \n    subgraph vector[Vector Database]\n    end\n    data --&gt; vector\n    Security --&gt; vector\n\n  end\n  A[User submits query] --&gt; B --&gt; C[Relevant Documents] --&gt; D[Language Model] --&gt; E[Generate Final Answer]\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Examples/LangChain/","title":"LangChain","text":"<p>In this end-to-end example, LangChain is used to query a Rubrik Annapurna retriever and pass the relevant documents to Azure OpenAI to provide a relevant response.</p>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Examples/LangChain/#setup-instructions","title":"Setup Instructions","text":""},{"location":"Rubrik-Security-Cloud-API/Annapurna/Examples/LangChain/#create-a-python-environment","title":"Create a Python environment","text":"<pre><code>python3 -m venv venv\nsource venv/bin/activate\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Examples/LangChain/#install-required-python-packages","title":"Install required Python packages","text":"<pre><code>pip install -U langchain langchain-openai requests\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Examples/LangChain/#set-environment-variables","title":"Set environment variables","text":"<pre><code>export AZURE_OPENAI_API_KEY=\"your-azure-openai-api-key\"\nexport AZURE_OPENAI_ENDPOINT=\"https://your-instance.openai.azure.com\"\nexport AZURE_DEPLOYMENT_NAME=\"your-gpt-4o-deployment\"\nexport AZURE_OPENAI_MODEL=\"gpt-4o\"\nexport RSC_FQDN=\"your-instance.my.rubrik.com\"\nexport RSC_TOKEN=\"your-rubrik-api-token\"\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Examples/LangChain/#rubrik-retriever-class","title":"Rubrik Retriever Class","text":"<p>Save the below code in a file called <code>rubrik_retriever.py</code>. This is the Rubrik LangChain <code>BaseRetriever</code> which will fetch documents from the retriever through the Rubrik API.</p> Python rubrik_retriever.py<pre><code>import os\nimport requests\nimport json\nfrom typing import List\nfrom langchain.schema import Document\nfrom langchain.schema.retriever import BaseRetriever\n\nclass RubrikRetriever(BaseRetriever):\n    \"\"\"Custom LangChain retriever for querying the Rubrik vector database via REST API.\"\"\"\n\n    retriever_id: str  # This is the retriever or \"Chatbot\" ID from Rubrik.\n    rsc_fqdn: str = os.getenv(\"RSC_FQDN\")  # This is your RSC instance e.g. example.my.rubrik.com\n    rsc_token: str = os.getenv(\"RSC_TOKEN\")  # RSC API Token\n\n    def _get_relevant_documents(self, query: str) -&gt; List[Document]:\n        \"\"\"Sends a query to the API and retrieves relevant chunks.\"\"\"\n\n        headers = {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": f\"Bearer {self.rsc_token}\"\n        }\n        api_url = f\"https://{self.rsc_fqdn}/api/annapurna/{self.retriever_id}/retrieve\"\n\n        payload = {\"query\": query}\n        response = requests.post(api_url, headers=headers, json=payload)\n\n        if response.status_code != 200:\n            raise Exception(f\"Error from API: {response.status_code} - {response.text}\")\n\n        results = response.json().get(\"results\", [])\n\n        return [\n            Document(page_content=result[\"content\"], metadata={\"source_url\": result[\"sourceUrl\"]})\n            for result in results\n        ]\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Examples/LangChain/#langchain-with-rubrik-and-azure-openai","title":"Langchain with Rubrik and Azure OpenAI","text":"<p>Save the below code in a file called <code>annapurna_query.py</code>. This performs the chain to query the Rubrik retriever, pass the results to Azure OpenAI, and print the response.</p> Python annapurna_query.py<pre><code>import argparse\nimport os\nfrom rubrik_retriever import RubrikRetriever  # Import the retriever class\nfrom langchain.chains import RetrievalQA\nfrom langchain.prompts import PromptTemplate\nfrom langchain_openai import AzureChatOpenAI\n\n# Set up argument parsing\nparser = argparse.ArgumentParser(description=\"Run a query using RubrikRetriever and Azure OpenAI GPT-4o.\")\nparser.add_argument(\"retriever_id\", type=str, help=\"The retriever ID for RubrikRetriever.\")\nparser.add_argument(\"query\", type=str, help=\"The query to be processed by the retriever and LLM.\")\nargs = parser.parse_args()\n\n# Initialize the retriever with the retriever ID\nretriever = RubrikRetriever(retriever_id=args.retriever_id)\n\n# Initialize the Azure OpenAI GPT-4o model\nllm = AzureChatOpenAI(\n    openai_api_version=\"2024-02-15-preview\",\n    azure_endpoint=os.getenv(\"AZURE_OPENAI_ENDPOINT\"),\n    openai_api_key=os.getenv(\"AZURE_OPENAI_API_KEY\"),\n    deployment_name=os.getenv(\"AZURE_DEPLOYMENT_NAME\"),\n    model=os.getenv(\"AZURE_OPENAI_MODEL\", \"gpt-4o\"),\n)\n\n# Define a custom prompt\ncustom_prompt = PromptTemplate(\n    template=\"\"\"You are a helpful assistant. Use the following retrieved documents to answer the question:\n\n    Retrieved Documents:\n    {context}\n\n    Question: {question}\n\n    Answer:\"\"\",\n    input_variables=[\"question\", \"context\"],\n)\n\n# Create the RAG pipeline using LangChain's RetrievalQA\nqa_chain = RetrievalQA.from_chain_type(\n    llm=llm,\n    retriever=retriever,\n    chain_type=\"stuff\",\n    return_source_documents=False,  # Only return the LLM response\n    chain_type_kwargs={\"prompt\": custom_prompt},\n)\n\n# Retrieve the LLM response\nresponse = qa_chain.invoke({\"query\": args.query})\n\n# Extract and print only the LLM-generated response. For full response, change the below to print(response)\nif isinstance(response, dict) and \"result\" in response:\n    print(response[\"result\"])  # Correct way to access the response\nelse:\n    print(\"\u26a0\ufe0f Unexpected response format:\", response)  # Debugging fallback\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Examples/LangChain/#usage","title":"Usage","text":"<p>Run <code>annapurna_query.py</code> by providing the Rubrik retriever ID and a query relevant to the data contained in the Rubrik retriever.</p> <pre><code>python annapurna_query.py &lt;retriever_id&gt; \"Your query here\"\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Retrievers/","title":"Annapurna Retrievers","text":""},{"location":"Rubrik-Security-Cloud-API/Annapurna/Retrievers/#listing-retrievers","title":"Listing Retrievers","text":"<p>Performing a query against a retriever requires a retriever ID. To list retrievers, perform the following API call against the Rubrik Security Cloud API.</p> GraphQLPythonShell <pre><code>query {\n    chatbots {\n        nodes {\n            name\n            id\n        }\n    }\n}\n</code></pre> <pre><code>import requests\nimport json\nimport os\n\n# Get RSC access token from environment variable\nRSC_TOKEN = os.getenv(\"RSC_TOKEN\")\n\n# Define the GraphQL query\nquery = {\n    \"query\": \"query { chatbots(nameSearchFilter: \\\"exampleRetriever\\\") { nodes { name id } } }\"\n}\n\n# Set headers\nheaders = {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": f\"Bearer {RSC_TOKEN}\"\n}\n\n# Define the GraphQL API endpoint\nurl = \"https://example.my.rubrik.com/api/graphql\"\n\n# Execute the GraphQL query\nresponse = requests.post(url, headers=headers, data=json.dumps(query))\n\n# Print the response\nprint(response.json())\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { chatbots { nodes { name id } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Retrievers/retrieve/","title":"Retrieve","text":""},{"location":"Rubrik-Security-Cloud-API/Annapurna/Retrievers/retrieve/#api-endpoint-post-apiannapurnaidretrieve","title":"API Endpoint: <code>POST /api/annapurna/{id}/retrieve</code>","text":""},{"location":"Rubrik-Security-Cloud-API/Annapurna/Retrievers/retrieve/#summary","title":"Summary","text":"<p>Retrieve relevant chunks with Annapurna retriever.</p>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Retrievers/retrieve/#request-parameters","title":"Request Parameters","text":"Name In Type Required Description <code>id</code> path string Yes ID of the retriever <code>retrieve_request</code> body object Yes Query parameters for retrieval"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Retrievers/retrieve/#request-body","title":"Request Body","text":"<pre><code>{\n  \"query\": \"string\"\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Retrievers/retrieve/#example","title":"Example","text":"PythonShell"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Retrievers/retrieve/#response-200","title":"Response (200)","text":"<pre><code>{\n  \"results\": [\n    {\n      \"content\": \"string\",\n      \"sourceUrl\": \"string\"\n    }\n  ]\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/","title":"Data Protection","text":"<p>The Data Protection App provides the core tools and features for protecting, managing, and analyzing your data.</p>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Job-Status/","title":"Job Status","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Job-Status/#retrieving-job-status-of-all-cloud-native-objects-aws-azure-gcp","title":"Retrieving Job Status of all Cloud Native Objects (AWS, Azure, GCP)","text":"GraphQLPowerShell SDKShell <pre><code>query {\n    taskchain(taskchainId: \"019523cf-0ded-7373-9e35-cdddc24e5233\") {\n    state\n    progress\n    error\n    startTime\n    endTime\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery taskchain -AddField State,Progress,Error,StartTime,EndTime\n$query.Var.taskchainId = \"019523cf-0ded-7373-9e35-cdddc24e5233\"\n$query.invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { taskchain(taskchainId: \\\\\\\"019523cf-0ded-7373-9e35-cdddc24e5233\\\\\\\") { state progress error startTime endTime } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/On-Demand-Backup/","title":"On Demand Backup","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/On-Demand-Backup/#on-demand-backup-for-cloud-native-objects-aws-azure-gcp","title":"On-Demand Backup for Cloud Native Objects (AWS, Azure, GCP)","text":"GraphQLPowerShell SDKShell <pre><code>mutation {\n  takeOnDemandSnapshot(input: {\n    workloadIds: [\"0966c161-7156-495a-9a9c-73ec08e61e0d\"]\n    slaId: \"603d0b87-966a-4eb7-9705-d29fd45cf663\"\n  }) {\n    taskchainUuids {\n      workloadId\n      taskchainUuid\n    }\n    errors {\n      workloadId\n      error\n    }\n  }\n}\n</code></pre> <pre><code>$workload = Get-RscAzureNativeVm -NameSubstring \"example\"\n\n$query = New-RscMutation -GqlMutation takeOnDemandSnapshot\n$query.Var.Input = Get-RscType -Name TakeOnDemandSnapshotInput\n$query.Var.Input.workloadIds = $workload.id\n$query.Var.Input.slaId = $workload.effectiveSlaDomain.Id\n$query.Field = Get-RscType -Name TakeOnDemandSnapshotReply -InitialProperties `\n    taskchainUuids.workloadId,`\n    taskchainUuids.taskchainUuid,`\n    errors.workloadId,`\n    errors.errors\n$taskchain = $query.invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { takeOnDemandSnapshot(input: { workloadIds: [\\\\\\\"0966c161-7156-495a-9a9c-73ec08e61e0d\\\\\\\"] slaId: \\\\\\\"603d0b87-966a-4eb7-9705-d29fd45cf663\\\\\\\" }) { taskchainUuids { workloadId taskchainUuid } errors { workloadId error } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/AWS/EBS/","title":"EBS","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/AWS/EBS/#retrieving-aws-ebs-volumes","title":"Retrieving AWS EBS Volumes","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  awsNativeEbsVolumes(ebsVolumeFilters: {\n    #nameOrIdSubstringFilter: {nameOrIdSubstring: \"example\"}\n    #regionFilter: {regions: [US_EAST_1]}\n    #tagFilter: {tagFilterParams: {tagKey: \"foo\" tagValue: \"bar\" filterType: TAG_KEY_VALUE}}\n    #typeFilter: {ebsVolumeTypes: [IO1,IO2]}\n  }) {\n    nodes {\n      name\n      id\n      nativeName\n      cloudNativeId\n      volumeType\n      sizeInGiBs\n      iops\n      region\n      availabilityZone\n      tags {\n        key\n        value\n      }\n      awsAccountRubrikId\n      awsAccount {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery awsNativeEbsVolumes\n$query.Field.Nodes = @(Get-RscType -Name AwsNativeEbsVolume -InitialProperties `\n      name,`\n      idm,`\n      nativeName,`\n      cloudNativeId,`\n      volumeType,`\n      sizeInGiBs,`\n      iops,`\n      region,`\n      availabilityZone,`\n      tags.key, tags.value,`\n      awsAccountRubrikId,`\n      awsAccount.name, awsAccount.id,`\n      effectiveSlaDomain.name, effectiveSlaDomain.id\n)\n$query.invoke().nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { awsNativeEbsVolumes(ebsVolumeFilters: { }) { nodes { name id nativeName cloudNativeId volumeType sizeInGiBs iops region availabilityZone tags { key value } awsAccountRubrikId awsAccount { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/AWS/EC2/","title":"EC2","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/AWS/EC2/#retrieving-aws-ec2-instances","title":"Retrieving AWS EC2 Instances","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  awsNativeEc2Instances(ec2InstanceFilters: {\n    #nameOrIdSubstringFilter: {nameOrIdSubstring: \"example\"}\n    #regionFilter: {regions: [US_EAST_1]}\n    #tagFilter: {tagFilterParams: {tagKey: \"foo\" tagValue: \"bar\" filterType: TAG_KEY_VALUE}}\n    #vpcFilter: {vpcIds: [\"093e5470-22b4-483c-8910-fff0cbb982b1\"]}\n  }) {\n    nodes {\n      name\n      id\n      instanceName\n      instanceNativeId\n      instanceType\n      publicIp\n      privateIp\n      vpcName\n      vpcId\n      region\n      availabilityZone\n      osType\n      attachmentSpecs {\n        awsNativeEbsVolumeId\n        devicePath\n        isRootVolume\n        isExcludedFromSnapshot\n      }\n      tags {\n        key\n        value\n      }\n      awsAccountRubrikId\n      awsAccount {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscAwsNativeEc2Instance\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { awsNativeEc2Instances(ec2InstanceFilters: { }) { nodes { name id instanceName instanceNativeId instanceType publicIp privateIp vpcName vpcId region availabilityZone osType attachmentSpecs { awsNativeEbsVolumeId devicePath isRootVolume isExcludedFromSnapshot } tags { key value } awsAccountRubrikId awsAccount { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/AWS/RDS/","title":"RDS","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/AWS/RDS/#retrieving-aws-rds-instances","title":"Retrieving AWS RDS Instances","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  awsNativeRdsInstances(rdsInstanceFilters: {\n    #nameSubstringFilter: {nameSubstring: \"example\"}\n    #regionFilter: {regions: [US_EAST_1]}\n    #tagFilter: {tagFilterParams: {tagKey: \"foo\" tagValue: \"bar\" filterType: TAG_KEY_VALUE}}\n    #vpcFilter: {vpcIds: [\"093e5470-22b4-483c-8910-fff0cbb982b1\"]}\n  }) {\n    nodes {\n      name\n      id\n      dbInstanceName\n      dbiResourceId\n      dbInstanceClass\n      dbEngine\n      readReplicaSourceName\n      rdsType\n      vpcName\n      vpcId\n      isMultiAz\n      allocatedStorageInGibi\n      region\n      primaryAvailabilityZone\n      tags {\n        key\n        value\n      }\n      awsAccountRubrikId\n      awsAccount {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery awsNativeRdsInstances\n$query.field.Nodes = @(Get-RscType -Name AwsNativeRdsInstance -InitialProperties name,`\n    id,`\n    dbInstanceName,`\n    dbiResourceId,`\n    dbInstanceClass,`\n    dbEngine,`\n    readReplicaSourceName,`\n    rdsType,`\n    vpcName,`\n    vpcId,`\n    isMultiAz,`\n    allocatedStorageInGibi,`\n    region,`\n    primaryAvailabilityZone,`\n    tags.key,tags.value,`\n    awsAccountRubrikId,`\n    awsAccount.name,awsAccount.id,`\n    effectiveSlaDomain.name,effectiveSlaDomain.id)\n$query.invoke().nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { awsNativeRdsInstances(rdsInstanceFilters: { }) { nodes { name id dbInstanceName dbiResourceId dbInstanceClass dbEngine readReplicaSourceName rdsType vpcName vpcId isMultiAz allocatedStorageInGibi region primaryAvailabilityZone tags { key value } awsAccountRubrikId awsAccount { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/AWS/S3/","title":"S3","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/AWS/S3/#retrieving-aws-s3-buckets","title":"Retrieving AWS S3 Buckets","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  awsNativeRoot {\n    objectTypeDescendantConnection(\n      objectTypeFilter: AWS_NATIVE_S3_BUCKET\n      filter: [\n        #{field: NAME_EXACT_MATCH texts: \"example\"}\n        #{field: AWS_TAG tagFilterParams: {tagKey: \"foo\" tagValue: \"bar\" filterType: TAG_KEY_VALUE}}\n      ]\n    ) {\n      nodes {\n        name\n        id\n        nativeName\n        cloudNativeId\n        region\n        tags {\n          key\n          value\n        }\n        ... on AwsNativeS3Bucket {\n          numberOfObjects\n          bucketSizeBytes\n          isOnboarding\n        }\n        effectiveSlaDomain {\n          name\n          id\n        }\n      }\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery awsNativeRoot\n$query.Field.ObjectTypeDescendantConnection = Get-RscType -Name AwsNativeHierarchyObjectConnection\n$query.field.ObjectTypeDescendantConnection.PageInfo = Get-RscType -Name PageInfo -InitialProperties hasNextPage,EndCursor\n$query.field.ObjectTypeDescendantConnection.Nodes = @(Get-RscType -Name AwsNativeS3Bucket -InitialProperties `\n    Name,`\n    id,`\n    nativeName,`\n    cloudNativeId,`\n    region,`\n    tags.key,`\n    tags.value,`\n    numberOfObjects,`\n    bucketSizeBytes,`\n    isOnboarding,`\n    effectiveSladomain.name,`\n    effectiveSladomain.id)\n$query.field.Vars.ObjectTypeDescendantConnection.objectTypeFilter = [RubrikSecurityCloud.Types.HierarchyObjectTypeEnum]::AWS_NATIVE_S3_BUCKET\n$query.invoke().ObjectTypeDescendantConnection.nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { awsNativeRoot { objectTypeDescendantConnection( objectTypeFilter: AWS_NATIVE_S3_BUCKET filter: [ ] ) { nodes { name id nativeName cloudNativeId region tags { key value } ... on AwsNativeS3Bucket { numberOfObjects bucketSizeBytes isOnboarding } effectiveSlaDomain { name id } } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/SQL-Managed-Instances/","title":"SQL Managed Instances","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/SQL-Managed-Instances/#retrieving-managed-instance-sql-databases","title":"Retrieving Managed Instance SQL Databases","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  azureSqlManagedInstanceDatabases( azureSqlManagedInstanceDatabaseFilters: {\n      #nameSubstringFilter: {nameSubstring: \"example\"}\n      #resourceGroupFilter: {resourceGroupNames: [\"example\"]}\n      #serverFilter: {serverNames: [\"example\"]}\n      #subscriptionFilter: {subscriptionIds: [\"7d0d81dc-3323-4f45-bd0b-cc37e5bf9f37\"]}\n      #regionFilter: {regions: [EAST_US, EAST_US2]}\n      #relicFilter: {relic: false}\n  }) {\n    nodes {\n      name\n      id\n      region\n      persistentStorage {\n        name\n        id\n      }\n      azureSqlManagedInstanceServer {\n        name\n        id\n      }\n      persistentStorage {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { azureSqlManagedInstanceDatabases( azureSqlManagedInstanceDatabaseFilters: { }) { nodes { name id region persistentStorage { name id } azureSqlManagedInstanceServer { name id } persistentStorage { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/SQL-Managed-Instances/#retrieving-managed-instance-sql-servers","title":"Retrieving Managed Instance SQL Servers","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  azureSqlManagedInstanceServers( azureSqlManagedInstanceServerFilters: {\n      #nameSubstringFilter: {nameSubstring: \"example\"}\n      #tagFilter: {tagFilterParams: {tagKey: \"foo\", tagValue: \"bar\", filterType: TAG_KEY_VALUE}}\n      #resourceGroupFilter: {resourceGroupNames: [\"example\"]}\n      #subscriptionFilter: {subscriptionIds: [\"7d0d81dc-3323-4f45-bd0b-cc37e5bf9f37\"]}\n      #regionFilter: {regions: [EAST_US, EAST_US2]}\n  }) {\n    nodes {\n      name\n      id\n      region\n      vCoresCount\n      storageSizeGib\n      instancePoolName\n      serviceTier\n      vnetName\n      subnetName\n      azureNativeResourceGroup {\n        name\n        id\n      }\n      tags {\n        key\n        value\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { azureSqlManagedInstanceServers( azureSqlManagedInstanceServerFilters: { }) { nodes { name id region vCoresCount storageSizeGib instancePoolName serviceTier vnetName subnetName azureNativeResourceGroup { name id } tags { key value } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/SQL/","title":"SQL","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/SQL/#retrieving-azure-sql-databases","title":"Retrieving Azure SQL Databases","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  azureSqlDatabases( azureSqlDatabaseFilters: {\n      #nameSubstringFilter: {nameSubstring: \"example\"}\n      #tagFilter: {tagFilterParams: {tagKey: \"foo\", tagValue: \"bar\", filterType: TAG_KEY_VALUE}}\n      #resourceGroupFilter: {resourceGroupNames: [\"example\"]}\n      #subscriptionFilter: {subscriptionIds: [\"7d0d81dc-3323-4f45-bd0b-cc37e5bf9f37\"]}\n      #regionFilter: {regions: [EAST_US, EAST_US2]}\n      #relicFilter: {relic: false}\n  }) {\n    nodes {\n      name\n      id\n      region\n            elasticPoolName\n      backupStorageRedundancy\n      serviceTier\n      maximumSizeInBytes\n      persistentStorage {\n        name\n        id\n      }\n      serviceObjectiveName\n      azureSqlDatabaseServer {\n        name\n        id\n      }\n      tags {\n        key\n        value\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery azureSqlDatabases\n# $query.Var.azureSqlDatabaseFilters = Get-RscType -Name AzureSqlDatabaseFilters -InitialProperties `\n#     nameSubstringFilter,`\n#     tagFilter.tagFilterParams,`\n#     resourceGroupFilter,`\n#     subscriptionFilter,`\n#     regionFilter,`\n#     relicFilter\n# $query.Var.azureSqlDatabaseFilters.nameSubstringFilter.nameSubstring = \"example\"\n# $query.Var.azureSqlDatabaseFilters.tagFilter.tagFilterParams.key = \"foo\"\n# $query.Var.azureSqlDatabaseFilters.tagFilter.tagFilterParams.value = \"bar\"\n# $query.Var.azureSqlDatabaseFilters.tagFilter.tagFilterParams.filterType = [RubrikSecurityCloud.Types.TagFilterType]::TAG_KEY_VALUE\n# $query.Var.azureSqlDatabaseFilters.resourceGroupFilter.resourceGroupNames = @(\"example\")\n# $query.Var.azureSqlDatabaseFilters.subscriptionFilter.subscriptionIds = @(\"7d0d81dc-3323-4f45-bd0b-cc37e5bf9f37\")\n# $query.Var.azureSqlDatabaseFilters.regionFilter.regions = @([RubrikSecurityCloud.Types.AzureRegion]::US_CENTRAL,[RubrikSecurityCloud.Types.AzureRegion]::US_EAST)\n# $query.Var.azureSqlDatabaseFilters.relicFilter.relic = $false\n$query.Field.nodes = @(Get-RscType -Name AzureSqlDatabaseDb -InitialProperties `\n    name, `\n    id, `\n    region,`\n    elasticPoolName,`\n    backupStorageRedundancy,`\n    serviceTier,`\n    maximumSizeInBytes,`\n    persistentStorage.name, persistentStorage.id,`\n    serviceObjectiveName,`\n    azureSqlDatabaseServer.name, azureSqlDatabaseServer.id,`\n    tags.key, tags.value,`\n    effectiveSlaDomain.name, effectiveSlaDomain.id\n)\n$query.Invoke().nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { azureSqlDatabases( azureSqlDatabaseFilters: { }) { nodes { name id region elasticPoolName backupStorageRedundancy serviceTier maximumSizeInBytes persistentStorage { name id } serviceObjectiveName azureSqlDatabaseServer { name id } tags { key value } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/SQL/#retrieving-azure-sql-database-servers","title":"Retrieving Azure SQL Database Servers","text":"GraphQLPowerShell SDKShell <pre><code># https://docs.microsoft.com/en-us/azure/azure-sql/database/logical-servers\nquery {\n  azureSqlDatabaseServers( azureSqlDatabaseServerFilters: {\n      #nameSubstringFilter: {nameSubstring: \"example\"}\n      #resourceGroupFilter: {resourceGroupNames: [\"example\"]}\n      #subscriptionFilter: {subscriptionIds: [\"7d0d81dc-3323-4f45-bd0b-cc37e5bf9f37\"]}\n      #regionFilter: {regions: [EAST_US, EAST_US2]}\n  }) {\n    nodes {\n      name\n      id\n      region\n      tags {\n        key\n        value\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { azureSqlDatabaseServers( azureSqlDatabaseServerFilters: { }) { nodes { name id region tags { key value } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/VM/","title":"VM","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/VM/#azure-virtual-machines","title":"Azure Virtual Machines","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/VM/#retrieving-azure-virtual-machines","title":"Retrieving Azure Virtual Machines","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  azureNativeVirtualMachines( virtualMachineFilters: {\n      #nameSubstringFilter: {nameSubstring: \"example\"}\n      #tagFilter: {tagFilterParams: {tagKey: \"foo\", tagValue: \"bar\", filterType: TAG_KEY_VALUE}}\n      #resourceGroupFilter: {resourceGroupNames: [\"example\"]}\n      #subscriptionFilter: {subscriptionIds: [\"7d0d81dc-3323-4f45-bd0b-cc37e5bf9f37\"]}\n      #regionFilter: {regions: [EAST_US, EAST_US2]}\n      #relicFilter: {relic: false}\n  }) {\n    nodes {\n      name\n      id\n      nativeName\n      cloudNativeId\n      availabilitySetNativeId\n      resourceGroup {\n        name\n        id\n      }\n      region\n      sizeType\n      osType\n      vnetName\n      subnetName\n      privateIp\n      attachedManagedDisks {\n        name\n        id\n        cloudNativeId\n        diskSizeGib\n      }\n      tags {\n        key\n        value\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscAzureNativeVm\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { azureNativeVirtualMachines( virtualMachineFilters: { }) { nodes { name id nativeName cloudNativeId availabilitySetNativeId resourceGroup { name id } region sizeType osType vnetName subnetName privateIp attachedManagedDisks { name id cloudNativeId diskSizeGib } tags { key value } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/GCP/Instances/","title":"Instances","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/GCP/Instances/#retrieving-google-compute-engine-gce-instances","title":"Retrieving Google Compute Engine (GCE) Instances","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  gcpNativeGceInstances( gceInstanceFilters: {\n      #nameOrIdSubstringFilter: {nameOrIdSubstring: \"example\"}\n      #labelFilter: {labelFilterParams: {labelKey: \"foo\", labelValue: \"bar\", filterType: LABEL_KEY_VALUE}}\n      #projectFilter: {projectIds: [\"7d0d81dc-3323-4f45-bd0b-cc37e5bf9f37\"]}\n      #machineTypeFilter: {machineTypes: [\"example\"]}\n      #networkFilter: {networkNames: [\"example\"]}\n      #regionFilter: {regions: [\"example\"]}\n      #relicFilter: {relic: false}\n  }) {\n    nodes {\n      name\n      id\n      nativeName\n            nativeId\n      region\n            zone\n      machineType\n      vpcName\n      attachedDisks {\n        diskName\n        diskId\n        deviceName\n        sizeInGiBs\n        isBootDisk\n        isExcluded\n      }\n      labels {\n        key\n        value\n      }\n      networkHostProjectNativeId\n      gcpNativeProject {\n        name\n        id\n        nativeName\n        nativeId\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { gcpNativeGceInstances( gceInstanceFilters: { }) { nodes { name id nativeName nativeId region zone machineType vpcName attachedDisks { diskName diskId deviceName sizeInGiBs isBootDisk isExcluded } labels { key value } networkHostProjectNativeId gcpNativeProject { name id nativeName nativeId } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Filesets/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Filesets/#retrieving-fileset-templates-and-filesets","title":"Retrieving Fileset Templates and Filesets","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  filesetTemplates( hostRoot: WINDOWS_HOST_ROOT filter: [\n    #{field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      osType\n      exceptions\n      excludes\n      osType\n      preBackupScript\n      postBackupScript\n      allowBackupNetworkMounts\n      allowBackupHiddenFoldersInNetworkMounts\n      shareType\n      descendantConnection {\n        nodes {\n          name\n          id\n          physicalPath {\n            name\n            fid\n          }\n        }\n      }\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code># Get Linux Fileset Templates\nGet-RscFilesetTemplate -OsType Linux\n\n# Get Linux Filesets\nGet-RscHost -OsType Linux | Get-RscFileset\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { filesetTemplates( hostRoot: WINDOWS_HOST_ROOT filter: [ {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId osType exceptions excludes osType preBackupScript postBackupScript allowBackupNetworkMounts allowBackupHiddenFoldersInNetworkMounts shareType descendantConnection { nodes { name id physicalPath { name fid } } } cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Filesets/Job-Status/","title":"Job Status","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Filesets/Job-Status/#retrieving-job-status-of-fileset-jobs","title":"Retrieving Job Status of Fileset Jobs","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  filesetRequestStatus(input: {\n    id: \"CREATE_FILESET_SNAPSHOT_14852a49-8fbf-4aba-a772-91afbd0eb77a_0b734ff4-7465-463b-97b7-649def71388d:::0\"\n    clusterUuid: \"8417a938-96f5-43c6-9905-b36e051c5f98\"\n  }) {\n    startTime\n    endTime\n    error {\n      message\n    }\n    progress\n    status\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery filesetRequestStatus\n$query.Var.input = Get-RscType -Name GetFilesetAsyncRequestStatusInput\n$query.Var.input.Id = \"CREATE_FILESET_SNAPSHOT_14852a49-8fbf-4aba-a772-91afbd0eb77a_0b734ff4-7465-463b-97b7-649def71388d:::0\"\n$query.Var.input.ClusterUuid = \"654230DC-C83C-428B-A239-1A585C05AE0F\"\n$query.Field = Get-RscType -Name AsyncRequestStatus -InitialProperties `\n    StartTime,`\n    EndTime,`\n    error.message,`\n    result,`\n    status\n$query.invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { filesetRequestStatus(input: { id: \\\\\\\"CREATE_FILESET_SNAPSHOT_14852a49-8fbf-4aba-a772-91afbd0eb77a_0b734ff4-7465-463b-97b7-649def71388d:::0\\\\\\\" clusterUuid: \\\\\\\"8417a938-96f5-43c6-9905-b36e051c5f98\\\\\\\" }) { startTime endTime error { message } progress status } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Filesets/On-Demand-Backup/","title":"On Demand Backup","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Filesets/On-Demand-Backup/#fileset-on-demand-backup","title":"Fileset On-Demand Backup","text":"GraphQLPowerShell SDKShell <pre><code>mutation filesetSnapshot {\n  createFilesetSnapshot(input: {\n    id: \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n    config: {\n      slaId: \"c7bd8eb2-7132-4c8f-8592-682d507520dc\"\n    }\n  }) {\n    id\n  }\n}\n</code></pre> <pre><code>$fileset = Get-RscHost -OsType Linux -Name \"fileserver.example.com\" | Get-RscFileset | Select-Object -First 1\n$sla = Get-RscSla -Name \"example\"\n\n$query = New-RscMutation -GqlMutation createFilesetSnapshot\n$query.Var.input = Get-RscType -Name CreateFilesetSnapshotInput -InitialProperties config\n$query.Var.input.id = $fileset.Id\n$query.Var.input.Config.slaId = $sla.Id\n$query.Field = Get-RscType -Name AsyncRequestStatus -InitialProperties id\n$query.invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation filesetSnapshot { createFilesetSnapshot(input: { id: \\\\\\\"f79b1102-77b5-4434-8400-c2a66c9b2dc1\\\\\\\" config: { slaId: \\\\\\\"c7bd8eb2-7132-4c8f-8592-682d507520dc\\\\\\\" } }) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/IBM-DB2/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/IBM-DB2/#retrieving-db2-instances","title":"Retrieving DB2 instances","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  objects: db2Instances(\n    filter: [\n      {field: NAME texts: \"example\"}\n      {field: IS_RELIC texts: \"false\"}\n      {field: IS_REPLICATED texts: \"false\"}\n    ]\n    ) {\n    nodes {\n      name\n      id\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n      primaryClusterUuid\n      hosts {\n        name\n        id\n      }\n      status\n      statusMessage\n      instanceType\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscDb2Instance\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/IBM-DB2/#retrieving-db2-databases","title":"Retrieving DB2 databases","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  db2Databases(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n      db2DbType\n      db2Instance {\n        name\n        id\n      }\n      status\n      statusMessage\n      backupSessions\n      backupParallelism\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscDb2Database\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { db2Databases(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId effectiveSlaDomain { name id } cluster { name id } db2DbType db2Instance { name id } status statusMessage backupSessions backupParallelism } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/IBM-DB2/Job-Status/","title":"Job Status","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/IBM-DB2/Job-Status/#retrieving-db2-database-job-status","title":"Retrieving DB2 Database Job Status","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  db2DatabaseJobStatus(input: {\n    id: \"CREATE_DB2_FULL_SNAPSHOT_809663d4-b82a-485e-a7ba-cf7cf88e9fdf_966044a8-89a8-441c-90ca-d360279543df:::0\"\n    clusterUuid: \"85e98e61-4c1f-496a-b846-5eb871966025\"\n  }) {\n    progress\n    status\n    result\n    error {\n      message\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery db2DatabaseJobStatus\n$query.Var.input = Get-RscType -Name GetDb2DatabaseAsyncRequestStatusInput\n$query.Var.input.id = \"CREATE_DB2_FULL_SNAPSHOT_809663d4-b82a-485e-a7ba-cf7cf88e9fdf_966044a8-89a8-441c-90ca-d360279543df:::0\"\n$query.Var.input.ClusterUuid = \"85e98e61-4c1f-496a-b846-5eb871966025\"\n$query.Field = Get-RscType -Name AsyncRequestStatus -InitialProperties `\n    StartTime,`\n    EndTime,`\n    error.message,`\n    result,`\n    status\n$query.invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { db2DatabaseJobStatus(input: { id: \\\\\\\"CREATE_DB2_FULL_SNAPSHOT_809663d4-b82a-485e-a7ba-cf7cf88e9fdf_966044a8-89a8-441c-90ca-d360279543df:::0\\\\\\\" clusterUuid: \\\\\\\"85e98e61-4c1f-496a-b846-5eb871966025\\\\\\\" }) { progress status result error { message } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/IBM-DB2/On-Demand-Backup/","title":"On Demand Backup","text":"GraphQLPowerShell SDKShell <pre><code>mutation db2OnDemandBackup {\n  createOnDemandDb2Backup(input: {\n    id: \"c7bd8eb2-7132-4c8f-8592-682d507520dc\"\n    config: {\n      slaId: \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n      }\n    }) {\n      id\n  }\n}\n</code></pre> <pre><code>$db2Database = Get-RscDb2Database -Name \"example\"\n\n$query = New-RscMutation -GqlMutation createOnDemandDb2Backup\n$query.Var.input = Get-RscType -Name CreateOnDemandDb2BackupInput -InitialProperties config\n$query.Var.input.id = $db2Database.Id\n$query.Var.input.Config.slaId = $db2Database.effectiveSlaDomain.Id\n$query.invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation db2OnDemandBackup { createOnDemandDb2Backup(input: { id: \\\\\\\"c7bd8eb2-7132-4c8f-8592-682d507520dc\\\\\\\" config: { slaId: \\\\\\\"f79b1102-77b5-4434-8400-c2a66c9b2dc1\\\\\\\" } }) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Managed-Volumes/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Managed-Volumes/#retrieving-sla-managed-volumes","title":"Retrieving SLA Managed Volumes","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  slaManagedVolumes( filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      managedVolumeType\n      provisionedSize\n      numChannels\n      clientNamePatterns\n      host {\n        name\n        osName\n        id\n      }\n      hostDetail {\n        name\n        id\n        status\n      }\n      smbShare {\n        domainName\n        validIps\n        validUsers\n        activeDirectoryGroups\n      }\n      nfsSettings {\n        version\n      }\n      clientConfig {\n        username\n        backupScript {\n          scriptCommand\n        }\n        preBackupScript {\n          scriptCommand\n        }\n        successfulPostBackupScript {\n          scriptCommand\n        }\n        failedPostBackupScript {\n          scriptCommand\n        }\n        channelHostMountPaths\n        hostId\n      }\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery slaManagedVolumes\n$query.Var.filter = @((Get-RscType -Name Filter),(Get-RscType -Name Filter))\n$query.Var.filter[0].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_RELIC\n$query.Var.filter[0].texts = \"false\"\n$query.Var.filter[1].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_REPLICATED\n$query.Var.filter[1].texts = \"false\"\n\n$query.Field.nodes = @(Get-RscType -Name ManagedVolume -InitialProperties `\n    name,`\n    id,`\n    cdmId,`\n    managedVolumeType,`\n    provisionedSize,`\n    numChannels,`\n    host.name,host.osName,host.id,`\n    hostDetail.name,hostDetail.id,hostDetail.status,`\n    nfsSettings.version,`\n    clientConfig.username,`\n    clientConfig.backupScript.scriptCommand,`\n    clientConfig.preBackupScript.scriptCommand,`\n    clientConfig.successfulPostBackupScript.scriptCommand,`\n    clientConfig.failedPostBackupScript.scriptCommand,`\n    channelHostMountPaths,`\n    hostId,`\n    cluster.name,cluster.id,`\n    effectiveSlaDomain.name,effectiveSlaDomain.id\n)\n$query.invoke().nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { slaManagedVolumes( filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId managedVolumeType provisionedSize numChannels clientNamePatterns host { name osName id } hostDetail { name id status } smbShare { domainName validIps validUsers activeDirectoryGroups } nfsSettings { version } clientConfig { username backupScript { scriptCommand } preBackupScript { scriptCommand } successfulPostBackupScript { scriptCommand } failedPostBackupScript { scriptCommand } channelHostMountPaths hostId } cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Managed-Volumes/#retrieving-managed-volumes","title":"Retrieving Managed Volumes","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  managedVolumes( filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      managedVolumeType\n      provisionedSize\n      numChannels\n      clientNamePatterns\n      host {\n        name\n        osName\n        id\n      }\n      hostDetail {\n        name\n        id\n        status\n      }\n      smbShare {\n        domainName\n        validIps\n        validUsers\n        activeDirectoryGroups\n      }\n      nfsSettings {\n        version\n      }\n      clientConfig {\n        username\n        backupScript {\n          scriptCommand\n        }\n        preBackupScript {\n          scriptCommand\n        }\n        successfulPostBackupScript {\n          scriptCommand\n        }\n        failedPostBackupScript {\n          scriptCommand\n        }\n        channelHostMountPaths\n        hostId\n      }\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscManagedVolume\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { managedVolumes( filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId managedVolumeType provisionedSize numChannels clientNamePatterns host { name osName id } hostDetail { name id status } smbShare { domainName validIps validUsers activeDirectoryGroups } nfsSettings { version } clientConfig { username backupScript { scriptCommand } preBackupScript { scriptCommand } successfulPostBackupScript { scriptCommand } failedPostBackupScript { scriptCommand } channelHostMountPaths hostId } cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Managed-Volumes/#retrieving-managed-volume-live-mounts","title":"Retrieving Managed Volume Live Mounts","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  managedVolumeLiveMounts {\n    nodes {\n      name\n      id\n      logicalUsedSize\n      managedVolume {\n        name\n        id\n      }\n      sourceSnapshot {\n        id\n      }\n      channels {\n        mountPath\n        floatingIpAddress\n        id\n        mountSpec {\n          mountDir\n          imageSizeOpt\n          node {\n            id\n          }\n        }\n      }\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery managedVolumeLiveMounts\n\n$query.Field.nodes = @(Get-RscType -Name ManagedVolumeMount -InitialProperties `\n    name,`\n    id,`\n    cdmId,`\n    logicalUsedSize,`\n    managedVolume.name,managedVolume.id,`\n    sourceSnapshot.id,`\n    channels.mountpath,`\n    channels.floatingIpAddress,`\n    channels.id,`\n    channels.mountSpec.mountDir,`\n    channels.mountSpec.imageSizeOpt,`\n    channels.mountSpec.node.id\n)\n$query.invoke().nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { managedVolumeLiveMounts { nodes { name id logicalUsedSize managedVolume { name id } sourceSnapshot { id } channels { mountPath floatingIpAddress id mountSpec { mountDir imageSizeOpt node { id } } } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Managed-Volumes/Job-Status/","title":"Job Status","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Managed-Volumes/Job-Status/#retrieving-sla-managed-volume-snapshot-job-status","title":"Retrieving SLA Managed Volume Snapshot Job Status","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  jobInfo(input: {\n    requestId: \"MANAGED_VOLUME_BACKUP_41447105-61f3-4def-873e-f7df1a37fc71_0522978f-c79e-4f82-9d02-c93711b387b8:::0\"\n    clusterUuid: \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n    type: TAKE_MANAGED_VOLUME_ON_DEMAND_SNAPSHOT\n    additionalInfo: {}\n  }) {\n    status\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery jobInfo\n$query.Var.input = Get-RscType -Name JobInfoRequest -InitialProperties additionalInfo\n$query.Var.input.Type = [RubrikSecurityCloud.Types.JobType]::TAKE_MANAGED_VOLUME_ON_DEMAND_SNAPSHOT\n$query.Var.input.requestId = \"MANAGED_VOLUME_BACKUP_41447105-61f3-4def-873e-f7df1a37fc71_0522978f-c79e-4f82-9d02-c93711b387b8:::0\"\n$query.Var.input.ClusterUuid = \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n$query.field = Get-RscType -Name JobInfo -InitialProperties status\n$query.Invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { jobInfo(input: { requestId: \\\\\\\"MANAGED_VOLUME_BACKUP_41447105-61f3-4def-873e-f7df1a37fc71_0522978f-c79e-4f82-9d02-c93711b387b8:::0\\\\\\\" clusterUuid: \\\\\\\"f79b1102-77b5-4434-8400-c2a66c9b2dc1\\\\\\\" type: TAKE_MANAGED_VOLUME_ON_DEMAND_SNAPSHOT additionalInfo: {} }) { status } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Managed-Volumes/Job-Status/#retrieving-managed-volume-begin-snapshot-job-status","title":"Retrieving Managed Volume Begin Snapshot Job Status","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  jobInfo(input: {\n    requestId: \"MANAGED_VOLUME_BEGIN_SNAPSHOT_89c2fe66-46f9-489b-8650-7eacfab37608_b5bfbeaf-8e45-4ccd-a9da-541dec38b0b9:::0\"\n    clusterUuid: \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n    type: BEGIN_MANAGED_VOLUME_SNAPSHOT\n    additionalInfo: {}\n  }) {\n    status\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery jobInfo\n$query.Var.input = Get-RscType -Name JobInfoRequest -InitialProperties additionalInfo\n$query.Var.input.Type = [RubrikSecurityCloud.Types.JobType]::BEGIN_MANAGED_VOLUME_SNAPSHOT\n$query.Var.input.requestId = \"MANAGED_VOLUME_BEGIN_SNAPSHOT_89c2fe66-46f9-489b-8650-7eacfab37608_b5bfbeaf-8e45-4ccd-a9da-541dec38b0b9:::0\"\n$query.Var.input.ClusterUuid = \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n$query.field = Get-RscType -Name JobInfo -InitialProperties status\n$query.Invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { jobInfo(input: { requestId: \\\\\\\"MANAGED_VOLUME_BEGIN_SNAPSHOT_89c2fe66-46f9-489b-8650-7eacfab37608_b5bfbeaf-8e45-4ccd-a9da-541dec38b0b9:::0\\\\\\\" clusterUuid: \\\\\\\"f79b1102-77b5-4434-8400-c2a66c9b2dc1\\\\\\\" type: BEGIN_MANAGED_VOLUME_SNAPSHOT additionalInfo: {} }) { status } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Managed-Volumes/Job-Status/#retrieving-managed-volume-end-snapshot-job-status","title":"Retrieving Managed Volume End Snapshot Job Status","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  jobInfo(input: {\n    requestId: \"MANAGED_VOLUME_END_SNAPSHOT_89c2fe66-46f9-489b-8650-7eacfab37608_b5bfbeaf-8e45-4ccd-a9da-541dec38b0b9:::0\"\n    clusterUuid: \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n    type: END_MANAGED_VOLUME_SNAPSHOT\n    additionalInfo: {}\n  }) {\n    status\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery jobInfo\n$query.Var.input = Get-RscType -Name JobInfoRequest -InitialProperties additionalInfo\n$query.Var.input.Type = [RubrikSecurityCloud.Types.JobType]::END_MANAGED_VOLUME_SNAPSHOT\n$query.Var.input.requestId = \"MANAGED_VOLUME_END_SNAPSHOT_89c2fe66-46f9-489b-8650-7eacfab37608_b5bfbeaf-8e45-4ccd-a9da-541dec38b0b9:::0\"\n$query.Var.input.ClusterUuid = \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n$query.field = Get-RscType -Name JobInfo -InitialProperties status\n$query.Invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { jobInfo(input: { requestId: \\\\\\\"MANAGED_VOLUME_END_SNAPSHOT_89c2fe66-46f9-489b-8650-7eacfab37608_b5bfbeaf-8e45-4ccd-a9da-541dec38b0b9:::0\\\\\\\" clusterUuid: \\\\\\\"f79b1102-77b5-4434-8400-c2a66c9b2dc1\\\\\\\" type: END_MANAGED_VOLUME_SNAPSHOT additionalInfo: {} }) { status } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Managed-Volumes/On-Demand-Backup/","title":"On Demand Backup","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Managed-Volumes/On-Demand-Backup/#sla-managed-volume-snapshot","title":"SLA Managed Volume Snapshot","text":"GraphQLPowerShell SDKShell <pre><code>mutation slaManagedVolumeSnapshot {\n  takeManagedVolumeOnDemandSnapshot(input: {\n    id: \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n    config: {\n      retentionConfig: {\n        slaId: \"c7bd8eb2-7132-4c8f-8592-682d507520dc\"\n      }\n    }\n  }) {\n    id\n  }\n}\n</code></pre> <pre><code>$query = New-RscMutation -GqlMutation takeManagedVolumeOnDemandSnapshot\n$query.Var.input = Get-RscType -Name TakeManagedVolumeOnDemandSnapshotInput -InitialProperties config.retentionconfig\n$query.Var.input.id = \"132b4b62-7d49-5972-9fcc-23d8dce2e1ad\"\n$query.var.input.config.retentionconfig.slaId = \"4a67543d-7f43-4a42-9953-dfefaa8bee6e\"\n$query.field = Get-RscType -Name AsyncRequestStatus -InitialProperties id\n$query.invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation slaManagedVolumeSnapshot { takeManagedVolumeOnDemandSnapshot(input: { id: \\\\\\\"f79b1102-77b5-4434-8400-c2a66c9b2dc1\\\\\\\" config: { retentionConfig: { slaId: \\\\\\\"c7bd8eb2-7132-4c8f-8592-682d507520dc\\\\\\\" } } }) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Managed-Volumes/On-Demand-Backup/#begin-managed-volume-snapshot","title":"Begin Managed Volume Snapshot","text":"GraphQLPowerShell SDKShell <pre><code>mutation beginManagedVolumeSnapshot {\n  beginManagedVolumeSnapshot(input: {\n    id: \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n  }) {\n    asyncRequestStatus {\n      id\n    }\n  }\n}\n</code></pre> <pre><code>Start-RscManagedVolumeSnapshot\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation beginManagedVolumeSnapshot { beginManagedVolumeSnapshot(input: { id: \\\\\\\"f79b1102-77b5-4434-8400-c2a66c9b2dc1\\\\\\\" }) { asyncRequestStatus { id } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Managed-Volumes/On-Demand-Backup/#end-managed-volume-snapshot","title":"End Managed Volume Snapshot","text":"GraphQLPowerShell SDKShell <pre><code>mutation endManagedVolumeSnapshot {\n  endManagedVolumeSnapshot(input: {\n    id: \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n    params: {\n      retentionConfig: {\n        slaId: \"c7bd8eb2-7132-4c8f-8592-682d507520dc\"\n      }\n    }\n    #endSnapshotDelayInSeconds: 5\n  }) {\n    asyncRequestStatus {\n      id\n    }\n  }\n}\n</code></pre> <pre><code>Stop-RscManagedVolumeSnapshot\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation endManagedVolumeSnapshot { endManagedVolumeSnapshot(input: { id: \\\\\\\"f79b1102-77b5-4434-8400-c2a66c9b2dc1\\\\\\\" params: { retentionConfig: { slaId: \\\\\\\"c7bd8eb2-7132-4c8f-8592-682d507520dc\\\\\\\" } } }) { asyncRequestStatus { id } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-AD/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-AD/#retrieving-microsoft-active-directory-domain-controllers","title":"Retrieving Microsoft Active Directory Domain Controllers","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  activeDirectoryDomainControllers(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      domainControllerGuid\n      adServiceStatus {\n        serviceStatus\n      }\n      hostname\n      fsmoRoles\n      serverRoles\n      isGlobalCatalog\n      host {\n        name\n        id\n      }\n      dcLocation\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery activeDirectoryDomainControllers\n$query.Var.filter = @((Get-RscType -Name Filter),(Get-RscType -Name Filter))\n$query.Var.filter[0].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_RELIC\n$query.Var.filter[0].texts = \"false\"\n$query.Var.filter[1].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_REPLICATED\n$query.Var.filter[1].texts = \"false\"\n\n$query.field.nodes = @(Get-RscType -Name ActiveDirectoryDomainController -InitialProperties `\n    name,`\n    id,`\n    domainControllerGuid,`\n    adServiceStatus.serviceStatus,`\n    hostname,`\n    fsmoRoles,`\n    serverRoles,`\n    isGlobalCatalog,`\n    dcLocation,`\n    host.name,host.Id,`\n    effectiveSlaDomain.name,effectiveSlaDomain.id,`\n    cluster.name,cluster.id\n)\n$query.Invoke().nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { activeDirectoryDomainControllers(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id domainControllerGuid adServiceStatus { serviceStatus } hostname fsmoRoles serverRoles isGlobalCatalog host { name id } dcLocation effectiveSlaDomain { name id } cluster { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-AD/#retrieving-microsoft-active-directory-domains","title":"Retrieving Microsoft Active Directory Domains","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  activeDirectoryDomains(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      domainName\n      domainSid\n      registeredDomainControllersCount\n      smbDomain {\n        name\n        domainId\n        accountName\n        status\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery activeDirectoryDomains\n$query.Var.filter = @((Get-RscType -Name Filter),(Get-RscType -Name Filter))\n$query.Var.filter[0].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_RELIC\n$query.Var.filter[0].texts = \"false\"\n$query.Var.filter[1].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_REPLICATED\n$query.Var.filter[1].texts = \"false\"\n\n$query.field.nodes = @(Get-RscType -Name ActiveDirectoryDomain -InitialProperties `\n    name,`\n    id,`\n    domainName,`\n    domainSid,`\n    registeredDomainControllersCount,`\n    smbDomain.name,smbDomain.domainId,smbDomain.accountName,smbDomain.status,`\n    effectiveSlaDomain.name,effectiveSlaDomain.id,`\n    cluster.name,cluster.id\n)\n$query.Invoke().nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { activeDirectoryDomains(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id domainName domainSid registeredDomainControllersCount smbDomain { name domainId accountName status } effectiveSlaDomain { name id } cluster { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-Exchange/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-Exchange/#retrieving-microsoft-exchange-database-availability-groups","title":"Retrieving Microsoft Exchange Database Availability Groups","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  exchangeDags(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      totalHosts\n      backupPreference\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery exchangeDags\n$query.Var.filter = @((Get-RscType -Name Filter),(Get-RscType -Name Filter))\n$query.Var.filter[0].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_RELIC\n$query.Var.filter[0].texts = \"false\"\n$query.Var.filter[1].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_REPLICATED\n$query.Var.filter[1].texts = \"false\"\n\n$query.Field.nodes = @(\n    Get-RscType -Name ExchangeDag -InitialProperties `\n    name,`\n    id,`\n    cdmId,`\n    totalHosts,`\n    backupPreference,`\n    cluster.name,cluster.id,`\n    effectiveSlaDomain.name,effectiveSlaDomain.Id\n)\n$query.Invoke().nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { exchangeDags(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId totalHosts backupPreference cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-Exchange/#retrieving-microsoft-exchange-servers","title":"Retrieving Microsoft Exchange Servers","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  exchangeServers(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      totalDbs\n      version\n      exchangeDag {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery exchangeServers\n$query.Var.filter = @((Get-RscType -Name Filter),(Get-RscType -Name Filter))\n$query.Var.filter[0].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_RELIC\n$query.Var.filter[0].texts = \"false\"\n$query.Var.filter[1].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_REPLICATED\n$query.Var.filter[1].texts = \"false\"\n\n$query.Field.nodes = @(\n    Get-RscType -Name ExchangeServer -InitialProperties `\n    name,`\n    id,`\n    cdmId,`\n    totalDbs,`\n    version,`\n    exchangeDag.name,exchangeDag.id\n)\n$query.Invoke().nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { exchangeServers(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId totalDbs version exchangeDag { name id } cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-Exchange/#retrieving-microsoft-exchange-databases","title":"Retrieving Microsoft Exchange Databases","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  exchangeDatabases(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      totalCopies\n      activeCopies\n      exchangeServer {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery exchangeDatabases\n$query.Var.filter = @((Get-RscType -Name Filter),(Get-RscType -Name Filter))\n$query.Var.filter[0].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_RELIC\n$query.Var.filter[0].texts = \"false\"\n$query.Var.filter[1].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_REPLICATED\n$query.Var.filter[1].texts = \"false\"\n\n$query.Field.nodes = @(\n    Get-RscType -Name ExchangeDatabase -InitialProperties `\n    name,`\n    id,`\n    cdmId,`\n    totalCopies,`\n    activeCopies,`\n    exchangeServer.name,exchangeServer.Id\n)\n$query.Invoke().nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { exchangeDatabases(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId totalCopies activeCopies exchangeServer { name id } cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-Exchange/On-Demand-Backup/","title":"On Demand Backup","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-Exchange/On-Demand-Backup/#exchange-on-demand-backup","title":"Exchange On-Demand Backup","text":"GraphQL <pre><code>mutation {\n  createOnDemandExchangeBackup(input: {\n    id: \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n    config: {\n      forceFullSnapshot: false\n      baseOnDemandSnapshotConfig: {\n        slaId: \"c7bd8eb2-7132-4c8f-8592-682d507520dc\"\n      }\n    }\n  }) {\n    id\n  }\n}\n</code></pre> PowerShell SDK <pre><code>$query = New-RscMutation -GqlMutation createOnDemandExchangeBackup\n$query.Var.input = Get-RscType -Name CreateOnDemandExchangeDatabaseBackupInput -InitialProperties config.baseOnDemandSnapshotConfig\n$query.Var.input.id = \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n$query.Var.input.Config.forceFullSnapshot = $false\n$query.Var.input.Config.baseOnDemandSnapshotConfig.slaId = \"c7bd8eb2-7132-4c8f-8592-682d507520dc\"\n$query.Field = Get-RscType -Name AsyncRequestStatus -InitialProperties id\n$query.Invoke()\n</code></pre> Shell <pre><code>mutation {\n  createOnDemandExchangeBackup(input: {\n    id: \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n    config: {\n      forceFullSnapshot: false\n      baseOnDemandSnapshotConfig: {\n        slaId: \"c7bd8eb2-7132-4c8f-8592-682d507520dc\"\n      }\n    }\n  }) {\n    id\n  }\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-HyperV/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-HyperV/#retrieving-microsoft-hyper-v-system-center-virtual-machine-managers","title":"Retrieving Microsoft Hyper-V System Center Virtual Machine Managers","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  hypervScvmms(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      hostName\n      scvmmInfo {\n        version\n      }\n      connectionStatus\n      status {\n        connectivity\n      }\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery hypervScvmms\n$query.Var.filter = @((Get-RscType -Name Filter),(Get-RscType -Name Filter))\n$query.Var.filter[0].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_RELIC\n$query.Var.filter[0].texts = \"false\"\n$query.Var.filter[1].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_REPLICATED\n$query.Var.filter[1].texts = \"false\"\n\n$query.field.nodes = @(Get-RscType -Name HyperVscvmm -InitialProperties `\n    name,`\n    id,`\n    hostName,`\n    scvmmInfo.version,`\n    connectionStatus,`\n    status.connectivity,`\n    effectiveSlaDomain.name,effectiveSlaDomain.id,`\n    cluster.name,cluster.id\n)\n$query.Invoke().nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { hypervScvmms(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id hostName scvmmInfo { version } connectionStatus status { connectivity } cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-HyperV/#retrieving-microsoft-hyper-v-servers","title":"Retrieving Microsoft Hyper-V Servers","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  hypervServersPaginated(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      connectionStatus\n      status {\n        connectivity\n      }\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery hypervServersPaginated\n$query.Var.filter = @((Get-RscType -Name Filter),(Get-RscType -Name Filter))\n$query.Var.filter[0].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_RELIC\n$query.Var.filter[0].texts = \"false\"\n$query.Var.filter[1].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_REPLICATED\n$query.Var.filter[1].texts = \"false\"\n\n$query.field.nodes = @(Get-RscType -Name HypervServer -InitialProperties `\n    name,`\n    id,`\n    hostName,`\n    scvmmInfo.version,`\n    connectionStatus,`\n    status.connectivity,`\n    effectiveSlaDomain.name,effectiveSlaDomain.id,`\n    cluster.name,cluster.id\n)\n$query.Invoke().nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { hypervServersPaginated(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id connectionStatus status { connectivity } cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-HyperV/#retrieving-microsoft-hyper-v-virtual-machines","title":"Retrieving Microsoft Hyper-V Virtual Machines","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  hypervVirtualMachines(filter: [\n    #{field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      osType\n      agentStatus {\n        connectionStatus\n        disconnectReason\n      }\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscHypervVm\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { hypervVirtualMachines(filter: [ {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId osType agentStatus { connectionStatus disconnectReason } cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-HyperV/Job-Status/","title":"Job Status","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  jobInfo(input: {\n    requestId: \"CREATE_HYPERV_SNAPSHOT_89ac2296-565d-4199-8aea-36b8a836c64e_a1be6a78-3ce9-454d-964c-0ce30e19d080:::0:::0\"\n    clusterUuid: \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n    type: HYPERV_VM_SNAPSHOT\n    additionalInfo: {}\n  }) {\n    status\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery jobInfo\n$query.Var.input = Get-RscType -Name JobInfoRequest -InitialProperties additionalInfo\n$query.Var.input.Type = [RubrikSecurityCloud.Types.JobType]::HYPERV_VM_SNAPSHOT\n$query.Var.input.requestId = \"CREATE_HYPERV_SNAPSHOT_89ac2296-565d-4199-8aea-36b8a836c64e_a1be6a78-3ce9-454d-964c-0ce30e19d080:::0:::0\"\n$query.Var.input.ClusterUuid = \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n$query.field = Get-RscType -Name JobInfo -InitialProperties status\n$query.Invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { jobInfo(input: { requestId: \\\\\\\"CREATE_HYPERV_SNAPSHOT_89ac2296-565d-4199-8aea-36b8a836c64e_a1be6a78-3ce9-454d-964c-0ce30e19d080:::0:::0\\\\\\\" clusterUuid: \\\\\\\"f79b1102-77b5-4434-8400-c2a66c9b2dc1\\\\\\\" type: HYPERV_VM_SNAPSHOT additionalInfo: {} }) { status } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-HyperV/On-Demand-Backup/","title":"On Demand Backup","text":"GraphQLPowerShell SDKShell <pre><code>mutation {\n  hypervOnDemandSnapshot(input: {\n    id: \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n    config: {\n      slaId: \"c7bd8eb2-7132-4c8f-8592-682d507520dc\"\n    }\n  }) {\n    id\n  }\n}\n</code></pre> <pre><code>$vm = Get-RscHypervVm -Name \"example\"\n$sla = Get-RscSla -Name \"example\"\n\n$query = New-RscMutation -GqlMutation hypervOnDemandSnapshot\n$query.Var.input = Get-RscType -Name HypervOnDemandSnapshotInput -InitialProperties config\n$query.Var.input.id = $vm.id\n$query.Var.input.Config.slaId = $sla.id\n$query.Field = Get-RscType -Name AsyncRequestStatus -InitialProperties id\n$query.invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { hypervOnDemandSnapshot(input: { id: \\\\\\\"f79b1102-77b5-4434-8400-c2a66c9b2dc1\\\\\\\" config: { slaId: \\\\\\\"c7bd8eb2-7132-4c8f-8592-682d507520dc\\\\\\\" } }) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-SQL/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-SQL/#retrieving-microsoft-sql-instances","title":"Retrieving Microsoft SQL Instances","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  mssqlTopLevelDescendants(filter: [\n    {field: NAME_EXACT_MATCH, texts: \"example\"}\n    {field: IS_RELIC, texts: \"false\"}\n    {field: IS_ARCHIVED, texts: \"false\"}\n    {field: IS_REPLICATED, texts: \"false\"}\n    ]) {\n      nodes {\n        id\n        name\n        numWorkloadDescendants\n        ... on PhysicalHost {\n          id\n          name\n          cbtStatus\n          physicalChildConnection {\n            nodes {\n              ... on MssqlInstance {\n                id\n                name\n                slaAssignment\n                effectiveSlaDomain {\n                  name\n                  id\n                  version\n                }\n              }\n            }\n          }\n        }\n      }\n  }\n}\n</code></pre> <pre><code>Get-RscMssqlInstance -Hostname \"mssql.example.com\" -Relic:$false -Replica:$false\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { mssqlTopLevelDescendants(filter: [ {field: NAME_EXACT_MATCH, texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC, texts: \\\\\\\"false\\\\\\\"} {field: IS_ARCHIVED, texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED, texts: \\\\\\\"false\\\\\\\"} ]) { nodes { id name numWorkloadDescendants ... on PhysicalHost { id name cbtStatus physicalChildConnection { nodes { ... on MssqlInstance { id name slaAssignment effectiveSlaDomain { name id version } } } } } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-SQL/#retrieving-microsoft-sql-databases","title":"Retrieving Microsoft SQL Databases","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  mssqlDatabases(\n    filter: [\n      {field: NAME_EXACT_MATCH, texts: \"example\"}\n      {field: IS_RELIC, texts: \"false\"}\n      #{field: LOCATION, texts: \"hostname\\instancename\"}\n      {field: IS_ARCHIVED, texts: \"false\"}\n      {field: IS_REPLICATED, texts: \"false\"}]\n  ) {\n    nodes {\n      name\n      id\n      logicalPath {\n        name\n        objectType\n      }\n      effectiveSlaDomain {\n        id\n        name\n      }\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscMssqlDatabase -Relic:$false -Replica:$false\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { mssqlDatabases( filter: [ {field: NAME_EXACT_MATCH, texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC, texts: \\\\\\\"false\\\\\\\"} {field: IS_ARCHIVED, texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED, texts: \\\\\\\"false\\\\\\\"}] ) { nodes { name id logicalPath { name objectType } effectiveSlaDomain { id name } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-SQL/Job-Status/","title":"Job Status","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-SQL/Job-Status/#retrieving-job-status-of-microsoft-sql-jobs","title":"Retrieving Job Status of Microsoft SQL Jobs","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  mssqlJobStatus(input: {\n    id: \"fb5342f3-daf6-475d-8aa7-14f23932c683\"\n    clusterUuid: \"8417a938-96f5-43c6-9905-b36e051c5f98\"\n  }) {\n    startTime\n    endTime\n    error {\n      message\n    }\n    progress\n    status\n  }\n}\n</code></pre> <pre><code>$requestId = \"MSSQL_DB_BACKUP_00000000-0000-0000-0000-000000000000_00000000-0000-0000-0000-000000000000:::0\"\n$clusterId = \"00000000-0000-0000-0000-000000000000\"\n$query = New-RscQuery -GqlQuery mssqlJobStatus -FieldProfile FULL\n$query.var.input = New-Object -Typename RubrikSecurityCloud.Types.GetMssqlAsyncRequestStatusInput\n$query.var.input.Id = $requestId\n$query.var.input.ClusterUuid = $clusterId\n$query.invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { mssqlJobStatus(input: { id: \\\\\\\"fb5342f3-daf6-475d-8aa7-14f23932c683\\\\\\\" clusterUuid: \\\\\\\"8417a938-96f5-43c6-9905-b36e051c5f98\\\\\\\" }) { startTime endTime error { message } progress status } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-SQL/On-Demand-Backup/","title":"On Demand Backup","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-SQL/On-Demand-Backup/#microsoft-sql-on-demand-backup","title":"Microsoft SQL On-Demand Backup","text":"GraphQLPowerShell SDKShell <pre><code>mutation mssqlDatabaseSnapshot {\n  createOnDemandMssqlBackup(\n    input: {\n      id: \"85e98e61-4c1f-496a-b846-5eb871966025\" \n      config: {\n        baseOnDemandSnapshotConfig: {\n          slaId: \"9f706c3c-4678-44e5-99fe-50ebde6b308e\"\n        }\n      }\n    }) {\n    id\n  }\n}\n</code></pre> <pre><code>$db = Get-RscMssqlDatabase -Name \"example\" -Relic:$false -Replica:$false\n$sla = Get-RscSla -Name \"example\"\n$db | New-RscMssqlSnapshot -RscSlaDomain $sla\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation mssqlDatabaseSnapshot { createOnDemandMssqlBackup( input: { id: \\\\\\\"85e98e61-4c1f-496a-b846-5eb871966025\\\\\\\" config: { baseOnDemandSnapshotConfig: { slaId: \\\\\\\"9f706c3c-4678-44e5-99fe-50ebde6b308e\\\\\\\" } } }) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/MongoDB/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/MongoDB/#retrieving-mongo-collections","title":"Retrieving Mongo Collections","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  mongoCollections(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      source {\n        name\n        id\n      }\n      database {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscMongoCollection\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { mongoCollections(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId source { name id } database { name id } cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/MongoDB/#retrieving-mongo-databases","title":"Retrieving Mongo Databases","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  mongoDatabases(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      source {\n        name\n        id\n      }\n      activeCollectionCount\n      protectedCollectionCount\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscMongoDatabase\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { mongoDatabases(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId source { name id } activeCollectionCount protectedCollectionCount cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/MongoDB/#retrieving-mongo-sources","title":"Retrieving Mongo Sources","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  mongoSources(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      sourceType\n      status\n      discoveryStatus\n      hostDetails {\n        name\n        id\n        connectionStatus\n      }\n      managementType\n      activeCollectionCount\n      protectedCollectionCount\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscMongoSource\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { mongoSources(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId sourceType status discoveryStatus hostDetails { name id connectionStatus } managementType activeCollectionCount protectedCollectionCount cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/NAS-Unstructured-Data/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/NAS-Unstructured-Data/#retrieving-nas-shares","title":"Retrieving NAS Shares","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nasShares(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      shareType\n      exportPoint\n      isChangelistEnabled\n      isStale\n      nasSystem {\n        name\n        id\n      }\n      nasVolume {\n        name\n        id\n        nasNamespace {\n          name\n          id\n        }\n      }\n      primaryFileset {\n        name\n        id\n      }\n      connectedThrough\n      hostAddress\n      hostIdForRestore\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscNasShare\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/NAS-Unstructured-Data/#retrieving-nas-systems","title":"Retrieving NAS Systems","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nasSystems(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      osVersion\n      lastRefreshTime\n      vendorType\n      isSmbSupported\n      isNfsSupported\n      lastStatus\n      volumeCount\n      shareCount\n      namespaceCount\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscNasSystem\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { nasSystems(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId osVersion lastRefreshTime vendorType isSmbSupported isNfsSupported lastStatus volumeCount shareCount namespaceCount cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/NAS-Unstructured-Data/#retrieving-nas-namespaces","title":"Retrieving NAS Namespaces","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nasNamespaces(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      vendorType\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery nasNamespaces\n$query.Var.filter = @((Get-RscType -Name Filter),(Get-RscType -Name Filter))\n$query.Var.filter[0].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_RELIC\n$query.Var.filter[0].texts = \"false\"\n$query.Var.filter[1].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_REPLICATED\n$query.Var.filter[1].texts = \"false\"\n\n$query.field.nodes = @(Get-RscType -Name NasNamespace -InitialProperties `\n    name,`\n    id,`\n    cdmId,`\n    cluster.name,cluster.id\n)\n$query.Invoke().nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { nasNamespaces(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId vendorType cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/NAS-Unstructured-Data/#retrieving-cloud-direct-nas-shares","title":"Retrieving Cloud Direct NAS Shares","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  cloudDirectNasShares(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      protocol\n      ncdPolicyName\n      systemId\n      namespaceId\n      cloudDirectId\n      cloudDirectNasSystem {\n        name\n        id\n      }\n      cloudDirectNasNamespace {\n        name\n        id\n      }\n      excludes {\n        path\n        pattern\n      }\n\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery cloudDirectNasShares\n$query.Var.filter = @((Get-RscType -Name Filter),(Get-RscType -Name Filter))\n$query.Var.filter[0].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_RELIC\n$query.Var.filter[0].texts = \"false\"\n$query.Var.filter[1].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_REPLICATED\n$query.Var.filter[1].texts = \"false\"\n\n$query.field.nodes = @(Get-RscType -Name CloudDirectNasShare -InitialProperties `\n    name,`\n    id,`\n    namespaceId,`\n    protocol,`\n    ncdPolicyName,`\n    systemId,`\n    cloudDirectId,`\n    cloudDirectNasSystem.name,cloudDirectNasSystem.id,`\n    cloudDirectNasNamespace.name,cloudDirectNasNamespace.id,`\n    excludes.path,excludes.pattern,`\n    shareCount,`\n    cluster.name,cluster.id\n)\n$query.Invoke().nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { cloudDirectNasShares(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id protocol ncdPolicyName systemId namespaceId cloudDirectId cloudDirectNasSystem { name id } cloudDirectNasNamespace { name id } excludes { path pattern } cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/NAS-Unstructured-Data/#retrieving-cloud-direct-nas-systems","title":"Retrieving Cloud Direct NAS Systems","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nasSystems(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      osVersion\n      lastRefreshTime\n      vendorType\n      isSmbSupported\n      isNfsSupported\n      lastStatus\n      volumeCount\n      shareCount\n      namespaceCount\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscNasSystem\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { nasSystems(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId osVersion lastRefreshTime vendorType isSmbSupported isNfsSupported lastStatus volumeCount shareCount namespaceCount cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/NAS-Unstructured-Data/#retrieving-cloud-direct-nas-namespaces","title":"Retrieving Cloud Direct NAS Namespaces","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  cloudDirectNasNamespaces(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cloudDirectId\n      cloudDirectNasSystem {\n        name\n        id\n      }\n      shareCount\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery cloudDirectNasNamespaces\n$query.Var.filter = @((Get-RscType -Name Filter),(Get-RscType -Name Filter))\n$query.Var.filter[0].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_RELIC\n$query.Var.filter[0].texts = \"false\"\n$query.Var.filter[1].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_REPLICATED\n$query.Var.filter[1].texts = \"false\"\n\n$query.field.nodes = @(Get-RscType -Name CloudDirectNasNamespace -InitialProperties `\n    name,`\n    id,`\n    cloudDirectId,`\n    cloudDirectNasSystem.name,cloudDirectNasSystem.id,`\n    shareCount,`\n    cluster.name,cluster.id,`\n    effectiveSlaDomain.name,effectiveSlaDomain.id\n)\n$query.Invoke().nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { cloudDirectNasNamespaces(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cloudDirectId cloudDirectNasSystem { name id } shareCount cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Nutanix-AHV/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Nutanix-AHV/#retrieving-nutanix-vms","title":"Retrieving Nutanix VMs","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nutanixVms(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      vmUuid\n      osType\n      vmDisks {\n        label\n        uuid\n        vmDiskUuid\n        sizeInBytes\n        isSnapshottable\n        storageContainerName\n        storageContainerId\n      }\n      preBackupScript {\n        scriptPath\n      }\n      postSnapScript {\n        scriptPath\n      }\n      postBackupScript {\n        scriptPath\n      }\n      snapshotConsistencyMandate\n      agentStatus {\n        connectionStatus\n        disconnectReason\n      }\n      isAgentRegistered\n      hypervisorType\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscNutanixVm\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { nutanixVms(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId vmUuid osType vmDisks { label uuid vmDiskUuid sizeInBytes isSnapshottable storageContainerName storageContainerId } preBackupScript { scriptPath } postSnapScript { scriptPath } postBackupScript { scriptPath } snapshotConsistencyMandate agentStatus { connectionStatus disconnectReason } isAgentRegistered hypervisorType effectiveSlaDomain { name id } cluster { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Nutanix-AHV/#retrieving-nutanix-clusters","title":"Retrieving Nutanix Clusters","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nutanixClusters(filter: [\n    #{field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      hostName\n      naturalId\n      nosVersion\n      connectionStatus {\n        message\n        status\n      }\n      clusterNetworks {\n        name\n        uuid\n      }\n      storageContainers {\n        name\n        uuid\n        freeBytes\n        usedBytes\n        totalBytes\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery nutanixClusters\n$query.Var.filter = @((Get-RscType -Name Filter),(Get-RscType -Name Filter))\n$query.Var.filter[0].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_RELIC\n$query.Var.filter[0].texts = \"false\"\n$query.Var.filter[1].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_REPLICATED\n$query.Var.filter[1].texts = \"false\"\n\n$query.field.nodes = @(Get-RscType -Name NutanixCluster -InitialProperties `\n    name,`\n    id,`\n    cdmId,`\n    hostName,`\n    naturalId,`\n    nosVersion,`\n    clusterNetworks.name,clusterNetworks.uuid,`\n    storageContainers.name,storageContainers.uuid,storageContainers.freeBytes,storageContainers.usedBytes,storageContainers.totalBytes,`\n    connectionStatus.message,connectionStatus.status,`\n    cluster.name,cluster.id\n)\n$query.Invoke().nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { nutanixClusters(filter: [ {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId hostName naturalId nosVersion connectionStatus { message status } clusterNetworks { name uuid } storageContainers { name uuid freeBytes usedBytes totalBytes } effectiveSlaDomain { name id } cluster { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Nutanix-AHV/#retreiving-nutanix-prism-central-servers","title":"Retreiving Nutanix Prism Central Servers","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nutanixPrismCentrals(filter: [\n    #{field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      hostName\n      naturalId\n      nosVersion\n      nutanixClusters {\n        nodes {\n          name\n          id\n        }\n      }\n      isDrEnabled\n      connectionStatus {\n        message\n        status\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery nutanixPrismCentrals\n$query.Var.filter = @((Get-RscType -Name Filter),(Get-RscType -Name Filter))\n$query.Var.filter[0].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_RELIC\n$query.Var.filter[0].texts = \"false\"\n$query.Var.filter[1].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_REPLICATED\n$query.Var.filter[1].texts = \"false\"\n\n$query.field.nodes = @(Get-RscType -Name NutanixPrismCentral -InitialProperties `\n    name,`\n    id,`\n    cdmId,`\n    hostName,`\n    naturalId,`\n    isDrEnabled,`\n    connectionStatus.message,connectionStatus.status,`\n    cluster.name,cluster.id\n)\n$query.Invoke().nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { nutanixPrismCentrals(filter: [ {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId hostName naturalId nosVersion nutanixClusters { nodes { name id } } isDrEnabled connectionStatus { message status } effectiveSlaDomain { name id } cluster { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Nutanix-AHV/Job-Status/","title":"Job Status","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Nutanix-AHV/Job-Status/#retrieving-job-status-of-nutanix-vm-jobs","title":"Retrieving Job Status of Nutanix VM Jobs","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nutanixVmAsyncRequestStatus(input: {\n    id: \"CREATE_NUTANIX_SNAPSHOT_6450b2bb-3114-45ab-a45e-049c7f27b58e-vm-f5bc5502-b9a6-4759-bf02-05dc5a48f9f7_b83291a3-fa87-4aab-863a-60b415215b19:::0\"\n    clusterUuid: \"85e98e61-4c1f-496a-b846-5eb871966025\"\n  }) {\n    progress\n    status\n    result\n    error {\n      message\n    }\n  }\n}\n</code></pre> <pre><code>$requestId = \"CREATE_NUTANIX_SNAPSHOT_6450b2bb-3114-45ab-a45e-049c7f27b58e-vm-f5bc5502-b9a6-4759-bf02-05dc5a48f9f7_b83291a3-fa87-4aab-863a-60b415215b19:::0\"\n$vm = Get-RscNutanixVm -name \"example\"\n\n$query = New-RscQuery -GqlQuery nutanixVmAsyncRequestStatus\n$query.var.input.id = $requestId\n$query.var.input.clusterUuid = $vm.cluster.Id\n$query.invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { nutanixVmAsyncRequestStatus(input: { id: \\\\\\\"CREATE_NUTANIX_SNAPSHOT_6450b2bb-3114-45ab-a45e-049c7f27b58e-vm-f5bc5502-b9a6-4759-bf02-05dc5a48f9f7_b83291a3-fa87-4aab-863a-60b415215b19:::0\\\\\\\" clusterUuid: \\\\\\\"85e98e61-4c1f-496a-b846-5eb871966025\\\\\\\" }) { progress status result error { message } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Nutanix-AHV/Job-Status/#retrieving-job-status-of-nutanix-cluster-jobs","title":"Retrieving Job Status of Nutanix Cluster Jobs","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nutanixClusterAsyncRequestStatus(input: {\n    id: \"REFRESH_NUTANIX_CLUSTER_21fb4363-2510-4ce3-bca2-d4c2ad0f50ab_4b2e24a8-5712-40e9-808b-06fef83423d1:::0\"\n    clusterUuid: \"85e98e61-4c1f-496a-b846-5eb871966025\"\n  }) {\n    progress\n    status\n    result\n    error {\n      message\n    }\n  }\n}\n</code></pre> <pre><code>$requestId = \"REFRESH_NUTANIX_CLUSTER_21fb4363-2510-4ce3-bca2-d4c2ad0f50ab_4b2e24a8-5712-40e9-808b-06fef83423d1:::0\"\n$clusterId = \"85e98e61-4c1f-496a-b846-5eb871966025\"\n\n$query = New-RscQuery -GqlQuery nutanixClusterAsyncRequestStatus\n$query.var.input.id = $requestId\n$query.var.input.clusterUuid = $clusterId\n$query.invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { nutanixClusterAsyncRequestStatus(input: { id: \\\\\\\"REFRESH_NUTANIX_CLUSTER_21fb4363-2510-4ce3-bca2-d4c2ad0f50ab_4b2e24a8-5712-40e9-808b-06fef83423d1:::0\\\\\\\" clusterUuid: \\\\\\\"85e98e61-4c1f-496a-b846-5eb871966025\\\\\\\" }) { progress status result error { message } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Nutanix-AHV/On-Demand-Backup/","title":"On Demand Backup","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Nutanix-AHV/On-Demand-Backup/#nutanix-vm-on-demand-backup","title":"Nutanix VM On-Demand Backup","text":"GraphQLPowerShell SDKShell"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Oracle/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Oracle/#retrieving-oracle-databases","title":"Retrieving Oracle Databases","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  oracleDatabases(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      dbUniqueName\n      numTablespaces\n      numInstances\n      numChannels\n      logRetentionHours\n      hostLogRetentionHours\n      useSecureThrift\n      osType\n      osNames\n      tablespaces\n      numLogSnapshots\n      pdbs {\n        name\n        dbId\n        openMode\n        isApplicationPdb\n        isApplicationRoot\n        applicationRootContainerId\n      }\n      dbRole\n      dataGuardType\n      dataGuardGroup {\n        name\n        id\n      }\n      lastValidationResult {\n        isSuccess\n        snapshotId\n      }\n      instances {\n        instanceName\n        hostId\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscOracleDatabase\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { oracleDatabases(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId dbUniqueName numTablespaces numInstances numChannels logRetentionHours hostLogRetentionHours useSecureThrift osType osNames tablespaces numLogSnapshots pdbs { name dbId openMode isApplicationPdb isApplicationRoot applicationRootContainerId } dbRole dataGuardType dataGuardGroup { name id } lastValidationResult { isSuccess snapshotId } instances { instanceName hostId } effectiveSlaDomain { name id } cluster { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Oracle/#retrieving-oracle-hosts-and-clusters","title":"Retrieving Oracle Hosts and Clusters","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  oracleTopLevelDescendants(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      objectType\n      ... on OracleHost {\n        descendantConnection {\n          nodes {\n            name\n            id\n            objectType\n          }\n        }\n      }\n      ... on OracleRac {\n        descendantConnection {\n          nodes {\n            name\n            id\n            objectType\n          }\n        }\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscOracleHost\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { oracleTopLevelDescendants(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id objectType ... on OracleHost { descendantConnection { nodes { name id objectType } } } ... on OracleRac { descendantConnection { nodes { name id objectType } } } effectiveSlaDomain { name id } cluster { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Oracle/Job-Status/","title":"Job Status","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Oracle/Job-Status/#retrieving-job-status-of-oracle-database-jobs","title":"Retrieving Job Status of Oracle Database Jobs","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  oracleDatabaseAsyncRequestDetails(input: {\n    id: \"CREATE_ORACLE_SNAPSHOT_734cc78a-2fb3-41f1-9906-d2262c604aad_96678e6a-ceb4-439d-be56-352ff0c80a7a:::0\"\n    clusterUuid: \"85e98e61-4c1f-496a-b846-5eb871966025\"\n  }) {\n    progress\n    status\n    result\n    error {\n      message\n    }\n  }\n}\n</code></pre> <pre><code>$requestId = \"CREATE_ORACLE_SNAPSHOT_734cc78a-2fb3-41f1-9906-d2262c604aad_96678e6a-ceb4-439d-be56-352ff0c80a7a:::0\"\n$clusterId = \"00000000-0000-0000-0000-000000000000\"\n\n$query = New-RscQuery -GqlQuery oracleDatabaseAsyncRequestDetails -FieldProfile FULL\n$query.var.input = Get-RscType -Name GetOracleAsyncRequestStatusInput\n$query.var.input.Id = $requestId\n$query.var.input.ClusterUuid = $clusterId\n$query.invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { oracleDatabaseAsyncRequestDetails(input: { id: \\\\\\\"CREATE_ORACLE_SNAPSHOT_734cc78a-2fb3-41f1-9906-d2262c604aad_96678e6a-ceb4-439d-be56-352ff0c80a7a:::0\\\\\\\" clusterUuid: \\\\\\\"85e98e61-4c1f-496a-b846-5eb871966025\\\\\\\" }) { progress status result error { message } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Oracle/On-Demand-Backup/","title":"On Demand Backup","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Oracle/On-Demand-Backup/#oracle-database-on-demand-backup","title":"Oracle Database On-Demand Backup","text":"GraphQLPowerShell SDKShell <pre><code>mutation {\n  takeOnDemandOracleDatabaseSnapshot(input: {\n    id: \"40bac7c1-87ad-4ac0-b4a6-34ac592d8e77\"\n    config: {\n      forceFullSnapshot: false\n      baseOnDemandSnapshotConfig: {\n        slaId: \"7d40e858-b8ec-4096-8112-cab8eff1a4e2\"\n      }\n    }\n  }) {\n    id\n  }\n}\n</code></pre> <pre><code>$oracleDb = Get-RscOracleDatabase -name \"example\"\n\n$query = New-RscMutation -GqlMutation takeOnDemandOracleDatabaseSnapshot\n$query.Var.input = Get-RscType -Name TakeOnDemandOracleDatabaseSnapshotInput -InitialProperties config.baseOnDemandSnapshotConfig\n$query.Var.input.id = $oracleDb.id\n$query.Var.input.Config.forceFullSnapshot = $false\n$query.Var.input.Config.baseOnDemandSnapshotConfig.slaId = $oracleDb.EffectiveSlaDomain.id\n$query.Field = Get-RscType -Name AsyncRequestStatus -InitialProperties id\n$query.Invoke()\n\n# mutation {\n#     takeOnDemandOracleDatabaseSnapshot(input: {\n#       id: \"40bac7c1-87ad-4ac0-b4a6-34ac592d8e77\"\n#       config: {\n#         forceFullSnapshot: false\n#         baseOnDemandSnapshotConfig: {\n#             slaId: \"7d40e858-b8ec-4096-8112-cab8eff1a4e2\"\n#         }\n#       }\n#     }) {\n#       id\n#     }\n#   }\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { takeOnDemandOracleDatabaseSnapshot(input: { id: \\\\\\\"40bac7c1-87ad-4ac0-b4a6-34ac592d8e77\\\\\\\" config: { forceFullSnapshot: false baseOnDemandSnapshotConfig: { slaId: \\\\\\\"7d40e858-b8ec-4096-8112-cab8eff1a4e2\\\\\\\" } } }) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Oracle/On-Demand-Backup/#oracle-database-on-demand-log-backup","title":"Oracle Database On-Demand Log Backup","text":"GraphQLPowerShell SDKShell <pre><code>mutation {\n  takeOnDemandOracleLogSnapshot(input: {\n    id: \"40bac7c1-87ad-4ac0-b4a6-34ac592d8e77\"\n  }) {\n    id\n  }\n}\n</code></pre> <pre><code>$oracleDb = Get-RscOracleDatabase -name \"example\"\n\n$query = New-RscMutation -GqlMutation takeOnDemandOracleLogSnapshot\n$query.Var.input = Get-RscType -Name TakeOnDemandOracleLogSnapshotInput -InitialProperties config.baseOnDemandSnapshotConfig\n$query.Var.input.id = $oracleDb.id\n$query.Field = Get-RscType -Name AsyncRequestStatus -InitialProperties id\n$query.Invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { takeOnDemandOracleLogSnapshot(input: { id: \\\\\\\"40bac7c1-87ad-4ac0-b4a6-34ac592d8e77\\\\\\\" }) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/SAP-HANA/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/SAP-HANA/#retrieving-sap-hana-databases","title":"Retrieving SAP HANA Databases","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  sapHanaDatabases(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      info {\n        databaseType\n        status\n        backintPath\n        paramFilePath\n        numChannels\n        approxDbSizeInMb\n        logBackupIntervalSecs\n        restoreConfiguredSrcDatabaseId\n        logMode\n      }\n      dataPathType\n      dataPathSpec {\n        name\n      }\n      sapHanaSystem {\n        name\n        id\n      }\n      forceFull\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscSapHanaDatabase\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { sapHanaDatabases(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id info { databaseType status backintPath paramFilePath numChannels approxDbSizeInMb logBackupIntervalSecs restoreConfiguredSrcDatabaseId logMode } dataPathType dataPathSpec { name } sapHanaSystem { name id } forceFull effectiveSlaDomain { name id } cluster { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/SAP-HANA/#retrieving-sap-hana-systems","title":"Retrieving SAP HANA Systems","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  sapHanaSystems(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      objectType\n      sid\n      instanceNumber\n      status\n      statusMessage\n      systemInfo {\n        hanaVersion\n        isDtEnabled\n        authType\n      }\n      hosts {\n        hostName\n        hostUuid\n        hostType\n        status\n        systemHost {\n          name\n          id\n        }\n      }\n            descendantConnection {\n        nodes {\n          name\n          id\n          objectType\n        }\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscSapHanaSystem\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/SAP-HANA/Job-Status/","title":"Job Status","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/SAP-HANA/Job-Status/#retrieving-sap-hana-database-job-status","title":"Retrieving SAP HANA Database Job Status","text":"GraphQLPowerShell SDKShell <pre><code>query {\n    jobInfo(input: {\n    requestId: \"CREATE_SAP_HANA_FULL_SNAPSHOT_cbf8fff1-8f31-477b-b2f0-6ebe1f53b507_dc3a6e12-e1f1-4ad4-ab02-14491c06b208:::0\"\n    clusterUuid: \"85e98e61-4c1f-496a-b846-5eb871966025\"\n    type: SAP_HANA_DATABASE\n  }) {\n    status\n  }\n}\n</code></pre> <pre><code>query {\n    jobInfo(input: {\n    requestId: \"CREATE_SAP_HANA_FULL_SNAPSHOT_cbf8fff1-8f31-477b-b2f0-6ebe1f53b507_dc3a6e12-e1f1-4ad4-ab02-14491c06b208:::0\"\n    clusterUuid: \"85e98e61-4c1f-496a-b846-5eb871966025\"\n    type: SAP_HANA_DATABASE\n  }) {\n    status\n  }\n}\n</code></pre> <pre><code>query {\n    jobInfo(input: {\n    requestId: \"CREATE_SAP_HANA_FULL_SNAPSHOT_cbf8fff1-8f31-477b-b2f0-6ebe1f53b507_dc3a6e12-e1f1-4ad4-ab02-14491c06b208:::0\"\n    clusterUuid: \"85e98e61-4c1f-496a-b846-5eb871966025\"\n    type: SAP_HANA_DATABASE\n  }) {\n    status\n  }\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/SAP-HANA/On-Demand-Backup/","title":"On Demand Backup","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/SAP-HANA/On-Demand-Backup/#sap-hana-database-on-demand-backup","title":"SAP HANA Database On-Demand Backup","text":"GraphQLPowerShell SDKShell <pre><code>mutation {\n  createOnDemandSapHanaBackup(input: {\n    id: \"40bac7c1-87ad-4ac0-b4a6-34ac592d8e77\"\n    config: {\n      slaId: \"7d40e858-b8ec-4096-8112-cab8eff1a4e2\"\n    }\n  }) {\n    id\n  }\n}\n</code></pre> <pre><code>$hanaDb = Get-RscSapHanaDatabase -name \"example\"\n\n$query = New-RscMutation -GqlMutation createOnDemandSapHanaBackup\n$query.Var.input = Get-RscType -Name CreateOnDemandSapHanaBackupInput -InitialProperties config\n$query.Var.input.id = $hanaDb.id\n$query.Var.input.Config.slaId = $hanaDb.EffectiveSlaDomain.id\n$query.Field = Get-RscType -Name AsyncRequestStatus -InitialProperties id\n$query.Invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { createOnDemandSapHanaBackup(input: { id: \\\\\\\"40bac7c1-87ad-4ac0-b4a6-34ac592d8e77\\\\\\\" config: { slaId: \\\\\\\"7d40e858-b8ec-4096-8112-cab8eff1a4e2\\\\\\\" } }) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/","title":"VMware vSphere Virtual Machines","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/#description","title":"Description","text":"<p>For information on protection capabilities, see the Rubrik Security Cloud documentation</p>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/#retrieving-vsphere-virtual-machine-information","title":"Retrieving vSphere Virtual Machine Information","text":"<p>To list virtual machines known by Rubrik, you can perform the following. There are various filters to search by name, MOID, cluster, organization, and more.</p> GraphQLPowerShell SDKShell <pre><code>query {\n  vSphereVmNewConnection(\n    filter: [\n      # {field: NAME_EXACT_MATCH texts: \"foo\"}\n      {field: IS_RELIC texts: \"false\"},\n      {field: IS_REPLICATED texts: \"false\"}\n    ]\n  ) {\n    nodes {\n      name\n      id\n      cdmId\n      effectiveSlaDomain {\n        name\n        id\n      }\n      guestCredentialAuthorizationStatus\n      objectType\n      powerStatus\n      slaAssignment\n      snapshotConsistencyMandate\n      blueprintId\n      guestCredentialId\n      guestOsName\n      isActive\n      isArrayIntegrationPossible\n      isBlueprintChild\n      isRelic\n      numWorkloadDescendants\n      slaPauseStatus\n      agentStatus {\n        agentStatus\n      }\n      allOrgs {\n        id\n        name\n      }\n      cluster {\n        id\n        name\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscVmwareVm -Name \"Foo\" -Relic:$false -Replica:$false\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { vSphereVmNewConnection( filter: [ {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"}, {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ] ) { nodes { name id cdmId effectiveSlaDomain { name id } guestCredentialAuthorizationStatus objectType powerStatus slaAssignment snapshotConsistencyMandate blueprintId guestCredentialId guestOsName isActive isArrayIntegrationPossible isBlueprintChild isRelic numWorkloadDescendants slaPauseStatus agentStatus { agentStatus } allOrgs { id name } cluster { id name } } pageInfo { endCursor hasNextPage } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/#retrieving-vmware-vsphere-compute-clusters","title":"Retrieving VMware vSphere Compute Clusters","text":"<p>Querying for vSphere Compute Clusters is the easiest way to get the IDs for all recovery destinations.</p> GraphQLPowerShell SDKShell <pre><code>query {\n  vSphereComputeClusters(filter: {\n    field: NAME_EXACT_MATCH texts: \"foo\"\n    }) {\n    nodes {\n      name\n      id\n      logicalPath {\n        name\n        fid\n        objectType\n      }\n      descendantConnection(typeFilter: [VSphereHost,VSphereNetwork,VSphereDatastore,VSphereResourcePool]) {\n        nodes {\n          name\n          id\n          objectType\n        }\n      }\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery vSphereComputeClusters\n$query.var.filter = @(Get-RscType -Name Filter)\n$query.var.filter[0].Texts = \"example\"\n$query.var.filter[0].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::NAME_EXACT_MATCH\n$query.var.filter += Get-RscType -Name Filter\n$query.var.filter[1].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_RELIC\n$query.var.filter[1].Texts = \"false\"\n$query.var.filter += Get-RscType -Name Filter\n$query.var.filter[2].Field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_REPLICATED\n$query.var.filter[2].Texts = \"false\"\n$query.field.Nodes[0].descendantConnection = Get-RscType -Name VsphereComputeClusterDescendantTypeConnection\n$query.field.nodes[0].Vars.DescendantConnection.typeFilter = @(\n    [RubrikSecurityCloud.Types.HierarchyObjectTypeEnum]::VSPHERE_HOST\n    [RubrikSecurityCloud.Types.HierarchyObjectTypeEnum]::VSPHERE_NETWORK\n    [RubrikSecurityCloud.Types.HierarchyObjectTypeEnum]::VSPHERE_DATASTORE\n    [RubrikSecurityCloud.Types.HierarchyObjectTypeEnum]::VSPHERE_RESOURCE_POOL\n)\n$query.field.nodes[0].DescendantConnection.Nodes = @(\n    (Get-RscType -Name VsphereHost -InitialProperties name,id,objectType)\n    (Get-RscType -Name VsphereNetwork -InitialProperties name,id,objectType)\n    (Get-RscType -Name VsphereDatastore -InitialProperties name,id,objectType)\n    (Get-RscType -Name VsphereResourcePool -InitialProperties name,id,objectType)\n)\n\n$query.invoke().nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { vSphereComputeClusters(filter: { field: NAME_EXACT_MATCH texts: \\\\\\\"foo\\\\\\\" }) { nodes { name id logicalPath { name fid objectType } descendantConnection(typeFilter: [VSphereHost,VSphereNetwork,VSphereDatastore,VSphereResourcePool]) { nodes { name id objectType } } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/#retrieving-vcenter-servers","title":"Retrieving vCenter Servers","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  vSphereVCenterConnection {\n    nodes {\n      objectType\n      slaAssignment\n      effectiveSlaDomain {\n        ... on GlobalSlaReply {\n          clusterUuid\n          description\n          id\n          isArchived\n          isDefault\n          isReadOnly\n          isRetentionLockedSla\n          name\n          stateVersion\n          version\n        }\n      }\n      id\n      isHotAddEnabledForOnPremVcenter\n      isStandaloneHost\n      isVmc\n      name\n      numWorkloadDescendants\n      slaPauseStatus\n      username\n      vcenterId\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n      hasPreviousPage\n      startCursor\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery vSphereVCenterConnection\n$query.invoke().nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { vSphereVCenterConnection { nodes { objectType slaAssignment effectiveSlaDomain { ... on GlobalSlaReply { clusterUuid description id isArchived isDefault isReadOnly isRetentionLockedSla name stateVersion version } } id isHotAddEnabledForOnPremVcenter isStandaloneHost isVmc name numWorkloadDescendants slaPauseStatus username vcenterId } pageInfo { endCursor hasNextPage hasPreviousPage startCursor } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Job-Status/","title":"Job Status","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Job-Status/#description","title":"Description","text":"<p>Tasks such as on-demand backups and recoveries are asynchronous requests and return an AsynRequestStatus which can be monitored for progress and completion.</p> <p>To monitor the asynchronous request status for VMware vSphere, provide the ID of the cluster and the ID of the job. You can query the request status periodically until a terminal state (<code>SUCCEEDED</code>, <code>FAILED</code>, <code>CANCELLED</code>) is set given in the status field.</p>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Job-Status/#code-samples","title":"Code Samples","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  vSphereVMAsyncRequestStatus(\n    id: \"d4822e3d-c6e3-4bbe-950e-3e63c4770a78\"\n    clusterUuid: \"e4e7d2a2-c58b-4bc2-b11e-d6f9102e6fc8\"\n  ) {\n    id\n    status\n    startTime\n    progress\n    endTime\n    error {\n      message\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery vSphereVMAsyncRequestStatus\n$query.var.id = $request.Id\n$query.var.clusterUuid = $vm.cluster.Id\n$query.invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { vSphereVMAsyncRequestStatus( id: \\\\\\\"d4822e3d-c6e3-4bbe-950e-3e63c4770a78\\\\\\\" clusterUuid: \\\\\\\"e4e7d2a2-c58b-4bc2-b11e-d6f9102e6fc8\\\\\\\" ) { id status startTime progress endTime error { message } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/On-Demand-Backup/","title":"On Demand Backup","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/On-Demand-Backup/#vmware-vm-on-demand-backup","title":"VMware VM On-Demand Backup","text":"<p>To Perform an On-Demand Backup, you will need the Virtual Machine <code>ID</code> and SLA <code>ID</code>.</p> GraphQLPowerShell SDKShell <pre><code>mutation {\n  vsphereBulkOnDemandSnapshot(\n    input: {\n      config: {\n        vms: [\"EC6A4D79-8F6F-4105-9DD6-11F4875C7A8B\"]\n        slaId: \"def96ac0-be74-5e59-87e2-5af73b65ac1e\"\n        }\n      }\n    ) {\n    responses {\n      id\n    }\n  }\n}\n</code></pre> <pre><code>$vm = Get-RscVmwareVm -name \"example\"\n\n$query = New-Rscmutation -GqlMutation vsphereBulkOnDemandSnapshot -FieldProfile FULL\n$query.var.input = Get-RscType -Name vsphereBulkOnDemandSnapshotInput -InitialProperties config\n$query.var.input.config.Vms = @($vm.id)\n$query.var.input.config.SlaId = $vm.EffectiveSlaDomain.Id\ninvoke-rsc $query\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { vsphereBulkOnDemandSnapshot( input: { config: { vms: [\\\\\\\"EC6A4D79-8F6F-4105-9DD6-11F4875C7A8B\\\\\\\"] slaId: \\\\\\\"def96ac0-be74-5e59-87e2-5af73b65ac1e\\\\\\\" } } ) { responses { id } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre> <p>To monitor the status of the on-demand backup, see job status</p>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Recovery/","title":"Recovery","text":"<p>Recoveries have many configuration options. The below examples demonstrate one way of configuring recoveries. For all possible recovery options refer to the API reference for the corresponding mutation.</p>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Recovery/#export","title":"Export","text":"<p>Creates a new virtual machine from a snapshot</p> GraphQLPowerShell SDKShell <pre><code>mutation {\n  vsphereVmExportSnapshotV3(\n    input: {\n    id: \"e776b2f3-8ea6-47aa-8ea4-ad0029cbc451\"\n    config: {\n      clusterId: \"82a56e23-96b2-460d-8020-a859dd285690\"\n      hostId: \"3bb4e1cc-fb27-426f-ad78-2d8a469c0a4a\"\n      storageLocationId: \"b0ec695f-d97d-44ba-882a-b4a17c4274a9\"\n      shouldRecoverTags: true\n    }\n    }) {\n    id\n  }\n}\n</code></pre> <pre><code>$vm = Get-RscVmwareVm -Name \"example\" -Relic:$false -Replica: $false\n$snapshot = $vm | Get-RscSnapshot -BeforeTime \"1900/01/01\" -AfterTime \"1900/01/01\" | Select-Object -First 1\n$vsphereClusterId = \"00000000-0000-0000-0000-000000000000\"\n$vsphereDatastoreId = \"00000000-0000-0000-0000-000000000000\"\n\n$query = New-RscMutation -GqlMutation vsphereVmExportSnapshotV3\n$query.Var.Input = Get-RscType -Name VsphereVmExportSnapshotV3Input -InitialProperties config.requiredRecoveryParameters\n$query.Var.Input.Id = $vm.id\n$query.Var.Input.config.clusterId = $vsphereClusterId\n$query.Var.Input.config.storageLocationId = $vsphereDatastoreId\n$query.Var.Input.config.requiredRecoveryParameters.snapshotId = $snapshot.Id\n\n$query.invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { vsphereVmExportSnapshotV3( input: { id: \\\\\\\"e776b2f3-8ea6-47aa-8ea4-ad0029cbc451\\\\\\\" config: { clusterId: \\\\\\\"82a56e23-96b2-460d-8020-a859dd285690\\\\\\\" hostId: \\\\\\\"3bb4e1cc-fb27-426f-ad78-2d8a469c0a4a\\\\\\\" storageLocationId: \\\\\\\"b0ec695f-d97d-44ba-882a-b4a17c4274a9\\\\\\\" shouldRecoverTags: true } }) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Recovery/#recover-files","title":"Recover Files","text":"<p>Restore files and folders from a snapshot</p> GraphQLPowerShell SDKShell <pre><code>mutation {\n  vsphereVmRecoverFilesNew(input: {\n    id: \"4d94175e-9fd4-5198-8c46-64c2ce3559a2\"\n    clusterUuid: \"6a271636-9392-4cba-90c5-bdbe227854ab\"\n    config: {\n      destObjectId: \"a8fd8809-bbdb-5a03-8663-1c1feb19791c\"\n      shouldUseAgent: true\n      restoreConfig: {\n        restorePathPair: {\n          path: \"C:\\\\foo\\\\bar\\\\example.txt\"\n          restorePath: \"C:\\\\foo\\\\bar\"\n        }\n      }\n    }\n  }) {\n    id\n  }\n}\n</code></pre> <pre><code>$vm = Get-RscVmwareVm -Name \"example\" -Relic:$false -Replica:$false\n$snapshot = $vm | Get-RscSnapshot | Select-Object -First 1\n$SourceFilePath = \"C:\\\\foo\\\\bar.txt\"\n$DestinationFilePath = \"C:\\\\restore\"\n\n# Optional\n# $DestinationVm = Get-RscVmwareVm -id \"123\"\n\n$query = New-RscMutation -GqlMutation vsphereVmRecoverFilesNew -FieldProfile FULL\n\n$query.var.input = New-Object -Typename RubrikSecurityCloud.Types.VsphereVmRecoverFilesNewInput\n$query.var.input.Config = New-Object RubrikSecurityCloud.Types.RestoreFilesJobConfigInput\n$query.var.input.Config.RestoreConfig = New-Object -TypeName RubrikSecurityCloud.Types.VmRestorePathPairInput\n$query.var.input.Config.RestoreConfig[0].RestorePathPair = New-Object RubrikSecurityCloud.Types.RestorePathPairInput\n\n$query.var.input.id = $snapshot.id\n$query.var.input.clusterUuid = $snapshot.Cluster.id\n\nif ($DestinationVm) {\n    $query.var.input.config.destinationObjectId = $DestinationVm.id\n}\nelse {\n    $query.var.input.config.destinationObjectId = $snapshot.SnappableNew.Id\n}\n\n$query.var.input.config.restoreConfig[0].RestorePathPair.path = $SourceFilePath\n$query.var.input.config.restoreConfig[0].RestorePathPair.restorePath = $DestinationFilePath\n\n$result = Invoke-Rsc -Query $query\n$result\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { vsphereVmRecoverFilesNew(input: { id: \\\\\\\"4d94175e-9fd4-5198-8c46-64c2ce3559a2\\\\\\\" clusterUuid: \\\\\\\"6a271636-9392-4cba-90c5-bdbe227854ab\\\\\\\" config: { destObjectId: \\\\\\\"a8fd8809-bbdb-5a03-8663-1c1feb19791c\\\\\\\" shouldUseAgent: true restoreConfig: { restorePathPair: { path: \\\\\\\"C:\\\\foo\\\\bar\\\\example.txt\\\\\\\" restorePath: \\\\\\\"C:\\\\foo\\\\bar\\\\\\\" } } } }) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Recovery/#in-place-recovery","title":"In-Place Recovery","text":"<p>Update the source virtual machine with data from a snapshot using only changed blocks.</p> GraphQLPowerShell SDKShell <pre><code>mutation {\n  vsphereVmInitiateInPlaceRecovery(\n    input: {\n      id: \"d2d9ed9f-bb52-4ae8-a50e-9692e8bf8dff\"\n      config: {\n        requiredRecoveryParameters: {\n          snapshotId: \"072ab1cd-ea3f-4dd2-8b63-49f24a5f87a2\"\n        }\n      }\n    }\n    ) {\n    id\n    status\n    startTime\n    endTime\n    progress\n    error {\n      message\n    }\n  }\n}\n</code></pre> <pre><code>$vm = Get-RscVmwareVm -Name \"example\" -Relic:$false -Replica:$false\n$snapshot = $vm | Get-RscSnapshot | Select-Object -First 1\n\n$query = New-RscMutation -GqlMutation vsphereVmInitiateInPlaceRecovery -FieldProfile FULL\n$query.Var.input = Get-RscType -name VsphereVmInitiateInPlaceRecoveryInput -InitialProperties config.requiredRecoveryParameters\n$query.Var.input.id = $vm.Id\n$query.Var.input.Config.requiredRecoveryParameters.snapshotId = $snapshot.Id\n$query.invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { vsphereVmInitiateInPlaceRecovery( input: { id: \\\\\\\"d2d9ed9f-bb52-4ae8-a50e-9692e8bf8dff\\\\\\\" config: { requiredRecoveryParameters: { snapshotId: \\\\\\\"072ab1cd-ea3f-4dd2-8b63-49f24a5f87a2\\\\\\\" } } } ) { id status startTime endTime progress error { message } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Recovery/#live-mount","title":"Live Mount","text":"<p>Create a new virtual machine from a snapshot. The recovered virtual machine uses the Rubrik cluster as its datastore.</p> GraphQLPowerShell SDKShell <pre><code>mutation {\n  vsphereVmInitiateLiveMountV2(\n    input: {\n      id: \"a8fd8809-bbdb-5a03-8663-1c1feb19791c\"\n      config: {\n        clusterId: \"e90741cc-4360-54b8-9ad3-84db4727c62e\" \n        requiredRecoveryParameters: {\n          snapshotId: \"823cd454-7349-5a2c-a055-a936faf04c73\" \n            }, \n        mountExportSnapshotJobCommonOptionsV2: {\n          powerOn: true \n          disableNetwork: true \n          vmName: \"livemountExample\"\n        }\n      }\n    }\n  ) {\n    id\n  }\n}\n</code></pre> <pre><code>$vm = Get-RscVmwareVm -Name \"example\" -Relic:$false -Replica:$false\n$snapshot = $vm | Get-RscSnapshot | Select-Object -First 1\n\n$query = New-RscMutation -GqlMutation vsphereVmInitiateLiveMountV2 -FieldProfile FULL\n$query.Var.input = Get-RscType -name VsphereVmInitiateLiveMountV2Input -InitialProperties `\n    config.requiredRecoveryParameters,`\n    config.mountExportSnapshotJobCommonOptionsV2\n$query.Var.input.id = $vm.Id\n$query.Var.input.Config.preserveMoid = $true\n$query.Var.input.Config.shouldRecoverTags = $true\n$query.Var.input.Config.clusterId = $vm.Cluster.Id\n$query.Var.input.Config.requiredRecoveryParameters.snapshotId = $snapshot.Id\n$query.Var.input.Config.mountExportSnapshotJobCommonOptionsV2.powerOn = $true\n$query.Var.input.Config.mountExportSnapshotJobCommonOptionsV2.keepMacAddresses = $true\n$query.Var.input.Config.mountExportSnapshotJobCommonOptionsV2.disableNetwork = $false\n$query.invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { vsphereVmInitiateLiveMountV2( input: { id: \\\\\\\"a8fd8809-bbdb-5a03-8663-1c1feb19791c\\\\\\\" config: { clusterId: \\\\\\\"e90741cc-4360-54b8-9ad3-84db4727c62e\\\\\\\" requiredRecoveryParameters: { snapshotId: \\\\\\\"823cd454-7349-5a2c-a055-a936faf04c73\\\\\\\" }, mountExportSnapshotJobCommonOptionsV2: { powerOn: true disableNetwork: true vmName: \\\\\\\"livemountExample\\\\\\\" } } } ) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Recovery/#instant-recovery","title":"Instant Recovery","text":"<p>Replace the source virtual machine with a virtual machine recovered from a snapshot. The recovered virtual machine uses the Rubrik cluster as the datastore.</p> GraphQLPowerShell SDKShell <pre><code>mutation {\n  vsphereVmInitiateInstantRecoveryV2(\n    input: {\n      id: \"a8fd8809-bbdb-5a03-8663-1c1feb19791c\"\n      config: {\n        preserveMoid: true\n        shouldRecoverTags: true\n        clusterId: \"e90741cc-4360-54b8-9ad3-84db4727c62e\" \n        requiredRecoveryParameters: {\n          snapshotId: \"823cd454-7349-5a2c-a055-a936faf04c73\" \n            }, \n        mountExportSnapshotJobCommonOptionsV2: {\n          powerOn: true \n          keepMacAddresses: true\n          disableNetwork: false\n        }\n      }\n    }\n  ) {\n    id\n  }\n}\n</code></pre> <pre><code>$vm = Get-RscVmwareVm -Name \"example\" -Relic:$false -Replica:$false\n$snapshot = $vm | Get-RscSnapshot | Select-Object -First 1\n\n$query = New-RscMutation -GqlMutation vsphereVmInitiateInstantRecoveryV2 -FieldProfile FULL\n$query.Var.input = Get-RscType -name VsphereVmInitiateInstantRecoveryV2Input -InitialProperties `\n    config.requiredRecoveryParameters,`\n    config.mountExportSnapshotJobCommonOptionsV2\n$query.Var.input.id = $vm.Id\n$query.Var.input.Config.preserveMoid = $true\n$query.Var.input.Config.shouldRecoverTags = $true\n$query.Var.input.Config.clusterId = $vm.Cluster.Id\n$query.Var.input.Config.requiredRecoveryParameters.snapshotId = $snapshot.Id\n$query.Var.input.Config.mountExportSnapshotJobCommonOptionsV2.powerOn = $true\n$query.Var.input.Config.mountExportSnapshotJobCommonOptionsV2.keepMacAddresses = $true\n$query.Var.input.Config.mountExportSnapshotJobCommonOptionsV2.disableNetwork = $false\n$query.invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { vsphereVmInitiateInstantRecoveryV2( input: { id: \\\\\\\"a8fd8809-bbdb-5a03-8663-1c1feb19791c\\\\\\\" config: { preserveMoid: true shouldRecoverTags: true clusterId: \\\\\\\"e90741cc-4360-54b8-9ad3-84db4727c62e\\\\\\\" requiredRecoveryParameters: { snapshotId: \\\\\\\"823cd454-7349-5a2c-a055-a936faf04c73\\\\\\\" }, mountExportSnapshotJobCommonOptionsV2: { powerOn: true keepMacAddresses: true disableNetwork: false } } } ) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Recovery/#mount-virtual-disks","title":"Mount Virtual Disks","text":"<p>Create new virtual disks from a snapshot, using the Rubrik cluster as the datastore. Mount these disks to another virtual machine.</p> GraphQLPowerShell SDKShell <pre><code>mutation {\n  vsphereVmInitiateDiskMount(input: {\n    id: \"0c716834-1440-4c0e-bffd-c375b39309cb\" # snapshot ID\n    config: {\n      targetVmId: \"49ccc234-3fc5-4aab-9fec-eb8de56d29bf\" \n      vmdkIds: [\"b94a692e-2f07-44c6-8186-17e0075341d9\"] # removing this will mount all VMDKs\n    }\n  }) {\n    id\n  }\n}\n</code></pre> <pre><code>$vm = Get-RscVmwareVm -Name \"example\" -Relic:$false -Replica:$false\n$snapshot = $vm | Get-RscSnapshot | Select-Object -First 1\n\n$query = New-RscMutation -GqlMutation vsphereVmInitiateDiskMount -FieldProfile FULL\n$query.Var.input = Get-RscType -name VsphereVmInitiateDiskMountInput -InitialProperties config\n$query.Var.input.id = $snapshot.Id\n$query.Var.input.Config.targetVmId = $vm.id\n$query.Var.input.Config.vmdkIds = @(\"b94a692e-2f07-44c6-8186-17e0075341d9\")\n$query.invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { vsphereVmInitiateDiskMount(input: { id: \\\\\\\"0c716834-1440-4c0e-bffd-c375b39309cb\\\\\\\" config: { targetVmId: \\\\\\\"49ccc234-3fc5-4aab-9fec-eb8de56d29bf\\\\\\\" vmdkIds: [\\\\\\\"b94a692e-2f07-44c6-8186-17e0075341d9\\\\\\\"] } }) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Script-Examples/Restore-VM-File/","title":"Restore File or Folder","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Script-Examples/Restore-VM-File/#description","title":"Description","text":"<p>This full working example performs a restore of the file or folder specified in the script.  </p>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Script-Examples/Restore-VM-File/#code","title":"Code","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/","title":"SLA Domains","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/#what-are-sla-domains","title":"What are SLA Domains?","text":"<p>Rubrik SLA Domains are data protection policies that define:</p> <ul> <li>The object types for which the policy can be applied</li> <li>The frequency of the backups</li> <li>The retention of the backups</li> <li>The replication destination of the backups</li> <li>The archival location of the backups</li> <li>Object specific settings based on the type (e.g. MSSQL Database)</li> </ul>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/#retrieve-all-slas","title":"Retrieve All SLAs","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  slaDomains {\n    nodes {\n      id\n      name\n      ... on GlobalSlaReply {\n        isDefault\n        description\n        snapshotSchedule {\n          minute {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          hourly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          daily {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          weekly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfWeek\n          }\n          monthly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfMonth\n          }\n          quarterly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfQuarter\n            quarterStartMonth\n          }\n          yearly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfYear\n            yearStartMonth\n          }\n        }\n        archivalSpecs {\n          threshold\n          thresholdUnit\n          storageSetting {\n            id\n            name\n            groupType\n          }\n          archivalTieringSpec {\n            coldStorageClass\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n        }\n        backupWindows {\n          durationInHours\n          startTimeAttributes {\n            hour\n            minute\n          }\n        }\n        firstFullBackupWindows {\n          durationInHours\n          startTimeAttributes {\n            dayOfWeek {\n              day\n            }\n            hour\n            minute\n          }\n        }\n        replicationSpecsV2 {\n          replicationLocalRetentionDuration {\n            duration\n            unit\n          }\n          cascadingArchivalSpecs {\n            archivalTieringSpec {\n              coldStorageClass\n              shouldTierExistingSnapshots\n              minAccessibleDurationInSeconds\n              isInstantTieringEnabled\n            }\n            archivalLocation {\n              id\n              name\n              targetType\n              ... on RubrikManagedAwsTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedNfsTarget {\n                host\n              }\n              ... on CdmManagedAwsTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on CdmManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n            }\n            frequency\n            archivalThreshold {\n              duration\n              unit\n            }\n          }\n          retentionDuration {\n            duration\n            unit\n          }\n          cluster {\n            id\n            name\n          }\n          targetMapping {\n            id\n            name\n          }\n          awsTarget {\n            accountId\n            accountName\n            region\n          }\n          azureTarget {\n            region\n          }\n        }\n        localRetentionLimit {\n          duration\n          unit\n        }\n        objectSpecificConfigs {\n          sapHanaConfig {\n            incrementalFrequency {\n              duration\n              unit\n            }\n            differentialFrequency {\n              duration\n              unit\n            }\n            logRetention {\n              duration\n              unit\n            }\n          }\n          awsRdsConfig {\n            logRetention {\n              duration\n            }\n          }\n          vmwareVmConfig {\n            logRetentionSeconds\n          }\n        }\n        clusterToSyncStatusMap {\n          clusterUuid\n          slaSyncStatus\n        }\n        objectTypes\n        upgradeInfo {\n          eligibility {\n            isEligible\n            ineligibilityReason\n          }\n          latestUpgrade {\n            status\n            msg\n          }\n        }\n        allOrgsHavingAccess {\n          id\n          name\n        }\n        ownerOrg {\n          id\n          name\n        }\n        isRetentionLockedSla\n      }\n      ... on ClusterSlaDomain {\n        cdmId\n        name\n        cluster {\n          name\n          version\n        }\n        snapshotSchedule {\n          minute {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          hourly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          daily {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          weekly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfWeek\n          }\n          monthly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfMonth\n          }\n          quarterly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfQuarter\n            quarterStartMonth\n          }\n          yearly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfYear\n            yearStartMonth\n          }\n        }\n        backupWindows {\n          durationInHours\n          startTimeAttributes {\n            hour\n            minute\n          }\n        }\n        firstFullBackupWindows {\n          durationInHours\n          startTimeAttributes {\n            dayOfWeek {\n              day\n            }\n            hour\n            minute\n          }\n        }\n        archivalSpec {\n          threshold\n          thresholdUnit\n          archivalLocationName\n          archivalLocationId\n          archivalTieringSpec {\n            coldStorageClass\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n        }\n        replicationSpecsV2 {\n          retentionDuration {\n            duration\n            unit\n          }\n          cluster {\n            id\n            name\n          }\n          targetMapping {\n            id\n            name\n          }\n          awsTarget {\n            accountId\n            accountName\n            region\n          }\n          azureTarget {\n            region\n          }\n        }\n        localRetentionLimit {\n          duration\n          unit\n        }\n        upgradeInfo {\n          eligibility {\n            isEligible\n            ineligibilityReason\n          }\n          latestUpgrade {\n            status\n            msg\n          }\n        }\n        ownerOrg {\n          id\n          name\n        }\n        isRetentionLockedSla\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscSla\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { slaDomains { nodes { id name ... on GlobalSlaReply { isDefault description snapshotSchedule { minute { basicSchedule { frequency retention retentionUnit } } hourly { basicSchedule { frequency retention retentionUnit } } daily { basicSchedule { frequency retention retentionUnit } } weekly { basicSchedule { frequency retention retentionUnit } dayOfWeek } monthly { basicSchedule { frequency retention retentionUnit } dayOfMonth } quarterly { basicSchedule { frequency retention retentionUnit } dayOfQuarter quarterStartMonth } yearly { basicSchedule { frequency retention retentionUnit } dayOfYear yearStartMonth } } archivalSpecs { threshold thresholdUnit storageSetting { id name groupType } archivalTieringSpec { coldStorageClass minAccessibleDurationInSeconds isInstantTieringEnabled } } backupWindows { durationInHours startTimeAttributes { hour minute } } firstFullBackupWindows { durationInHours startTimeAttributes { dayOfWeek { day } hour minute } } replicationSpecsV2 { replicationLocalRetentionDuration { duration unit } cascadingArchivalSpecs { archivalTieringSpec { coldStorageClass shouldTierExistingSnapshots minAccessibleDurationInSeconds isInstantTieringEnabled } archivalLocation { id name targetType ... on RubrikManagedAwsTarget { immutabilitySettings { lockDurationDays } } ... on RubrikManagedAzureTarget { immutabilitySettings { lockDurationDays } } ... on RubrikManagedNfsTarget { host } ... on CdmManagedAwsTarget { immutabilitySettings { lockDurationDays } } ... on CdmManagedAzureTarget { immutabilitySettings { lockDurationDays } } } frequency archivalThreshold { duration unit } } retentionDuration { duration unit } cluster { id name } targetMapping { id name } awsTarget { accountId accountName region } azureTarget { region } } localRetentionLimit { duration unit } objectSpecificConfigs { sapHanaConfig { incrementalFrequency { duration unit } differentialFrequency { duration unit } logRetention { duration unit } } awsRdsConfig { logRetention { duration } } vmwareVmConfig { logRetentionSeconds } } clusterToSyncStatusMap { clusterUuid slaSyncStatus } objectTypes upgradeInfo { eligibility { isEligible ineligibilityReason } latestUpgrade { status msg } } allOrgsHavingAccess { id name } ownerOrg { id name } isRetentionLockedSla } ... on ClusterSlaDomain { cdmId name cluster { name version } snapshotSchedule { minute { basicSchedule { frequency retention retentionUnit } } hourly { basicSchedule { frequency retention retentionUnit } } daily { basicSchedule { frequency retention retentionUnit } } weekly { basicSchedule { frequency retention retentionUnit } dayOfWeek } monthly { basicSchedule { frequency retention retentionUnit } dayOfMonth } quarterly { basicSchedule { frequency retention retentionUnit } dayOfQuarter quarterStartMonth } yearly { basicSchedule { frequency retention retentionUnit } dayOfYear yearStartMonth } } backupWindows { durationInHours startTimeAttributes { hour minute } } firstFullBackupWindows { durationInHours startTimeAttributes { dayOfWeek { day } hour minute } } archivalSpec { threshold thresholdUnit archivalLocationName archivalLocationId archivalTieringSpec { coldStorageClass minAccessibleDurationInSeconds isInstantTieringEnabled } } replicationSpecsV2 { retentionDuration { duration unit } cluster { id name } targetMapping { id name } awsTarget { accountId accountName region } azureTarget { region } } localRetentionLimit { duration unit } upgradeInfo { eligibility { isEligible ineligibilityReason } latestUpgrade { status msg } } ownerOrg { id name } isRetentionLockedSla } } pageInfo { endCursor hasNextPage } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/#retrieve-an-sla-by-name","title":"Retrieve an SLA by Name","text":"<p>Generally, the name of the SLA may be known, but not the ID. The <code>slaDomains</code> query allows filtering on several fields, including <code>NAME</code>.</p> GraphQLPowerShell SDKShell <pre><code>query {\n  slaDomains(filter: {field: NAME text: \"foo\"}) {\n    nodes {\n      id\n      name\n      ... on GlobalSlaReply {\n        isDefault\n        description\n        snapshotSchedule {\n          minute {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          hourly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          daily {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          weekly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfWeek\n          }\n          monthly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfMonth\n          }\n          quarterly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfQuarter\n            quarterStartMonth\n          }\n          yearly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfYear\n            yearStartMonth\n          }\n        }\n        archivalSpecs {\n          threshold\n          thresholdUnit\n          storageSetting {\n            id\n            name\n            groupType\n          }\n          archivalTieringSpec {\n            coldStorageClass\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n        }\n        backupWindows {\n          durationInHours\n          startTimeAttributes {\n            hour\n            minute\n          }\n        }\n        firstFullBackupWindows {\n          durationInHours\n          startTimeAttributes {\n            dayOfWeek {\n              day\n            }\n            hour\n            minute\n          }\n        }\n        replicationSpecsV2 {\n          replicationLocalRetentionDuration {\n            duration\n            unit\n          }\n          cascadingArchivalSpecs {\n            archivalTieringSpec {\n              coldStorageClass\n              shouldTierExistingSnapshots\n              minAccessibleDurationInSeconds\n              isInstantTieringEnabled\n            }\n            archivalLocation {\n              id\n              name\n              targetType\n              ... on RubrikManagedAwsTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedNfsTarget {\n                host\n              }\n              ... on CdmManagedAwsTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on CdmManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n            }\n            frequency\n            archivalThreshold {\n              duration\n              unit\n            }\n          }\n          retentionDuration {\n            duration\n            unit\n          }\n          cluster {\n            id\n            name\n          }\n          targetMapping {\n            id\n            name\n          }\n          awsTarget {\n            accountId\n            accountName\n            region\n          }\n          azureTarget {\n            region\n          }\n        }\n        localRetentionLimit {\n          duration\n          unit\n        }\n        objectSpecificConfigs {\n          sapHanaConfig {\n            incrementalFrequency {\n              duration\n              unit\n            }\n            differentialFrequency {\n              duration\n              unit\n            }\n            logRetention {\n              duration\n              unit\n            }\n          }\n          awsRdsConfig {\n            logRetention {\n              duration\n            }\n          }\n          vmwareVmConfig {\n            logRetentionSeconds\n          }\n        }\n        clusterToSyncStatusMap {\n          clusterUuid\n          slaSyncStatus\n        }\n        objectTypes\n        upgradeInfo {\n          eligibility {\n            isEligible\n            ineligibilityReason\n          }\n          latestUpgrade {\n            status\n            msg\n          }\n        }\n        allOrgsHavingAccess {\n          id\n          name\n        }\n        ownerOrg {\n          id\n          name\n        }\n        isRetentionLockedSla\n      }\n      ... on ClusterSlaDomain {\n        cdmId\n        name\n        cluster {\n          name\n          version\n        }\n        snapshotSchedule {\n          minute {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          hourly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          daily {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          weekly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfWeek\n          }\n          monthly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfMonth\n          }\n          quarterly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfQuarter\n            quarterStartMonth\n          }\n          yearly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfYear\n            yearStartMonth\n          }\n        }\n        backupWindows {\n          durationInHours\n          startTimeAttributes {\n            hour\n            minute\n          }\n        }\n        firstFullBackupWindows {\n          durationInHours\n          startTimeAttributes {\n            dayOfWeek {\n              day\n            }\n            hour\n            minute\n          }\n        }\n        archivalSpec {\n          threshold\n          thresholdUnit\n          archivalLocationName\n          archivalLocationId\n          archivalTieringSpec {\n            coldStorageClass\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n        }\n        replicationSpecsV2 {\n          retentionDuration {\n            duration\n            unit\n          }\n          cluster {\n            id\n            name\n          }\n          targetMapping {\n            id\n            name\n          }\n          awsTarget {\n            accountId\n            accountName\n            region\n          }\n          azureTarget {\n            region\n          }\n        }\n        localRetentionLimit {\n          duration\n          unit\n        }\n        upgradeInfo {\n          eligibility {\n            isEligible\n            ineligibilityReason\n          }\n          latestUpgrade {\n            status\n            msg\n          }\n        }\n        ownerOrg {\n          id\n          name\n        }\n        isRetentionLockedSla\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscSla -Name \"Foo\"\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { slaDomains(filter: {field: NAME text: \\\\\\\"foo\\\\\\\"}) { nodes { id name ... on GlobalSlaReply { isDefault description snapshotSchedule { minute { basicSchedule { frequency retention retentionUnit } } hourly { basicSchedule { frequency retention retentionUnit } } daily { basicSchedule { frequency retention retentionUnit } } weekly { basicSchedule { frequency retention retentionUnit } dayOfWeek } monthly { basicSchedule { frequency retention retentionUnit } dayOfMonth } quarterly { basicSchedule { frequency retention retentionUnit } dayOfQuarter quarterStartMonth } yearly { basicSchedule { frequency retention retentionUnit } dayOfYear yearStartMonth } } archivalSpecs { threshold thresholdUnit storageSetting { id name groupType } archivalTieringSpec { coldStorageClass minAccessibleDurationInSeconds isInstantTieringEnabled } } backupWindows { durationInHours startTimeAttributes { hour minute } } firstFullBackupWindows { durationInHours startTimeAttributes { dayOfWeek { day } hour minute } } replicationSpecsV2 { replicationLocalRetentionDuration { duration unit } cascadingArchivalSpecs { archivalTieringSpec { coldStorageClass shouldTierExistingSnapshots minAccessibleDurationInSeconds isInstantTieringEnabled } archivalLocation { id name targetType ... on RubrikManagedAwsTarget { immutabilitySettings { lockDurationDays } } ... on RubrikManagedAzureTarget { immutabilitySettings { lockDurationDays } } ... on RubrikManagedNfsTarget { host } ... on CdmManagedAwsTarget { immutabilitySettings { lockDurationDays } } ... on CdmManagedAzureTarget { immutabilitySettings { lockDurationDays } } } frequency archivalThreshold { duration unit } } retentionDuration { duration unit } cluster { id name } targetMapping { id name } awsTarget { accountId accountName region } azureTarget { region } } localRetentionLimit { duration unit } objectSpecificConfigs { sapHanaConfig { incrementalFrequency { duration unit } differentialFrequency { duration unit } logRetention { duration unit } } awsRdsConfig { logRetention { duration } } vmwareVmConfig { logRetentionSeconds } } clusterToSyncStatusMap { clusterUuid slaSyncStatus } objectTypes upgradeInfo { eligibility { isEligible ineligibilityReason } latestUpgrade { status msg } } allOrgsHavingAccess { id name } ownerOrg { id name } isRetentionLockedSla } ... on ClusterSlaDomain { cdmId name cluster { name version } snapshotSchedule { minute { basicSchedule { frequency retention retentionUnit } } hourly { basicSchedule { frequency retention retentionUnit } } daily { basicSchedule { frequency retention retentionUnit } } weekly { basicSchedule { frequency retention retentionUnit } dayOfWeek } monthly { basicSchedule { frequency retention retentionUnit } dayOfMonth } quarterly { basicSchedule { frequency retention retentionUnit } dayOfQuarter quarterStartMonth } yearly { basicSchedule { frequency retention retentionUnit } dayOfYear yearStartMonth } } backupWindows { durationInHours startTimeAttributes { hour minute } } firstFullBackupWindows { durationInHours startTimeAttributes { dayOfWeek { day } hour minute } } archivalSpec { threshold thresholdUnit archivalLocationName archivalLocationId archivalTieringSpec { coldStorageClass minAccessibleDurationInSeconds isInstantTieringEnabled } } replicationSpecsV2 { retentionDuration { duration unit } cluster { id name } targetMapping { id name } awsTarget { accountId accountName region } azureTarget { region } } localRetentionLimit { duration unit } upgradeInfo { eligibility { isEligible ineligibilityReason } latestUpgrade { status msg } } ownerOrg { id name } isRetentionLockedSla } } pageInfo { endCursor hasNextPage } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre> <p>Note</p> <p>Name filtering in <code>slaDomains</code> is partial matching. If you provide the name \"bronze\", it will also return any other SLA domain with that name (e.g. \"super-bronze\").</p>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/#retrieve-an-individual-sla","title":"Retrieve an Individual SLA","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  slaDomain(id: \"0CC22D1B-B761-4EF3-BC5B-82706D97FB05\") {\n    id\n    name\n    ... on GlobalSlaReply {\n      isDefault\n      description\n      snapshotSchedule {\n        minute {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n        }\n        hourly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n        }\n        daily {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n        }\n        weekly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n          dayOfWeek\n        }\n        monthly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n          dayOfMonth\n        }\n        quarterly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n          dayOfQuarter\n          quarterStartMonth\n        }\n        yearly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n          dayOfYear\n          yearStartMonth\n        }\n      }\n      archivalSpecs {\n        threshold\n        thresholdUnit\n        archivalLocationToClusterMapping {\n          cluster {\n            id\n            name\n          }\n          location {\n            id\n            name\n            targetType\n          }\n        }\n        storageSetting {\n          id\n          name\n          groupType\n        }\n        archivalTieringSpec {\n          coldStorageClass\n          minAccessibleDurationInSeconds\n          isInstantTieringEnabled\n        }\n        frequencies\n      }\n      archivalLocationsUpgradeInfo {\n        locationId\n        upgradeStatus\n        upgradeUnsupportedReason\n      }\n      backupWindows {\n        durationInHours\n        startTimeAttributes {\n          hour\n          minute\n        }\n      }\n      firstFullBackupWindows {\n        durationInHours\n        startTimeAttributes {\n          dayOfWeek {\n            day\n          }\n          hour\n          minute\n        }\n      }\n      replicationSpecsV2 {\n        replicationPairs {\n          sourceCluster {\n            id\n            name\n          }\n          targetCluster {\n            id\n            name\n            version\n            clusterInfo {\n              ... on LocalClusterInfo {\n                isIsolated: isAirGapped\n                isConnected\n              }\n              ... on CrossAccountClusterInfo {\n                originAccount\n                isConnected\n              }\n            }\n          }\n        }\n        replicationLocalRetentionDuration {\n          duration\n          unit\n        }\n        cascadingArchivalSpecs {\n          archivalTieringSpec {\n            coldStorageClass\n            shouldTierExistingSnapshots\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n          archivalLocationToClusterMapping {\n            cluster {\n              id\n              name\n              version\n              clusterInfo {\n                ... on LocalClusterInfo {\n                  isIsolated: isAirGapped\n                  isConnected\n                }\n                ... on CrossAccountClusterInfo {\n                  originAccount\n                  isConnected\n                }\n              }\n            }\n            location {\n              id\n              name\n              targetType\n              ... on RubrikManagedAwsTarget {\n                storageClass\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on CdmManagedAwsTarget {\n                storageClass\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on CdmManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedRcsTarget {\n                immutabilityPeriodDays\n                syncStatus\n                tier\n              }\n              ... on RubrikManagedS3CompatibleTarget {\n                immutabilitySetting {\n                  bucketLockDurationDays\n                }\n              }\n            }\n          }\n          archivalLocation {\n            id\n            name\n            targetType\n            ... on RubrikManagedAwsTarget {\n              storageClass\n              immutabilitySettings {\n                lockDurationDays\n              }\n            }\n            ... on RubrikManagedAzureTarget {\n              immutabilitySettings {\n                lockDurationDays\n              }\n            }\n            ... on CdmManagedAwsTarget {\n              storageClass\n              immutabilitySettings {\n                lockDurationDays\n              }\n            }\n            ... on CdmManagedAzureTarget {\n              immutabilitySettings {\n                lockDurationDays\n              }\n            }\n            ... on RubrikManagedRcsTarget {\n              immutabilityPeriodDays\n              syncStatus\n              tier\n            }\n            ... on RubrikManagedS3CompatibleTarget {\n              immutabilitySetting {\n                bucketLockDurationDays\n              }\n            }\n          }\n          frequency\n          archivalThreshold {\n            duration\n            unit\n          }\n        }\n        retentionDuration {\n          duration\n          unit\n        }\n        cluster {\n          id\n          name\n          version\n          clusterInfo {\n            ... on LocalClusterInfo {\n              isIsolated: isAirGapped\n              isConnected\n            }\n            ... on CrossAccountClusterInfo {\n              originAccount\n              isConnected\n            }\n          }\n        }\n        targetMapping {\n          id\n          name\n          targets {\n            id\n            name\n            cluster {\n              id\n              name\n            }\n          }\n        }\n        awsTarget {\n          accountId\n          accountName\n          region\n        }\n        azureTarget {\n          region\n        }\n      }\n      localRetentionLimit {\n        duration\n        unit\n      }\n      objectSpecificConfigs {\n        awsRdsConfig {\n          logRetention {\n            duration\n            unit\n          }\n        }\n        sapHanaConfig {\n          incrementalFrequency {\n            duration\n            unit\n          }\n          differentialFrequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n        }\n        db2Config {\n          incrementalFrequency {\n            duration\n            unit\n          }\n          differentialFrequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n        }\n        mongoConfig {\n          logFrequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n        }\n        mssqlConfig {\n          frequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n        }\n        oracleConfig {\n          frequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n          hostLogRetention {\n            duration\n            unit\n          }\n        }\n        vmwareVmConfig {\n          logRetentionSeconds\n        }\n        azureSqlDatabaseDbConfig {\n          logRetentionInDays\n        }\n        azureSqlManagedInstanceDbConfig {\n          logRetentionInDays\n        }\n      }\n      clusterToSyncStatusMap {\n        clusterUuid\n        slaSyncStatus\n      }\n      objectTypes\n      upgradeInfo {\n        eligibility {\n          isEligible\n          ineligibilityReason\n        }\n        latestUpgrade {\n          status\n          msg\n        }\n      }\n      allOrgsHavingAccess {\n        id\n        name\n      }\n      isRetentionLockedSla\n      retentionLockMode\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscSla -Id \"0CC22D1B-B761-4EF3-BC5B-82706D97FB05\"\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { slaDomain(id: \\\\\\\"0CC22D1B-B761-4EF3-BC5B-82706D97FB05\\\\\\\") { id name ... on GlobalSlaReply { isDefault description snapshotSchedule { minute { basicSchedule { frequency retention retentionUnit } } hourly { basicSchedule { frequency retention retentionUnit } } daily { basicSchedule { frequency retention retentionUnit } } weekly { basicSchedule { frequency retention retentionUnit } dayOfWeek } monthly { basicSchedule { frequency retention retentionUnit } dayOfMonth } quarterly { basicSchedule { frequency retention retentionUnit } dayOfQuarter quarterStartMonth } yearly { basicSchedule { frequency retention retentionUnit } dayOfYear yearStartMonth } } archivalSpecs { threshold thresholdUnit archivalLocationToClusterMapping { cluster { id name } location { id name targetType } } storageSetting { id name groupType } archivalTieringSpec { coldStorageClass minAccessibleDurationInSeconds isInstantTieringEnabled } frequencies } archivalLocationsUpgradeInfo { locationId upgradeStatus upgradeUnsupportedReason } backupWindows { durationInHours startTimeAttributes { hour minute } } firstFullBackupWindows { durationInHours startTimeAttributes { dayOfWeek { day } hour minute } } replicationSpecsV2 { replicationPairs { sourceCluster { id name } targetCluster { id name version clusterInfo { ... on LocalClusterInfo { isIsolated: isAirGapped isConnected } ... on CrossAccountClusterInfo { originAccount isConnected } } } } replicationLocalRetentionDuration { duration unit } cascadingArchivalSpecs { archivalTieringSpec { coldStorageClass shouldTierExistingSnapshots minAccessibleDurationInSeconds isInstantTieringEnabled } archivalLocationToClusterMapping { cluster { id name version clusterInfo { ... on LocalClusterInfo { isIsolated: isAirGapped isConnected } ... on CrossAccountClusterInfo { originAccount isConnected } } } location { id name targetType ... on RubrikManagedAwsTarget { storageClass immutabilitySettings { lockDurationDays } } ... on RubrikManagedAzureTarget { immutabilitySettings { lockDurationDays } } ... on CdmManagedAwsTarget { storageClass immutabilitySettings { lockDurationDays } } ... on CdmManagedAzureTarget { immutabilitySettings { lockDurationDays } } ... on RubrikManagedRcsTarget { immutabilityPeriodDays syncStatus tier } ... on RubrikManagedS3CompatibleTarget { immutabilitySetting { bucketLockDurationDays } } } } archivalLocation { id name targetType ... on RubrikManagedAwsTarget { storageClass immutabilitySettings { lockDurationDays } } ... on RubrikManagedAzureTarget { immutabilitySettings { lockDurationDays } } ... on CdmManagedAwsTarget { storageClass immutabilitySettings { lockDurationDays } } ... on CdmManagedAzureTarget { immutabilitySettings { lockDurationDays } } ... on RubrikManagedRcsTarget { immutabilityPeriodDays syncStatus tier } ... on RubrikManagedS3CompatibleTarget { immutabilitySetting { bucketLockDurationDays } } } frequency archivalThreshold { duration unit } } retentionDuration { duration unit } cluster { id name version clusterInfo { ... on LocalClusterInfo { isIsolated: isAirGapped isConnected } ... on CrossAccountClusterInfo { originAccount isConnected } } } targetMapping { id name targets { id name cluster { id name } } } awsTarget { accountId accountName region } azureTarget { region } } localRetentionLimit { duration unit } objectSpecificConfigs { awsRdsConfig { logRetention { duration unit } } sapHanaConfig { incrementalFrequency { duration unit } differentialFrequency { duration unit } logRetention { duration unit } } db2Config { incrementalFrequency { duration unit } differentialFrequency { duration unit } logRetention { duration unit } } mongoConfig { logFrequency { duration unit } logRetention { duration unit } } mssqlConfig { frequency { duration unit } logRetention { duration unit } } oracleConfig { frequency { duration unit } logRetention { duration unit } hostLogRetention { duration unit } } vmwareVmConfig { logRetentionSeconds } azureSqlDatabaseDbConfig { logRetentionInDays } azureSqlManagedInstanceDbConfig { logRetentionInDays } } clusterToSyncStatusMap { clusterUuid slaSyncStatus } objectTypes upgradeInfo { eligibility { isEligible ineligibilityReason } latestUpgrade { status msg } } allOrgsHavingAccess { id name } isRetentionLockedSla retentionLockMode } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/Assignment/","title":"Assignment","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/Assignment/#assigning-an-sla-to-a-workload","title":"Assigning an SLA to a workload","text":"GraphQLPowerShell SDKShell <pre><code>mutation assignSla {\n  assignSla(input: {\n    slaDomainAssignType: protectWithSlaId\n    slaOptionalId: \"CC4AFC96-A8DD-401F-A618-1C03742D21AA\"\n    objectIds: [\"DEF42837-C14D-45E2-8F11-F1BE9ED50F4E\"]\n    # shouldApplyToExistingSnapshots: true # optional. if you want existing snaps applied to new SLA assignment\n    # existingSnapshotRetention: RETAIN_SNAPSHOTS # optional. What do you want to do with the old snaps if you change to DONOTPROTECT?\n  }) {\n    success\n  }\n}\n</code></pre> <pre><code>$vm = Get-RscVmwareVm -Name \"foo\"\n$sla = Get-RscSla -Name \"Bar\"\n$vm | Protect-RscWorkload -Sla $sla\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation assignSla { assignSla(input: { slaDomainAssignType: protectWithSlaId slaOptionalId: \\\\\\\"CC4AFC96-A8DD-401F-A618-1C03742D21AA\\\\\\\" objectIds: [\\\\\\\"DEF42837-C14D-45E2-8F11-F1BE9ED50F4E\\\\\\\"] }) { success } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/Assignment/#assigning-an-sla-to-a-snapshot","title":"Assigning an SLA to a snapshot","text":"GraphQLPowerShell SDKShell <pre><code>mutation AssignSlaToSnapshot {\n  assignRetentionSLAToSnapshots(\n    snapshotFids: [\"b77f85ae-62d1-435b-9abf-2a1d97c6802f\"]\n    globalSlaAssignType: protectWithSlaId\n    globalSlaOptionalFid: \"5b6e44ca-9a0d-42e8-a6ba-952159c69bab\"\n  ) {\n    success\n  }\n}\n</code></pre> <pre><code>$query = New-RscMutation -GqlMutation assignRetentionSLAToSnapshots\n$query.Var.snapshotFids = @(\"124a67b6-be5a-5181-9447-fac686bc9949\")\n$query.Var.globalSlaAssignType = [RubrikSecurityCloud.Types.SlaAssignTypeEnum]::PROTECT_WITH_SLA_ID\n$query.Var.globalSlaOptionalFid = \"5b6e44ca-9a0d-42e8-a6ba-952159c69bab\"\n$query.invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation AssignSlaToSnapshot { assignRetentionSLAToSnapshots( snapshotFids: [\\\\\\\"b77f85ae-62d1-435b-9abf-2a1d97c6802f\\\\\\\"] globalSlaAssignType: protectWithSlaId globalSlaOptionalFid: \\\\\\\"5b6e44ca-9a0d-42e8-a6ba-952159c69bab\\\\\\\" ) { success } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/Creating-And-Modifying/","title":"Creating And Modifying","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/Creating-And-Modifying/#creating-an-sla-domain","title":"Creating an SLA Domain","text":"<p>SLA domains can range from simple to very complex policy definitions.</p> GraphQLPowerShell SDKShell <pre><code>mutation createSla {\n  createGlobalSla(input: {\n    name: \"foo\"\n    objectTypes: [VSPHERE_OBJECT_TYPE MSSQL_OBJECT_TYPE]\n    snapshotSchedule: {\n      daily: {\n        basicSchedule: {\n          frequency: 1\n          retention: 7\n          retentionUnit: DAYS\n        }\n      }\n    }\n  }) {\n    name\n    id\n  }\n}\n</code></pre> <pre><code>$dailySchedule = New-RscSlaSnapshotSchedule -Type daily -Frequency 1 -Retention 2 -RetentionUnit DAYS\nNew-RscSla -name \"foo\" -DailySchedule $dailySchedule -ObjectType VSPHERE_OBJECT_TYPE,MSSQL_OBJECT_TYPE\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation createSla { createGlobalSla(input: { name: \\\\\\\"foo\\\\\\\" objectTypes: [VSPHERE_OBJECT_TYPE MSSQL_OBJECT_TYPE] snapshotSchedule: { daily: { basicSchedule: { frequency: 1 retention: 7 retentionUnit: DAYS } } } }) { name id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/Creating-And-Modifying/#modifying-an-sla-domain","title":"Modifying an SLA Domain","text":"<p>Modification of an SLA requires the entire SLA object to be passed in to the mutation. If every property is not passed in, the SLA update will either fail, or will be updated with only the portions of the object that were passed in to the update arguments.</p> GraphQLPowerShell SDKShell <pre><code>mutation createSla {\n  updateGlobalSla(input: {\n    id: \"2794261b-0e3b-4eab-8a32-f1ce4579e8c7\"\n    name: \"foo\"\n    objectTypes: [VSPHERE_OBJECT_TYPE MSSQL_OBJECT_TYPE]\n    description: \"This is my foo SLA Domain\"\n    snapshotSchedule: {\n      daily: {\n        basicSchedule: {\n          frequency: 1\n          retention: 7\n          retentionUnit: DAYS\n        }\n      }\n    }\n  }) {\n    name\n    id\n  }\n}\n</code></pre> <pre><code>$sla = Get-RscSla \"foo\"\n$sla | Set-RscSla -Description \"This is my foo SLA\"\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation createSla { updateGlobalSla(input: { id: \\\\\\\"2794261b-0e3b-4eab-8a32-f1ce4579e8c7\\\\\\\" name: \\\\\\\"foo\\\\\\\" objectTypes: [VSPHERE_OBJECT_TYPE MSSQL_OBJECT_TYPE] description: \\\\\\\"This is my foo SLA Domain\\\\\\\" snapshotSchedule: { daily: { basicSchedule: { frequency: 1 retention: 7 retentionUnit: DAYS } } } }) { name id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Snapshots/","title":"Index","text":"<p>In Rubrik, snapshots are a point-in-time copy of data, coupled with metadata. Snapshots can be managed by an SLA Domain, ahearing to the policy's archival, replication, and retention rules. Snapshot's can also be unmanaged, which means they are not tied to a specific policy, and retained forever.</p>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Snapshots/#retrieving-snapshots-for-a-workload","title":"Retrieving Snapshots for a Workload","text":"<p>When retrieving snapshots for a workload, use that workload's RSC <code>id</code>. If using <code>snappableConnection</code> to list objects, use the <code>fid</code> field from the query. In the case of MSSQL databases, you must use the <code>dagId</code> from the MSSQL database object.</p> GraphQLPowerShell SDKShell <pre><code>query {\n  snapshotOfASnappableConnection(\n    workloadId: \"123e4567-e89b-12d3-a456-426614174000\"\n  ) {\n    nodes {\n      id\n      date\n      isIndexed\n      isOnDemandSnapshot\n      isQuarantined\n      isAnomaly\n      isExpired\n      expirationDate\n      ...on CdmSnapshot {\n        isRetentionLocked\n        legalHoldInfo {\n          shouldHoldInPlace\n        }\n        snapshotRetentionInfo {\n          localInfo {\n            isSnapshotPresent\n            isExpirationDateCalculated\n            expirationTime\n          }\n          archivalInfos {\n            isSnapshotPresent\n            isExpirationDateCalculated\n            expirationTime\n          }\n          replicationInfos {\n            isSnapshotPresent\n            isExpirationDateCalculated\n            expirationTime\n          }\n        }\n        fileCount\n        consistencyLevel\n      }\n      ...on PolarisSnapshot {\n        snapshotRetentionInfo {\n          localInfo {\n            isSnapshotPresent\n            isExpirationDateCalculated\n            expirationTime\n          }\n          archivalInfos {\n            isSnapshotPresent\n            isExpirationDateCalculated\n            expirationTime\n          }\n          replicationInfos {\n            isSnapshotPresent\n            isExpirationDateCalculated\n            expirationTime\n          }\n        }\n        polarisConsistencyLevel: consistencyLevel\n      }\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscVmwareVm -Name \"example\" | Get-RscSnapshot\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { snapshotOfASnappableConnection( workloadId: \\\\\\\"123e4567-e89b-12d3-a456-426614174000\\\\\\\" ) { nodes { id date isIndexed isOnDemandSnapshot isQuarantined isAnomaly isExpired expirationDate ...on CdmSnapshot { isRetentionLocked legalHoldInfo { shouldHoldInPlace } snapshotRetentionInfo { localInfo { isSnapshotPresent isExpirationDateCalculated expirationTime } archivalInfos { isSnapshotPresent isExpirationDateCalculated expirationTime } replicationInfos { isSnapshotPresent isExpirationDateCalculated expirationTime } } fileCount consistencyLevel } ...on PolarisSnapshot { snapshotRetentionInfo { localInfo { isSnapshotPresent isExpirationDateCalculated expirationTime } archivalInfos { isSnapshotPresent isExpirationDateCalculated expirationTime } replicationInfos { isSnapshotPresent isExpirationDateCalculated expirationTime } } polarisConsistencyLevel: consistencyLevel } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Snapshots/#assigning-an-sla-to-a-snapshot","title":"Assigning an SLA to a Snapshot","text":"GraphQLPowerShell SDKShell <pre><code>mutation {\n  assignRetentionSLAToSnapshots(\n    snapshotFids: [\"b77f85ae-62d1-435b-9abf-2a1d97c6802f\"]\n    globalSlaAssignType: protectWithSlaId\n    globalSlaOptionalFid: \"5b6e44ca-9a0d-42e8-a6ba-952159c69bab\"\n  ) {\n    success\n  }\n}\n</code></pre> <pre><code>$query = New-RscMutation -GqlMutation assignRetentionSLAToSnapshots\n$query.Var.globalSlaAssignType = [RubrikSecurityCloud.Types.SlaAssignTypeEnum]::PROTECT_WITH_SLA_ID\n$query.Var.snapshotFids = @(\"124a67b6-be5a-5181-9447-fac686bc9949\")\n$query.Var.globalSlaOptionalFid = \"123e4567-e89b-12d3-a456-426614174000\"\n$query.invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { assignRetentionSLAToSnapshots( snapshotFids: [\\\\\\\"b77f85ae-62d1-435b-9abf-2a1d97c6802f\\\\\\\"] globalSlaAssignType: protectWithSlaId globalSlaOptionalFid: \\\\\\\"5b6e44ca-9a0d-42e8-a6ba-952159c69bab\\\\\\\" ) { success } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Snapshots/#deleting-unmanaged-snapshots","title":"Deleting Unmanaged Snapshots","text":"<p>Unmanaged snapshots have no policy and will be retained forever until deleted. A snapshot is an unmanaged or \"forever\" if <code>isExpirationDateCalculated</code> is true and <code>expirationTime</code> is null.</p> GraphQLPowerShell SDKShell <pre><code>mutation {\n  deleteUnmanagedSnapshots(input: {\n    snapshotIds: [\"124a67b6-be5a-5181-9447-fac686bc9949\"]\n  }) {\n    success\n  }\n}\n</code></pre> <pre><code>$query = New-RscMutation -GqlMutation deleteUnmanagedSnapshots\n$query.var.input = Get-RscType -Name DeleteUnmanagedSnapshotsInput\n$query.var.input.SnapshotIds = @(\"124a67b6-be5a-5181-9447-fac686bc9949\")\n$query.Invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { deleteUnmanagedSnapshots(input: { snapshotIds: [\\\\\\\"124a67b6-be5a-5181-9447-fac686bc9949\\\\\\\"] }) { success } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Observability/","title":"Index","text":"<p>Observability increases operational effiency and reduces risk through faster mitigation of issues.</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/#events","title":"Events","text":"<p>Events are state changes within Rubrik. Events can be as simple as a successful backup, or as serious as a ransomware anomaly detected within data protected by Rubrik. Events can be obtained through an API query, or streamed to an external system via webhooks.</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/#retrieving-events-via-api-query","title":"Retrieving Events via API Query","text":"GraphQLPowerShell SDKShell <pre><code>Get-RscEventSeries\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/ANOMALY/","title":"ANOMALY","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/ANOMALY/#anomaly","title":"anomaly","text":"<p>EncryptionNotRunAnomalyDetectedInfo</p> <pre><code>Detected anomalous filesystem activity with ${confidence} confidence (File Change: ${filesCreatedCount} Added, ${filesModifiedCount} Modified, ${filesRemovedCount} Removed)\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>EncryptionNotRunAnomalyDetectedWarning</p> <pre><code>Detected anomalous filesystem activity with ${confidence} confidence (File Change: ${filesCreatedCount} Added, ${filesModifiedCount} Modified, ${filesRemovedCount} Removed)\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p> <p>RansomwareStrainDetected</p> <pre><code>Detected potential ransomware strain \\\"${strainName}\\\" with ${confidence} and ${encyptionLevel} levels of encryption (File Change: ${filesCreatedCount} Added, ${filesModifiedCount} Modified, ${filesRemovedCount} Removed)\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskSuccessNo</p> <p>RansomwareStrainDetectedWarning</p> <pre><code>Detected potential ransomware strain \\\"${strainName}\\\" with ${confidence} (File Change: ${filesCreatedCount} Added, ${filesModifiedCount} Modified, ${filesRemovedCount} Removed)\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>SnappableElevatedEncryption</p> <pre><code>Detected anomalous filesystem activity with ${confidence} confidence and high levels of encryption (File Change: ${filesCreatedCount} Added, ${filesModifiedCount} Modified, ${filesRemovedCount} Removed)\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalSuccessNo</p> <p>SnappableElevatedEncryptionWithSuspiciousFilesInfo</p> <pre><code>Detected anomalous filesystem activity with ${confidence} confidence and high levels of encryption (File Change: ${filesCreatedCount} Added, ${filesModifiedCount} Modified, ${filesRemovedCount} Removed, ${filesSuspiciousCount} Suspicious)\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalSuccessNo</p> <p>SnappableHighBasicEncryption</p> <pre><code>Detected significant indication of encrypted files.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>SnappableLowBasicEncryption</p> <pre><code>Detected little to no indication of encrypted files.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>SnappableLowEncryptionInfo</p> <pre><code>Detected anomalous filesystem activity with ${confidence} confidence and low levels of encryption (File Change: ${filesCreatedCount} Added, ${filesModifiedCount} Modified, ${filesRemovedCount} Removed)\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>SnappableLowEncryptionWarning</p> <pre><code>Detected anomalous filesystem activity with ${confidence} confidence and low levels of encryption (File Change: ${filesCreatedCount} Added, ${filesModifiedCount} Modified, ${filesRemovedCount} Removed)\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p> <p>VMHostAnomalyDetected</p> <pre><code>Detected anomalous activity on ${snappableName} (${vmCount} Virtual Machines affected)\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/ANOMALY/#testevent","title":"testevent","text":"<p>Test</p> <pre><code>Everyone loves ${hobby}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/AccessManagement/","title":"AccessManagement","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/AccessManagement/#authz","title":"authz","text":"<p>AccountOwnershipAssigned</p> <pre><code>${userEmail} assigned account ownership to ${targetUser}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AccountOwnershipRevoked</p> <pre><code>${userEmail} revoked account ownership from ${targetUser}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AdminRequestedPasswordChange</p> <pre><code>Admin ${userName} requested password reset for users.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AllRolesDeassignedFromUser</p> <pre><code>${userName} removed all role assignments from the user ${targetUser}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AllRolesDeassignedFromUserGroup</p> <pre><code>${userEmail} revoked all roles from user group ${groupName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AuthorizedUserGroupsToOrg</p> <pre><code>${userEmail} authorized user groups in organization ${orgName}: ${userGroupNames}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>HideUser</p> <pre><code>${userName} updated the hidden status to ${hiddenStatus} for ${targetUserName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>OrgCreated</p> <pre><code>${userEmail} created organization ${orgName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>OrgCreationFailed</p> <pre><code>${userEmail} failed to create organization ${orgName}, Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>OrgDeleted</p> <pre><code>${userEmail} deleted organization ${orgName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>OrgDeletionFailed</p> <pre><code>${userEmail} failed to delete organization ${orgName}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>OrgUpdated</p> <pre><code>${userEmail} modified organization ${orgName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>OrgUpdateFailed</p> <pre><code>${userEmail} modified organization ${orgName}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>PasswordComplexityPolicyUpdated</p> <pre><code>${userName} updated the password policy (${changedPolicies}) for the ${orgName} organization.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>PasswordComplexityPolicyUpdateFailed</p> <pre><code>${userName} failed to update the password policy for the ${orgName} organization.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>RoleAssignedToUser</p> <pre><code>${userEmail} changed role of ${targetUser} to ${role}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RoleAssignedToUserGroup</p> <pre><code>${userEmail} changed role of user group ${groupName} to ${role}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RoleAssignmentToUserFailed</p> <pre><code>${userEmail} failed to change role of ${targetUser} to ${role}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RoleAssignmentToUserGroupFailed</p> <pre><code>${userEmail} failed to change role of user group ${groupName} to ${role}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>RoleCreated</p> <pre><code>${userEmail} created role ${role}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RoleCreationFailed</p> <pre><code>${userEmail} failed to create role ${role}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>RoleDeassignedFromUser</p> <pre><code>${userEmail} revoked role ${role} from user ${targetUser}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RoleDeassignedFromUserGroup</p> <pre><code>${userEmail} revoked role ${role} from user group ${groupName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RoleDeleted</p> <pre><code>${userEmail} deleted role ${role}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RoleDeletionFailed</p> <pre><code>${userEmail} failed to delete role ${role}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>RoleUpdated</p> <pre><code>${userEmail} modified role ${origRole}${role}. (Role ID: ${roleID})\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RoleUpdateFailed</p> <pre><code>${userEmail} failed to modify role ${role}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>ServiceAccountCreated</p> <pre><code>${actorSubjectName} created service account ${targetSubjectName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ServiceAccountCreationFailed</p> <pre><code>${actorSubjectName} failed to create service account ${targetSubjectName}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>ServiceAccountDeleted</p> <pre><code>${actorSubjectName} deleted service account ${targetSubjectName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ServiceAccountDeletionFailed</p> <pre><code>${actorSubjectName} failed to delete service account ${targetSubjectName}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>ServiceAccountDeletionPreparationFailed</p> <pre><code>${actorSubjectName} tried to start a delete request on ${count} service accounts. The preparation for the deletion failed. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>ServiceAccountSecretRotated</p> <pre><code>${actorSubjectName} rotated the secret of the service account ${targetSubjectName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ServiceAccountSecretRotationFailed</p> <pre><code>${actorSubjectName} failed to rotate the secret of the service account ${targetSubjectName}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>SSOUserCreated</p> <pre><code>${userName} created SSO user, ${targetUserName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SSOUserCreationFailed</p> <pre><code>${userName} failed to create SSO user, ${targetUserName}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>UpdatedUserGroupsInOrg</p> <pre><code>${userEmail} updated user groups in organization ${orgName}: ${userGroupNames}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UserChangedOtherUserPassword</p> <pre><code>${userName} changed the password for user ${targetUser}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UserChangeOtherUserPasswordFailed</p> <pre><code>${userName} failed to change the password for user ${targetUser}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>UserCreated</p> <pre><code>User ${userEmail} was created.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UserCreationFailed</p> <pre><code>User ${userEmail} failed to create.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>UserDeleted</p> <pre><code>${actorUserEmail} deleted user ${targetUserEmail}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UserDeletionFailed</p> <pre><code>${actorUserEmail} failed to delete user ${targetUserEmail}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>UserDeletionPreparationFailed</p> <pre><code>${actorUserEmail} tried to start a delete request on ${count} users. The preparation for the deletion failed. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>UserGroupDeleted</p> <pre><code>${actorUserName} deleted role group mapping ${groupName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UserGroupDeletionFailed</p> <pre><code>${actorUserName} was unable to delete role group mapping ${groupName}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>UserInvited</p> <pre><code>${actorUserEmail} invited user ${targetUserEmail}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/AccessManagement/#federated_access","title":"federated_access","text":"<p>SetCDMInventoryDisabledSucceeded</p> <pre><code>${actorUserEmail} disabled the Display Rubrik CDM inventory in Polaris successfully.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SetCDMInventoryEnabledFailed</p> <pre><code>${actorUserEmail} failed to change the Display Rubrik CDM inventory in Polaris. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>SetCDMInventoryEnabledSucceeded</p> <pre><code>${actorUserEmail} enabled the Display Rubrik CDM inventory in Polaris successfully.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SetFederatedAccessDisabledSucceeded</p> <pre><code>${actorUserEmail} disabled the Rubrik CDM federated access successfully.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SetFederatedAccessEnabledFailed</p> <pre><code>${actorUserEmail} failed to change the Rubrik CDM federated access. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>SetFederatedAccessEnabledSucceeded</p> <pre><code>${actorUserEmail} enabled the Rubrik CDM federated access successfully.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/AccessManagement/#mfa","title":"mfa","text":"<p>MaxPasskeysChanged</p> <pre><code>${username} has changed the maximum allowed passkeys from ${prevValue} to ${newValue}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>MfaRememberDisable</p> <pre><code>${username} disabled Rubrik Two-Step Verification to remember device.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>MfaRememberHoursUpdate</p> <pre><code>${username} updated Rubrik Two-Step Verification to remember device from ${initialHours} to ${hours} hours.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>PasskeyAdded</p> <pre><code>${username} has added ${type} passkey ${passkeyName} for MFA.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>PasskeyDeleted</p> <pre><code>${username} has deleted ${type} passkey ${passkeyName} for MFA.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>PasskeysAllowed</p> <pre><code>${username} has enabled passkeys for the account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>PasskeysDisallowed</p> <pre><code>${username} has disabled passkeys for the account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>PasskeyTypeAllowed</p> <pre><code>${username} has enabled ${passkeyType} passkeys for the account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>PasskeyTypeDisallowed</p> <pre><code>${username} has disabled ${passkeyType} passkeys for the account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TotpGlobalEnforce</p> <pre><code>${username} set Rubrik Two-Step Verification enforced globally.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TotpGlobalUnenforce</p> <pre><code>${username} set Rubrik Two-Step Verification not enforced globally.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessYes</p> <p>TotpLdapEnforce</p> <pre><code>${username} set Rubrik Two-Step Verification enforced on LDAP domain ${ldapName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TotpLdapUnenforce</p> <pre><code>${username} set Rubrik Two-Step Verification not enforced on LDAP domain ${ldapName}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessYes</p> <p>TotpReconfigure</p> <pre><code>${username} reconfigured Rubrik Two-Step Verification.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TotpReminderDisable</p> <pre><code>${username} disabled Rubrik Two-Step Verification reminder.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessYes</p> <p>TotpReminderHoursUpdate</p> <pre><code>${username} updated the Rubrik Two-Step Verification reminder frequency from every ${initialHours} hours to once every ${hours} hours.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TotpReset</p> <pre><code>${username} disabled Rubrik Two-Step Verification for  ${targetUsername}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessYes</p> <p>TotpSetup</p> <pre><code>${username} enabled Rubrik Two-Step Verification.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TotpUserLevelEnforce</p> <pre><code>${username} set Rubrik Two-Step Verification enforced for ${targetUsername}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TotpUserLevelUnenforce</p> <pre><code>${username} set Rubrik Two-Step Verification not enforced for ${targetUsername}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/AccessManagement/#moat","title":"moat","text":"<p>FailedAPICallDueToIPViolation</p> <pre><code>${api_name} failed to execute as it was accessed from an  unauthorized IP address ${ip_address} for the ${user_domain} ${username}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>SetWhitelistDisabledSucceeded</p> <pre><code>${actorUserEmail} disabled the IP whitelist successfully.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SetWhitelistEnabledFailed</p> <pre><code>${actorUserEmail} failed to change the IP whitelist enforcement. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>SetWhitelistEnabledSucceeded</p> <pre><code>${actorUserEmail} enabled the IP whitelist successfully.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateWhitelistFailed</p> <pre><code>${actorUserEmail} failed to update IP whitelist. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>UpdateWhitelistSucceeded</p> <pre><code>${actorUserEmail} updated IP whitelist successfully.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/AccessManagement/#userlockout","title":"userlockout","text":"<p>AutoUnlocked</p> <pre><code>User account for ${username} has been auto-unlocked.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>LockedByAdmin</p> <pre><code>${username} has been locked by administrator ${admin}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>LockedByBruteForce</p> <pre><code>The user account for ${username} has been locked due to multiple  failed login attempts.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessYes</p> <p>LockedDueToLeakedPassword</p> <pre><code>User ${email}'s account was locked because the account is at risk of being compromised.  The account credentials were found to have been compromised in another vendors security breach.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessYes</p> <p>LockoutConfigChanged</p> <pre><code>${admin} updated the account lockout configuration, (${changedConfigs}), for the ${orgName} organization.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UnlockedByAdmin</p> <pre><code>${username} has been unlocked by administrator ${admin}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UnlockedBySupport</p> <pre><code>${username} has been unlocked by Rubrik Support.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Archive/","title":"Archive","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Archive/#awsnative","title":"awsnative","text":"<p>AwsNativeArchiveSnapshotJobSucceeded</p> <pre><code>Successfully archived the snapshot taken at ${snapshotTimeDisplay} of the ${snappableDisplay} to the ${targetBucketName} bucket of ${targetLocation} location.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AwsNativeArchiveSnapshotTaskFailed</p> <pre><code>Failed to upload the snapshot to the ${targetBucketName} bucket of ${targetLocation} location. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AwsNativeArchiveSnapshotTaskStarted</p> <pre><code>Uploading the snapshot to the ${targetBucketName} bucket of ${targetLocation} location.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Archive/#azurenative","title":"azurenative","text":"<p>AzureNativeArchiveSnapshotJobSucceeded</p> <pre><code>Successfully archived the snapshot taken at ${snapshotTimeDisplay} of the ${snappableDisplay} to the ${targetContainerName} container in ${storageAccountName} storage account of ${targetLocation} location.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AzureNativeArchiveSnapshotTaskFailed</p> <pre><code>Failed to upload the snapshot to the ${targetContainerName} container in ${storageAccountName} storage account of ${targetLocation} location. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativeArchiveSnapshotTaskStarted</p> <pre><code>Uploading the snapshot to the ${targetContainerName} container in ${storageAccountName} storage account of ${targetLocation} location.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Archive/#cloudnative","title":"cloudnative","text":"<p>CloudNativeArchiveSnapshotJobCanceled</p> <pre><code>Canceled archival of snapshot of the ${snappableDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>CloudNativeArchiveSnapshotJobCanceling</p> <pre><code>Canceling archival of snapshot of the ${snappableDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>CloudNativeArchiveSnapshotJobFailed</p> <pre><code>Failed to archive snapshot of the ${snappableDisplay}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>CloudNativeArchiveSnapshotJobStarted</p> <pre><code>Started archival of ${snappableDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeArchiveSnapshotJobSucceededNoSnapshotFound</p> <pre><code>No snapshot found for ${snappableDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CloudNativeArchiveSnapshotPrepareTaskFailed</p> <pre><code>Failed to archive snapshot of the ${snappableDisplay}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>CloudNativeArchiveSnapshotPrepareTaskStarted</p> <pre><code>Starting archival of snapshot for the ${snappableDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CloudNativeArchiveSnapshotPrepareTaskSucceeded</p> <pre><code>Started archival of the snapshot taken at ${snapshotTimeDisplay} of the ${snappableDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeArchiveSnapshotTaskSucceeded</p> <pre><code>Uploaded the snapshot to archival location.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeArchiveSnapshotWaitForIndexSnapshotTaskFailed</p> <pre><code>Failed to index the snapshot.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>CloudNativeArchiveSnapshotWaitForIndexSnapshotTaskStarted</p> <pre><code>Waiting for snapshot to be indexed.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CloudNativeArchiveSnapshotWaitForIndexSnapshotTaskSucceeded</p> <pre><code>Snapshot has successfully been indexed.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeImmediatelyScheduleMaintainedJobTaskFailed</p> <pre><code>Failed to trigger ${ImmediatelyScheduleMaintainedJobDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>CloudNativeImmediatelyScheduleMaintainedJobTaskStarted</p> <pre><code>Waiting for ${ImmediatelyScheduleMaintainedJobDisplay} to be triggered.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CloudNativeImmediatelyScheduleMaintainedJobTaskSucceeded</p> <pre><code>Successfully triggered ${ImmediatelyScheduleMaintainedJobDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeImmediatelyScheduleMaintainedJobTaskSucceededWithError</p> <pre><code>Triggered ${ImmediatelyScheduleMaintainedJobDisplay} with error ${ignoredError}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>CloudNativeLaunchEmptyDiskTaskFailed</p> <pre><code>Failed to launch scratch ${diskTypeDisplay}(s).\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>CloudNativeLaunchEmptyDiskTaskStarted</p> <pre><code>Temporarily launching scratch ${diskTypeDisplay}(s) in region ${region}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CloudNativeLaunchEmptyDiskTaskSucceeded</p> <pre><code>Launched scratch ${diskTypeDisplay}(s) in region ${region}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeOnDemandJobTaskFailed</p> <pre><code>Failed to perform ${onDemandJobDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>CloudNativeOnDemandJobTaskStarted</p> <pre><code>Waiting for ${onDemandJobDisplay} to complete.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CloudNativeOnDemandJobTaskSucceeded</p> <pre><code>Successfully completed ${onDemandJobDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeOnDemandJobTaskSucceededWithError</p> <pre><code>Completed ${onDemandJobDisplay} with error ${ignoredError}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>CloudNativeOnDemandJobTaskWithoutWaitSucceeded</p> <pre><code>Successfully triggered ${onDemandJobDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeOnDemandJobTaskWithoutWaitSucceededWithError</p> <pre><code>Failed to trigger ${onDemandJobDisplay} with error ${ignoredError}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Archive/#rcv","title":"rcv","text":"<p>RCVDataDeletionSuccess</p> <pre><code>Pursuant to Rubrik policy, data associated with the deleted RCV storage  location '${name}' has been successfully deleted.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Audit/","title":"Audit","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Audit/#accountmanagement","title":"accountmanagement","text":"<p>BrandLogoDeleted</p> <pre><code>Brand logo was deleted.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>BrandLogoDeleteFailed</p> <pre><code>Unable to delete brand logo. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>BrandLogoUpdated</p> <pre><code>Brand logo or logo URL was updated.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>BrandLogoUpdateFailed</p> <pre><code>Unable to update brand logo or logo URL. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DigestListEmailDeleted</p> <pre><code>${userEmail} deleted custom event digest, ${digestListName}, which sent emails to ${emailAddressList}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DigestListEmailUpdated</p> <pre><code>${userEmail} saved custom event digest, ${digestListName}, which sends emails to ${emailAddressList}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>EulaAccepted</p> <pre><code>${userEmail} accepted the EULA.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>PactsafeEulaAccepted</p> <pre><code>${userEmail} accepted the Rubrik End User Licence Agreement.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>PactsafeEulaSnoozed</p> <pre><code>${userEmail} snoozed the Rubrik End User Licence Agreement for ${numDays} days.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpgradeToRSCFailure</p> <pre><code>${userEmail} has failed to upgrade the account to RSC at ${upgradeTime}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpgradeToRSCSuccess</p> <pre><code>${userEmail} has upgraded the account to RSC at ${upgradeTime}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Audit/#cdm_rbac_migration","title":"cdm_rbac_migration","text":"<p>DownloadCdmRbacSummaryStarted</p> <pre><code>${username} started a job to download the CDM RBAC summary from ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DownloadCdmRbacSummaryStartFailed</p> <pre><code>${username} failed to start a job to download the CDM RBAC summary from ${clusterName}.  Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>FetchCDMRbacConfigStarted</p> <pre><code>${username} started a job to fetch the CDM RBAC configurations from ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>FetchCDMRbacConfigStartFailed</p> <pre><code>${username} failed to start a job to fetch the CDM RBAC configurations from ${clusterName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>MigrateCDMRbacConfigStarted</p> <pre><code>${username} started a job to migrate the CDM RBAC configurations from ${clusterName} to RSC.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>MigrateCDMRbacConfigStartFailed</p> <pre><code>${username} failed to start a job to migrate the CDM RBAC configurations from ${clusterName} to  RSC. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Audit/#chatbot","title":"chatbot","text":"<p>CreatedChatbot</p> <pre><code>${userEmail} created chatbot ${chatbotName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeletedChatbot</p> <pre><code>${userEmail} deleted the chatbot, ${chatbotName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdatedChatbotNoNameChange</p> <pre><code>${userEmail} updated chatbot. Name unchaged: ${chatbotName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdatedChatbotWithNameChange</p> <pre><code>${userEmail} updated chatbot. Renamed from ${oldChatbotName} to ${newChatbotName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Audit/#cloudaccounts","title":"cloudaccounts","text":"<p>CloudaccountsPrivilegeDeEscalationSuccessful</p> <pre><code>${userEmail} dropped a privilege escalation session for Tenant ${tenantDomain} with ID ${tenantNativeID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CloudaccountsPrivilegeEscalationSuccessful</p> <pre><code>${userEmail} initiated a privilege escalation session for Tenant ${tenantDomain} with ID ${tenantNativeID}, using OAuth.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Audit/#fedramp","title":"fedramp","text":"<p>FedrampBoundaryExited</p> <pre><code>${userEmail} acknowledged that they are exiting the FedRAMP boundary and navigated to ${link}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Audit/#o365","title":"o365","text":"<p>O365RestoreFailedItemsViewed</p> <pre><code>${userID} viewed the restore failed items information of ${snappableType}  ${snappableName} corresponding to restore instance ID ${instanceID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SwitchWorkloadToOnboardingMode</p> <pre><code>${userID} moved the ${workloadType} to onboarding mode.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Audit/#rkcli","title":"rkcli","text":"<p>RkcliCommandExec</p> <pre><code>Admin executed '${command}' on the ${node} node from ${ip}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Audit/#sap_hana_system","title":"sap_hana_system","text":"<p>ConfigureRestoreSapHana</p> <pre><code>${username} configured restore on the SAP HANA ${systemName} system. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RestoreSapHanaStorageSnapshotFailure</p> <pre><code>${username} unable to trigger a disk restore using storage snapshot with ${snapshotId} ID of SAP HANA ${systemName} system. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>RestoreSapHanaStorageSnapshotStarted</p> <pre><code>${username} triggered a disk restore using storage snapshot with ${snapshotId} ID of SAP HANA ${systemName} system.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UnconfigureRestoreSapHana</p> <pre><code>${username} reset the restore configuration on the SAP HANA ${systemName} system. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Audit/#sessionmanagement","title":"sessionmanagement","text":"<p>CreateOrgSwitchSessionFailure</p> <pre><code>${userEmail} failed to switch to organization ${orgName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>CreateOrgSwitchSessionSuccess</p> <pre><code>${userEmail} successfully switched to organization ${orgName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Audit/#snapshot","title":"snapshot","text":"<p>DeleteSnapshotsOfObject</p> <pre><code>${username} deleted snapshots of snappable type '${snappableType}' with name '${objName}'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteSnapshotsOfObjectFailed</p> <pre><code>${username} failed to delete snapshots of snappable type '${snappableType}' with name '${objName}'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Audit/#support_case","title":"support_case","text":"<p>SupportCaseCreated</p> <pre><code>${userEmail} created a support case with id: ${caseId}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SupportCaseModified</p> <pre><code>${userEmail} modified the support case with id: ${caseId}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Audit/#tpr","title":"tpr","text":"<p>TprExecuteComplete</p> <pre><code>${username} completed executing Quorum Authorization request ${requestID} to ${description}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TprExecuteFail</p> <pre><code>${username} was unable to execute Quorum Authorization request ${requestID} to ${description}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>TprPolicyDeleteFailed</p> <pre><code>${username} was unable to delete the Quorum Authorization policy ${policyName}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>TprPolicyUpdateFailed</p> <pre><code>${username} was unable to update the Quorum Authorization policy ${policyName}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>TprStatusChange</p> <pre><code>${username} updated the status to ${status} for the Quorum Authorization request, ${requestID}, to ${description}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Audit/#trial","title":"trial","text":"<p>TrialActivationStarted</p> <pre><code>${userEmail} has started activation of the ${trialType} trial.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TrialDismissed</p> <pre><code>${userEmail} dismissed the ${trialType} trial.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TrialInvite</p> <pre><code>${invitorEmail} invited ${inviteeEmail} to join the ${trialType} trial.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TrialOnboardingComplete</p> <pre><code>${userEmail} completed the setup for the ${trialType} trial.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TrialRefreshReports</p> <pre><code>${userEmail} scheduled the refresh of the ${trialType} trial report.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TrialReportSharedFailure</p> <pre><code>${userEmail} was unable to share the ${trialType} trial report with ${recipientEmail}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>TrialReportSharedSuccess</p> <pre><code>${userEmail} successfully shared the ${trialType} trial report with ${recipientEmail}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Audit/#unmanaged_objects","title":"unmanaged_objects","text":"<p>SnapshotsDeletetionOnClusterProcessed</p> <pre><code>${userEmail} successfully expired unmanaged snapshots ${snapshotIdList} of object ${objectName} on cluster ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SnapshotsDeletetionOnPolarisProcessed</p> <pre><code>${userEmail} successfully expired unmanaged snapshots ${snapshotIdList} on polaris.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SnapshotsOfObjectDeletionOnClusterProcessed</p> <pre><code>${userEmail} successfully queued request to expire all unprotected snapshots of unmanaged objects ${objectNameList} on cluster ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SnapshotsOfObjectDeletionOnPolarisProcessed</p> <pre><code>${userEmail} successfully expired all unprotected snapshots of unmanaged objects ${objectNameList} on polaris.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/BULK_RECOVERY/","title":"BULK RECOVERY","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/BULK_RECOVERY/#appflows","title":"appflows","text":"<p>BulkRecoveryCanceledSuccessfully</p> <pre><code>${userName} canceled mass recovery for '${bulkRecoveryName}' with instance ID '${bulkRecoveryInstanceID}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>BulkRecoveryCancelFailed</p> <pre><code>${userName} failed to cancel mass recovery for '${bulkRecoveryName}' with instance ID '${bulkRecoveryInstanceID}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>BulkRecoveryStartedSuccessfully</p> <pre><code>${userName} successfully started ${inplaceRestoreUIName} mass recovery for '${bulkRecoveryName}' with instance ID '${bulkRecoveryInstanceID}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>BulkRecoveryStartFailed</p> <pre><code>${userName} failed to start ${inplaceRestoreUIName} mass recovery for  '${bulkRecoveryName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/BULK_RECOVERY/#bulk_recovery","title":"bulk_recovery","text":"<p>BulkRecoveryScheduled</p> <pre><code>Scheduled a job to perform mass recovery (${recoveryType}) of plan  ${planName}, instance ${bulkRecoveryInstanceID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>MassRecoveryCanceled</p> <pre><code>Canceled mass recovery (${recoveryType}) of plan ${planName}, instance  ${bulkRecoveryInstanceID}. Recovered workloads: ${numSuccessObjects},  Failed workloads: ${numFailedObjects}, Canceled workloads:  ${numCanceledObjects}, Workloads without snapshots: ${objectsWithoutSnapshot}, Total workloads: ${totalObjects}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>MassRecoveryChildRestoreFailed</p> <pre><code>Unable to restore ${sourceUser} ${snappableType} data to ${destinationUser} as part of mass recovery of plan ${planName},  instance ${bulkRecoveryInstanceID} because ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>MassRecoveryCompleted</p> <pre><code>Completed mass recovery (${recoveryType}) of plan ${planName}, instance  ${bulkRecoveryInstanceID}. Recovered workloads: ${numSuccessObjects},  Failed workloads: ${numFailedObjects}, Workloads without snapshots: ${objectsWithoutSnapshot}, Total workloads: ${totalObjects}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>MassRecoveryFailed</p> <pre><code>Unable to perform mass recovery (${recoveryType}) of plan ${planName},  instance ${bulkRecoveryInstanceID} because ${failureReason}. Recovered  workloads: ${numSuccessObjects}, Failed workloads: ${numFailedObjects},  Workloads without snapshots: ${objectsWithoutSnapshot},  Total workloads: ${totalObjects}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>MassRecoveryProgress</p> <pre><code>(Step 3/4) Progress metrics for plan ${planName}, instance  ${bulkRecoveryInstanceID} is Recovered workloads: ${numSuccessObjects}, Failed objects: ${numFailedObjects}, Workloads without snapshots: ${objectsWithoutSnapshot}, InProgress workloads:  ${numInProgressObjects}, Total workloads: ${totalObjects}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>MassRecoveryTaskFailed</p> <pre><code>${taskFailedDesc} for mass recovery of plan ${planName}, instance  ${bulkRecoveryInstanceID}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>MassRecoveryTaskStarted</p> <pre><code>${taskStartedDesc} for mass recovery of plan ${planName}, instance  ${bulkRecoveryInstanceID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>MassRecoveryTaskSucceeded</p> <pre><code>${taskSuccessDesc} for mass recovery of plan ${planName}, instance  ${bulkRecoveryInstanceID}. ${progressDesc}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Backup/","title":"Backup","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Backup/#app_backup","title":"app_backup","text":"<p>BlueprintBackupCanceled</p> <pre><code>Canceled ${maintenanceType} snapshot of the recovery plan '${name}' in the ${region} region for the ${awsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>BlueprintBackupCanceling</p> <pre><code>Canceling ${maintenanceType} snapshot of the recovery plan '${name}' in the ${region} region for the ${awsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>BlueprintBackupFailed</p> <pre><code>Failed ${maintenanceType} snapshot of the recovery plan '${name}' in the ${region} region for the ${awsAccountDisplayName} AWS account. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>BlueprintBackupStarted</p> <pre><code>Started ${maintenanceType} snapshot of the recovery plan '${name}' in the ${region} region for the ${awsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintBackupSucceeded</p> <pre><code>Successfully created ${maintenanceType} snapshot of the recovery plan '${name}' in the ${region} region for the ${awsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Backup/#awsnative","title":"awsnative","text":"<p>AwsNativeCreateCryoResourceSnapshotJobCanceled</p> <pre><code>Canceled ${maintenanceType} snapshot of the ${resourceDisplayName} ${resourceType} in the ${region} region for the ${awsAccountDisplayName} AWS account. This can happen if the object became unprotected, or was deleted.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AwsNativeCreateCryoResourceSnapshotJobCanceling</p> <pre><code>Canceling ${maintenanceType} snapshot of the ${resourceDisplayName} ${resourceType} in the ${region} region for the ${awsAccountDisplayName} AWS account. This can happen if the object became unprotected, or was deleted.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>AwsNativeCreateCryoResourceSnapshotJobFailed</p> <pre><code>Failed to create ${maintenanceType} snapshot of the ${resourceDisplayName} ${resourceType} in the ${region} region for the ${awsAccountDisplayName} AWS account. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AwsNativeCreateCryoResourceSnapshotJobQueued</p> <pre><code>Queued ${maintenanceType} snapshot of the ${resourceDisplayName} ${resourceType} in the ${region} region for the ${awsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>AwsNativeCreateCryoResourceSnapshotJobStarted</p> <pre><code>${userEmail} started snapshot of ${resourceType}: ${resourceDisplayName} in the ${region} region on AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AwsNativeCreateCryoResourceSnapshotJobStarted</p> <pre><code>Started ${maintenanceType} snapshot of the ${resourceDisplayName} ${resourceType} in the ${region} region for the ${awsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeCreateCryoResourceSnapshotJobStartFailed</p> <pre><code>${userEmail} failed to start snapshot of ${resourceType}: ${resourceDisplayName} in the ${region} region on AWS account ${awsAccountDisplayName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AwsNativeCreateCryoResourceSnapshotJobSucceeded</p> <pre><code>Successfully created ${maintenanceType} snapshot of the ${resourceDisplayName} ${resourceType} in the ${region} region for the ${awsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AwsNativeCreateEbsVolumeSnapshotJobCanceled</p> <pre><code>Canceled ${maintenanceType} snapshot of the EBS Volume: ${volumeDisplayName} in the ${region} region for the ${awsAccountDisplayName} AWS account. This can happen if the volume became unprotected, or was deleted.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AwsNativeCreateEbsVolumeSnapshotJobFailed</p> <pre><code>Failed to create ${maintenanceType} snapshot of the EBS Volume: ${volumeDisplayName} in the ${region} region for the ${awsAccountDisplayName} AWS account. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AwsNativeCreateEbsVolumeSnapshotJobStarted</p> <pre><code>Started ${maintenanceType} snapshot of the EBS Volume: ${volumeDisplayName} in the ${region} region for the ${awsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeCreateEbsVolumeSnapshotJobSucceeded</p> <pre><code>Successfully created ${maintenanceType} snapshot of the EBS Volume: ${volumeDisplayName} in the ${region} region for the ${awsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AwsNativeCreateEc2InstanceSnapshotJobCanceled</p> <pre><code>Canceled ${maintenanceType} snapshot of the EC2 Instance: ${instanceDisplayName} in the ${region} region for the ${awsAccountDisplayName} AWS account. This can happen if the instance became unprotected, or was deleted.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AwsNativeCreateEc2InstanceSnapshotJobFailed</p> <pre><code>Failed to create ${maintenanceType} snapshot of the EC2 Instance: ${instanceDisplayName} in the ${region} region for the ${awsAccountDisplayName} AWS account. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AwsNativeCreateEc2InstanceSnapshotJobPreempted</p> <pre><code>Unable to create ${maintenanceType}, ${snapshotLevelText}, snapshot of  the ${instanceDisplayName} in the region, ${region}, for the ${awsAccountDisplayName}. Snapshot is canceled. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AwsNativeCreateEc2InstanceSnapshotJobQueued</p> <pre><code>Queued ${maintenanceType} snapshot of the EC2 Instance: ${instanceDisplayName} in the ${region} region for the ${awsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>AwsNativeCreateEc2InstanceSnapshotJobSkipped</p> <pre><code>${nextSnapshotConsistencyLevelText} snapshot is taken since, ${maintenanceType},  ${snapshotLevelText} snapshot of the ${instanceDisplayName}, in the ${region},  region for the, ${awsAccountDisplayName} AWS account could not be created. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>AwsNativeCreateEc2InstanceSnapshotJobStarted</p> <pre><code>${userEmail} started snapshot of the EC2 Instance ${instanceDisplayName} in the ${region} region on the AWS account ${awsAccountDisplayName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AwsNativeCreateEc2InstanceSnapshotJobStarted</p> <pre><code>Started ${maintenanceType} snapshot of the EC2 Instance: ${instanceDisplayName} in the ${region} region for the ${awsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeCreateEc2InstanceSnapshotJobStartFailed</p> <pre><code>${userEmail} failed to start snapshot of the EC2 Instance ${instanceDisplayName} in the ${region} region on the AWS account ${awsAccountDisplayName}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AwsNativeCreateEc2InstanceSnapshotJobSucceeded</p> <pre><code>Successfully created ${maintenanceType} ${consistencyLevelText} snapshot of the EC2 instance: ${instanceDisplayName} in the ${region} region for the ${awsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AwsNativeCreateEc2InstanceSnapshotTaskFailed</p> <pre><code>Unable to take ${snapshotLevelText} snapshot of the ${instanceName}, EC2 instance. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>AwsNativeCreateEc2InstanceSnapshotTaskPostScriptFailed</p> <pre><code>An application-consistent snapshot of the ${instanceName} was undone because the post script,  ${postScriptPath}, failed on the EC2 instance. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AwsNativeCreateEc2InstanceSnapshotTaskStarted</p> <pre><code>Creating ${snapshotLevelText} snapshot of the ${instanceName}, EC2 instance.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeCreateEc2InstanceSnapshotTaskSucceeded</p> <pre><code>Successfully created ${snapshotLevelText} snapshot of the ${instanceName},  EC2 instance.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeCreateEc2InstanceSnapshotTaskWarning</p> <pre><code>Unable to take ${snapshotLevelText} snapshot of the ${instanceName}, EC2 instance. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Backup/#azuread","title":"azuread","text":"<p>AzureADBackupJobCanceled</p> <pre><code>Canceled ${maintenanceType} backup for directory \\\"${adDirectory}\\\".\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AzureADBackupJobCanceling</p> <pre><code>Canceling ${maintenanceType} backup for directory \\\"${adDirectory}\\\".\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>AzureADBackupJobDeltaStageProgress</p> <pre><code>Detected ${totalObjectsToUpdate} modified objects.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AzureADBackupJobFailed</p> <pre><code>Unable to create ${maintenanceType} backup for directory  \\\"${adDirectory}\\\". Reason: ${reason}. ${remedy}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureADBackupJobFetchStageProgress</p> <pre><code>Completed backup of ${numObjectsUpdated} objects out of  ${totalObjectsToUpdate} modified objects. Progress:  ${progressPercent}%%\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AzureADBackupJobQueued</p> <pre><code>Queued ${maintenanceType} backup for directory \\\"${adDirectory}\\\".\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>AzureADBackupJobStarted</p> <pre><code>Started ${maintenanceType} backup for directory \\\"${adDirectory}\\\".\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureADBackupJobSucceeded</p> <pre><code>Successfully created ${maintenanceType} backup for directory  \\\"${adDirectory}\\\".\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Backup/#azurenative","title":"azurenative","text":"<p>AzureNativeBackupSQLDatabaseBackupTaskFailed</p> <pre><code>Failed to sync backups of all databases in ${serverDisplayName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativeBackupSQLDatabaseBackupTaskStarted</p> <pre><code>Started syncing backups of all databases in ${serverDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AzureNativeBackupSQLDatabaseBackupTaskSuccess</p> <pre><code>Successfully synced backups of all databases in ${serverDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskFailureNo</p> <p>AzureNativeBackupSQLDatabaseJobCanceled</p> <pre><code>Canceled syncing backups and SLAs of databases in the ${serverDisplayName} ${serverTypeDisplayName} in the ${resGroupDisplayName} resource group in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AzureNativeBackupSQLDatabaseJobCanceling</p> <pre><code>Canceling sync of backups and SLAs of databases in the ${serverDisplayName} ${serverTypeDisplayName} in the ${resGroupDisplayName} resource group in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>AzureNativeBackupSQLDatabaseJobFailed</p> <pre><code>Failed to sync backups and SLAs of databases in the ${serverDisplayName} ${serverTypeDisplayName} in the ${resGroupDisplayName} resource group in the ${subscriptionDisplayName} subscription. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureNativeBackupSQLDatabaseJobStarted</p> <pre><code>Started syncing backups and SLAs of databases in the ${serverDisplayName} ${serverTypeDisplayName} in the ${resGroupDisplayName} resource group in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeBackupSQLDatabaseJobSucceeded</p> <pre><code>Successfully synced backup and SLAs of databases in the ${serverDisplayName} ${serverTypeDisplayName} in the ${resGroupDisplayName} resource group in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AzureNativeCreateDiskSnapshotJobCanceled</p> <pre><code>Canceled ${maintenanceType} snapshot of the ${diskDisplayName} disk in the ${resGroupDisplayName} resource group in the ${subscriptionDisplayName} subscription. This can happen if the disk became unprotected, or was deleted.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AzureNativeCreateDiskSnapshotJobCanceling</p> <pre><code>Canceling ${maintenanceType} snapshot of the ${diskDisplayName} disk in the ${resGroupDisplayName} resource group in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>AzureNativeCreateDiskSnapshotJobFailed</p> <pre><code>Failed to create ${maintenanceType} snapshot of the ${diskDisplayName} disk in the ${resGroupDisplayName} resource group in the ${subscriptionDisplayName} subscription. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureNativeCreateDiskSnapshotJobStarted</p> <pre><code>Started ${maintenanceType} snapshot of the ${diskDisplayName} disk in the ${resGroupDisplayName} resource group in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeCreateDiskSnapshotJobSucceeded</p> <pre><code>Successfully created ${maintenanceType} snapshot of the ${diskDisplayName} disk in the ${resGroupDisplayName} resource group in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AzureNativeCreateVMSnapshotJobCanceled</p> <pre><code>Canceled ${maintenanceType} snapshot of the ${vmDisplayName} virtual machine in the ${resGroupDisplayName} resource group in the ${subscriptionDisplayName} subscription. This can happen if the virtual machine became unprotected, or was deleted.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AzureNativeCreateVMSnapshotJobCanceling</p> <pre><code>Canceling ${maintenanceType} snapshot of the ${vmDisplayName} virtual machine in the ${resGroupDisplayName} resource group in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>AzureNativeCreateVMSnapshotJobFailed</p> <pre><code>Failed to create ${maintenanceType} snapshot of the ${vmDisplayName} virtual machine in the ${resGroupDisplayName} resource group in the ${subscriptionDisplayName} subscription. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureNativeCreateVMSnapshotJobSnapshotSkipped</p> <pre><code>Failed to create ${maintenanceType} ${snapshotLevelText} snapshot of the ${vmDisplayName} virtual machine. Snapshot is cancelled. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureNativeCreateVMSnapshotJobStarted</p> <pre><code>Started ${maintenanceType} snapshot of the ${vmDisplayName} virtual machine in the ${resGroupDisplayName} resource group in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeCreateVMSnapshotJobSucceeded</p> <pre><code>Successfully created ${maintenanceType} snapshot of the ${vmDisplayName} virtual machine in the ${resGroupDisplayName} resource group in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AzureNativeCreateVMSnapshotTaskFailed</p> <pre><code>Failed to take ${snapshotLevelText} snapshot of the ${vmDisplayName} virtual machine. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>AzureNativeCreateVMSnapshotTaskPostScriptFailed</p> <pre><code>An application consistent snapshot of the ${vmDisplayName} was successfully created but the post script ${postScriptPath} failed on the virtual machine. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>AzureNativeCreateVMSnapshotTaskStarted</p> <pre><code>Creating ${snapshotLevelText} snapshot of the ${vmDisplayName} virtual machine.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeCreateVMSnapshotTaskSucceeded</p> <pre><code>Successfully created ${snapshotLevelText} snapshot of the ${vmDisplayName} virtual machine.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeCreateVMSnapshotTaskWarning</p> <pre><code>Failed to take ${snapshotLevelText} snapshot of the ${vmDisplayName} virtual machine. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativeDBLTRSnapshotExpiryTaskFailed</p> <pre><code>Failed to sync LTR backups for all databases in server ${serverDisplayName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativeDBLTRSnapshotExpiryTaskStarted</p> <pre><code>Started syncing LTR backups for all databases in server ${serverDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AzureNativeDBLTRSnapshotExpiryTaskSucceeded</p> <pre><code>Successfully synced LTR backups for all databases in server ${serverDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeGetDisksToExcludeTaskSucceeded</p> <pre><code>The following disk(s) are being excluded from the snapshot of ${vmDisplayName}: ${dataDisksToExclude}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeSyncSLATaskFailed</p> <pre><code>Failed to sync SLAs of all databases in server ${serverDisplayName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativeSyncSLATaskStarted</p> <pre><code>Started syncing SLAs of all databases in server ${serverDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AzureNativeSyncSLATaskSucceeded</p> <pre><code>Successfully synced SLA of databases ${databasesList} in server ${serverDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskFailureNo</p> <p>AzureNativeSyncSLATaskSucceededWithBestEffortFailures</p> <pre><code>Failed to sync SLA of databases ${databasesList} in server ${serverDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativeSyncSLATaskSucceededWithFailuresAndInvalidSLAErrors</p> <pre><code>Failed to sync SLA of databases ${databasesList} in server ${serverDisplayName}. The databases ${dbsWithInvalidSLA} have an invalid SLA assigned.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Backup/#backup","title":"backup","text":"<p>BackupFailureRemediationNow</p> <pre><code>User ${username} started retry jobs for ${numberOfJobs} failed or cancelled jobs. Retry is scheduled to run immediately.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>BackupFailureRemediationSLAWindow</p> <pre><code>User ${username} started retry jobs for ${numberOfJobs} failed or cancelled jobs. Retry is scheduled to run as per configured snapshot window in the effective SLA Domain protecting the objects.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Backup/#cloudnative","title":"cloudnative","text":"<p>CloudNativeBackupJobCanceled</p> <pre><code>Canceled ${maintenanceType} snapshot of the ${qualifiedSnappableDisplayText}. This can happen if the object became unprotected, or was deleted.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>CloudNativeBackupJobCanceling</p> <pre><code>Canceling ${maintenanceType} snapshot of the ${qualifiedSnappableDisplayText}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>CloudNativeBackupJobCreateSnapshotTaskFailed</p> <pre><code>Unable to create the snapshot.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>CloudNativeBackupJobCreateSnapshotTaskStarted</p> <pre><code>Snapshot creation is in progress.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CloudNativeBackupJobCreateSnapshotTaskSucceeded</p> <pre><code>Snapshot created successfully.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeBackupJobFailed</p> <pre><code>Failed to create ${maintenanceType} snapshot of the ${qualifiedSnappableDisplayText}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>CloudNativeBackupJobQueued</p> <pre><code>Queued ${maintenanceType} snapshot of the ${qualifiedSnappableDisplayText}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>CloudNativeBackupJobStarted</p> <pre><code>${userEmail} started snapshot of the ${qualifiedSnappableDisplayText}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CloudNativeBackupJobStarted</p> <pre><code>Started ${maintenanceType} snapshot of the ${qualifiedSnappableDisplayText}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeBackupJobStartFailed</p> <pre><code>${userEmail} failed to start snapshot of the ${qualifiedSnappableDisplayText}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>CloudNativeBackupJobSucceeded</p> <pre><code>Successfully created ${maintenanceType} snapshot of the ${qualifiedSnappableDisplayText}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CloudNativePublishObjectStoreBackupInfo</p> <pre><code>Backup is in Progress: Successfully backed up: ${processedObjects} objects. Unable to backup: ${failedObjects} objects.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CloudNativePublishObjectStoreBackupProgress</p> <pre><code>Backup is in Progress: Successfully backed up: ${processedObjects} objects. Unable to backup: ${failedObjects} objects.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CloudNativeSnapshotGCFailed</p> <pre><code>Rubrik Security Cloud encountered an issue while attempting to clean up stale snapshots for ${snappableType} snappables. Reason: ${reportURL}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>CloudNativeSnapshotGCSucceeded</p> <pre><code>Successfully deleted stale snapshots for ${snappableType} snappables.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CloudNativeTempDatabaseCreation</p> <pre><code>Creating temporary database.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CloudNativeTempDatabaseCreationFailed</p> <pre><code>Failed to create temporary database.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>CloudNativeTempDatabaseCreationSucceeded</p> <pre><code>Successfully created temporary database.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeTempDatabaseWaitingFailed</p> <pre><code>Failed to wait for temporary database creation.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Backup/#common","title":"common","text":"<p>DeleteSnapshot</p> <pre><code>${username} deleted snapshot ${snapshotId} of '${vmName}'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteSnapshotFailed</p> <pre><code>${username} failed to delete a snapshot ${snapshotId} of '${vmName}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>OnDemandBackupStarted</p> <pre><code>${username} started a job to create an on-demand backup for ${snappableType} ${snappableName} in ${hierarchyRootType} ${hierarchyRootName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>OnDemandBackupStartFailed</p> <pre><code>${username} failed to start a job to create an on-demand backup for ${snappableType} ${snappableName} in ${hierarchyRootType} ${hierarchyRootName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Backup/#gcpnative","title":"gcpnative","text":"<p>BackupGCPNativeInstanceJobCanceled</p> <pre><code>Canceled ${maintenanceType} snapshot of the ${gcpInstanceDisplayName} GCE instance in the ${gcpProjectDisplayName} project. This can happen if the instance became unprotected, or was deleted.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>BackupGCPNativeInstanceJobCanceling</p> <pre><code>Canceling ${maintenanceType} snapshot of the ${gcpInstanceDisplayName} GCE instance in the ${gcpProjectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>BackupGCPNativeInstanceJobFailed</p> <pre><code>Failed to create ${maintenanceType} snapshot of the ${gcpInstanceDisplayName} GCE instance  in the ${gcpProjectDisplayName} project. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>BackupGCPNativeInstanceJobQueued</p> <pre><code>Queued ${maintenanceType} snapshot of the ${gcpInstanceDisplayName} GCE instance in the ${gcpProjectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>BackupGCPNativeInstanceJobStarted</p> <pre><code>Started  ${maintenanceType} snapshot of the ${gcpInstanceDisplayName} GCE instance in the ${gcpProjectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BackupGCPNativeInstanceJobSucceeded</p> <pre><code>Successfully created ${maintenanceType} snapshot of the ${gcpInstanceDisplayName} GCE instance  in the ${gcpProjectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>GCPNativeBackupInstanceJobStarted</p> <pre><code>${userEmail} started snapshot of GCP instance ${gcpInstanceDisplayName} in ${gcpProjectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>GCPNativeBackupInstanceJobStartFailed</p> <pre><code>${userEmail} failed to start snapshot of GCP instance ${gcpInstanceDisplayName} in ${gcpProjectDisplayName} project. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Backup/#kupr","title":"kupr","text":"<p>KuprBackupCanceled</p> <pre><code>Canceled ${maintenanceType} backup of ${user} Kubernetes Namespace ${snappable}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>KuprBackupCanceling</p> <pre><code>Canceling ${maintenanceType} backup of ${user} Kubernetes Namespace ${snappable}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>KuprBackupCompleted</p> <pre><code>Successfully created ${maintenanceType} snapshot of ${user} Kubernetes Namespace ${snappable}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>KuprBackupFailed</p> <pre><code>${maintenanceType} backup of ${user} Kubernetes Namespace ${snappable} failed. because ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>KuprBackupStarted</p> <pre><code>Started ${maintenanceType} backup of ${user} Kubernetes Namespace ${snappable}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>KuprNamespaceFilesetSnapshotTaskFailed</p> <pre><code>Failed to persist PVC data for namespace ${namespaceName} with namespaceID ${namespaceID} in Kubernetes Cluster ${clusterName} for snapshotID ${snapshotID}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>KuprNamespaceFilesetSnapshotTaskStarted</p> <pre><code>Started persisting PVC data for namespace ${namespaceName} with namespaceID ${namespaceID} in Kubernetes Cluster ${clusterName} for snapshotID ${snapshotID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>KuprNamespaceFilesetSnapshotTaskSuccess</p> <pre><code>Successfully persisted PVC data for namespace ${namespaceName} with namespaceID ${namespaceID} in Kubernetes Cluster ${clusterName} for snapshotID ${snapshotID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>KuprNamespaceFilesetSnapshotTaskWarning</p> <pre><code>Rubrik PersistentVolumeClaim backup failed for ${pvcName} due to ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>KuprNamespaceFilesetSnapshotTaskWarningInconsistentSnapshotMetadata</p> <pre><code>Unexpected failure due to inconsistent configuration. Please contact ${customerService}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>KuprNamespaceFilesetSnapshotTaskWarningPVCCountMismatch</p> <pre><code>Backup of ${missingPVCCount} PVCs failed due to unknown reason.  Identified mismatch in PVC counts.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>KuprNamespaceResourceSnapshotTaskFailed</p> <pre><code>Failed to collect resource definition(s) for namespace ${namespaceName} with namespaceID ${namespaceID} in Kubernetes Cluster ${clusterName} for snapshotID ${snapshotID}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>KuprNamespaceResourceSnapshotTaskStarted</p> <pre><code>Started collecting resource definition(s) for namespace ${namespaceName} with namespaceID ${namespaceID} in Kubernetes Cluster ${clusterName} for snapshotID ${snapshotID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>KuprNamespaceResourceSnapshotTaskSuccess</p> <pre><code>Successfully collected resource definition(s) for namespace ${namespaceName} with namespaceID ${namespaceID} in Kubernetes Cluster ${clusterName} for snapshotID ${snapshotID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>KuprNamespaceSnapshotCanceled</p> <pre><code>Canceled ${maintenanceType} snapshot of Kubernetes Namespace ${namespaceName} with namespaceID ${namespaceID} in Cluster ${clusterName} with clusterID ${clusterUUID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>KuprNamespaceSnapshotCanceling</p> <pre><code>Canceling ${maintenanceType} snapshot of Kubernetes Namespace ${namespaceName} with namespaceID ${namespaceID} in Cluster ${clusterName} with clusterID ${clusterUUID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>KuprNamespaceSnapshotCompleted</p> <pre><code>Successfully created ${maintenanceType} snapshot of Kubernetes Namespace ${namespaceName} with namespaceID ${namespaceID} in Cluster ${clusterName} with clusterID ${clusterUUID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>KuprNamespaceSnapshotFailed</p> <pre><code>${maintenanceType} snapshot of Kubernetes Namespace ${namespaceName} with namespaceID ${namespaceID} in Cluster ${clusterName} with clusterID ${clusterUUID} failed. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>KuprNamespaceSnapshotStarted</p> <pre><code>Started ${maintenanceType} snapshot of Kubernetes Namespace ${namespaceName} with namespaceID ${namespaceID} in Cluster ${clusterName} with clusterID ${clusterUUID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>KuprSkipPVCWarning</p> <pre><code>Skipping PersistentVolumeClaim(PVC) ${pvcName}.  This PVC will be restored as an empty PVC during restore.  Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Backup/#managed_volume","title":"managed_volume","text":"<p>V1BeginManagedVolumeSnapshot</p> <pre><code>${username} started the operation to change the Managed Volume '${mv}' state to writable.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>V1BeginManagedVolumeSnapshotFailure</p> <pre><code>${username} failed to begin managed volume snapshot for Managed Volume '${mv}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>V1EndManagedVolumeSnapshot</p> <pre><code>${username} started the operation to change the Managed Volume '${mv}' state to read only.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>V1EndManagedVolumeSnapshotFailure</p> <pre><code>${username} failed to end managed volume snapshot for Managed Volume '${mv}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Backup/#mssql","title":"mssql","text":"<p>DeleteMssqlDbMountFailed</p> <pre><code>${username} was unable to delete mount '${mountedDbName}, created on MSSQL database '${dbName}', and with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteMssqlDbMountSuccess</p> <pre><code>${username} successfully deleted mount '${mountedDbName}', created on MSSQL database '${dbName}', and with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>MSSQLBatchSnapshotFailed</p> <pre><code>${username} failed to start a job to take an on-demand snapshot of Microsoft SQL Database '${snappableName}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>MSSQLBatchSnapshotStarted</p> <pre><code>${username} started a job to take an on-demand snapshot of Microsoft SQL Database '${snappableName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>OnDemandTransactionLogBackupStarted</p> <pre><code>${username} started a job to create an on-demand  transaction log backup for ${snappableType} ${snappableName}  in ${hierarchyRootType} ${hierarchyRootName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>OnDemandTransactionLogBackupStartFailed</p> <pre><code>${username} was unable to start a job to create an on-demand  transaction log backup for ${snappableType} ${snappableName}  in ${hierarchyRootType} ${hierarchyRootName}.  Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Backup/#o365","title":"o365","text":"<p>O365AllAttachmentDownloaded</p> <pre><code>All attachments are downloaded\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365BackupAttemptFailed</p> <pre><code>Attempted ${maintenanceType} backup of ${user} Microsoft 365 ${snappable}, will retry automatically: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureNo</p> <p>O365BackupCanceled</p> <pre><code>Canceled ${maintenanceType} backup of ${user} Microsoft 365 ${snappable}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>O365BackupCanceling</p> <pre><code>Canceling ${maintenanceType} backup of ${user} Microsoft 365 ${snappable}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>O365BackupCannotBeInitiated</p> <pre><code>Backup cannot be initiated for ${objectName} Microsoft ${snappable}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningCanceledNo</p> <p>O365BackupCompleted</p> <pre><code>Successfully created ${maintenanceType} snapshot of ${user} Microsoft 365 ${snappable}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365BackupCompletedObjectArchived</p> <pre><code>The ${objectType} is no longer active and has been archived.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365BackupCompletedObjectDisabled</p> <pre><code>The ${objectType} has been disabled due to ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365BackupCompletedTeamArchived</p> <pre><code>The team is no longer active and has been archived.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365BackupFailed</p> <pre><code>${maintenanceType} backup of ${user} Microsoft 365 ${snappable} failed because ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365BackupFailedMailboxArchived</p> <pre><code>Mailbox ${reason}. It is being archived.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365BackupFetchDataCompleted</p> <pre><code>Successfully fetched Microsoft 365 ${snappable} data from Microsoft\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365BackupFetchDataFailed</p> <pre><code>Failed to fetch Microsoft 365 ${snappable} data from Microsoft. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>O365BackupFetchDataRunning</p> <pre><code>Fetching Microsoft 365 ${snappable} data from Microsoft\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>O365BackupStarted</p> <pre><code>${userID} started backup of Microsoft 365 ${snappableType} of ${snappableName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>O365BackupStarted</p> <pre><code>Started ${maintenanceType} backup of ${user} Microsoft 365 ${snappable}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365BackupStartFailed</p> <pre><code>${userID} failed to start on demand backup of Microsoft 365 ${snappableType} of ${snappableName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>O365DeleteArtifactsStarted</p> <pre><code>Started deletion of temporary snapshot state for ${user}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365DeleteArtifactsSucceeded</p> <pre><code>Successfully deleted temporary snapshot state of ${user}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365ExchangeBackupCompleted</p> <pre><code>Successfully created ${maintenanceType} snapshot of ${user} Microsoft 365 ${snappable}. Folders ingested ${foldersIngested}. Emails ingested ${emailsIngested}. Emails skipped ${emailsSkipped}. Calendar events ingested ${eventsIngested}. Calendar events skipped ${eventsSkipped}. Attachments ingested ${attachmentsIngested}. Attachments skipped ${attachmentsSkipped}. Items deleted ${itemsDeleted}. Bytes ingested ${bytesIngested}. Bytes stored ${bytesStored}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365ExchangeBackupCompletedWithWarnings</p> <pre><code>Completed backup with warnings. Created ${maintenanceType} snapshot of ${user} Microsoft 365 ${snappable}. Folders ingested: ${foldersIngested}. Emails ingested: ${emailsIngested}.  Emails skipped: ${emailsSkipped}. Calendar events ingested: ${eventsIngested}.  Calendar events skipped: ${eventsSkipped}. Contacts ingested: ${contactsIngested}. Attachments ingested: ${attachmentsIngested}.  Attachments skipped: ${attachmentsSkipped}. Items deleted: ${itemsDeleted}. Bytes ingested: ${bytesIngested}.  Bytes stored: ${bytesStored}. ${reasonsForWarningEvent}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>O365ExchangeBackupProgress</p> <pre><code>Backup job in progress. Ingested ${itemsIngestedInInterval} items (${bytesIngested})  in the last ${progressInterval}, and in total,  ${itemsIngested} items (${bytesIngestedTotal}) in the current job.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>O365ExchangeBackupWithContactsCompleted</p> <pre><code>Successfully created ${maintenanceType} snapshot of ${user} Microsoft 365 ${snappable}. Folders ingested ${foldersIngested}. Emails ingested ${emailsIngested}. Emails skipped ${emailsSkipped}. Calendar events ingested ${eventsIngested}. Calendar events skipped ${eventsSkipped}. Contacts ingested ${contactsIngested}. Attachments ingested ${attachmentsIngested}. Attachments skipped ${attachmentsSkipped}. Items deleted ${itemsDeleted}. Bytes ingested ${bytesIngested}. Bytes stored ${bytesStored}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365FullBackupLogMailMetrics</p> <pre><code>Stored ${numMailChanges} message(s) as a ${sizeIngested} snapshot\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365IncrementalBackupLogMailMetrics</p> <pre><code>Stored ${numMailChanges} message change(s) as a ${sizeIngested} snapshot\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365LogAttachmentMetrics</p> <pre><code>Downloaded ${numAttachments} attachment(s) (${numDeduped} deduplicated), for total of ${sizeIngested}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365LogAttachmentStorageMetrics</p> <pre><code>Downloaded ${numAttachments} attachment(s). Stored ${numStored} (${numDeduped} deduplicated) for total of ${attachmentsStoredSize}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365LogIncrementalMailboxSize</p> <pre><code>Taking incremental snapshot of mailbox, with full size of approximately ${mailboxSize} on Microsoft 365\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365LogMailboxSize</p> <pre><code>Taking full snapshot of mailbox, approximately sized at ${mailboxSize} on Microsoft 365\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365LogMailMetrics</p> <pre><code>Stored ${numMailChanges} mail changes, with ${sizeIngested} of mail downloaded\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365LogNoAttachments</p> <pre><code>No attachments downloaded\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365LogTemporaryBackupStorage</p> <pre><code>Used ${temporaryStorageSize} of temporary Azure Blob storage\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365OnedriveBackupCompleted</p> <pre><code>Successfully created ${maintenanceType} snapshot of ${user} Microsoft 365 ${snappable}. Folders ingested ${folderCount}. Files ingested ${fileCount}. Files skipped ${skipCount}. Items deleted ${deletedCount}. Bytes ingested ${bytesIngested}. Bytes stored ${bytesStored}. Data reduction percent ${reductionPercent}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365OnedriveBackupCompletedWithWarnings</p> <pre><code>Completed backup with warnings. Created ${maintenanceType} snapshot of ${user} Office 365 ${snappable}. Folders ingested ${folderCount}. Files ingested ${fileCount}. Items deleted ${deletedCount}. Bytes ingested ${bytesIngested}. Bytes stored ${bytesStored}. Data reduction percent ${reductionPercent}. ${skippedItemCount} files skipped during backup due to sync issues with Microsoft\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>O365RenamedFolders</p> <pre><code>Renamed ${numFolders} folders from backup due to malformed folder name: ${renamedFolderNames}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>O365SharePointListBackupCompleted</p> <pre><code>Successfully created ${maintenanceType} snapshot of ${objectName} Microsoft 365 ${snappable}. Folders ingested ${folderCount}. Items ingested ${itemCount}. Attachments ingested ${attachmentCount}. Files skipped ${skipCount}. Items deleted ${deletedCount}. Bytes ingested ${bytesIngested}. Bytes stored ${bytesStored}. Data reduction percent ${reductionPercent}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365SharePointSiteBackupCompletedWithWarnings</p> <pre><code>Completed backup with warnings, created ${maintenanceType} snapshot of ${objectName} Microsoft ${snappable}. ${objectsSkipped} out of ${totalChildObjects} object(s) under the site failed to backup. Folders ingested: ${folderCount} Items ingested: ${itemCount} Attachments ingested: ${attachmentCount} Files skipped: ${skipCount} Items deleted: ${deletedCount} Bytes ingested: ${bytesIngested} Bytes stored: ${bytesStored} Data reduction percent: ${reductionPercent}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>O365SkippedAttachments</p> <pre><code>Unable to process ${totalNumSkipped} attachment(s): ${numSkippedFromServerBusyErr} due to Microsoft server busy error, ${numSkippedFromCannotOpenFileErr} due to Microsoft cannot open file error and ${numSkippedFromUnsupportedTypeErr} due to unsupported attachment type error - More details in CSV file: ${downloadLink}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>O365SkippedEmails</p> <pre><code>${numEmails} messages were not backed up due to a retrieval failure. We will attempt to download them on the next backup cycle. For more information on this error please visit https://support.rubrik.com/articles/How_To/000004060.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>O365SkippedFolders</p> <pre><code>Skipping ${numFolders} folders from backup: ${skippedFolderNames}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>O365StoreSnapshotCompleted</p> <pre><code>Successfully stored Microsoft 365 ${snappable} data\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365StoreSnapshotFailed</p> <pre><code>Failed to store Microsoft 365 ${snappable} data. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>O365StoreSnapshotRunning</p> <pre><code>Storing Microsoft 365 ${snappable} data\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>O365TeamBackupCompleted</p> <pre><code>Successfully created ${maintenanceType} snapshot of ${user} Microsoft 365 ${snappable}. Folders ingested ${folderCount}. Files ingested ${fileCount}. Files skipped ${skipCount}. Items deleted ${deletedCount}. Bytes ingested ${bytesIngested}. Bytes stored ${bytesStored}. Data reduction percent ${reductionPercent}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365TeamBackupWithConversationsCompleted</p> <pre><code>Successfully created ${maintenanceType} snapshot of ${user} Microsoft 365 ${snappable}. Folders ingested ${folderCount}. Files ingested ${fileCount}. Files skipped ${skipCount}. Total Messages ingested ${messageCount}. Private Channel Message ingested ${pvtChannelMsgCount}. Items deleted ${deletedCount}. File bytes ingested ${fileBytesIngested}. File bytes stored ${bytesStored}. File data reduction percent ${fileReductionPercent}. Message bytes ingested ${msgBytesIngested}. Message bytes stored ${msgBytesStored}. Message data reduction percent ${msgReductionPercent}. Messages skipped ${msgSkipCount}. Message attachment references skipped ${msgAttachmentSkipCount}. New channels discovered ${numChannelsAdded}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365TeamBackupWithConversationsCompletedWithWarning</p> <pre><code>Partially completed the backups with warnings. Created ${maintenanceType} snapshot of ${user} Microsoft 365 ${workload},  but skipped backing up ${skippedDriveCount} channels' files. The backup for skipped files will be retried in the next incremental backup. Folders ingested ${folderCount}. Files ingested ${fileCount}. Files skipped ${skipCount}. Total Messages ingested ${messageCount}. Private Channel Message ingested ${pvtChannelMsgCount}. Items deleted ${deletedCount}. File bytes ingested ${fileBytesIngested}. File bytes stored ${bytesStored}. File data reduction percent ${fileReductionPercent}. Message bytes ingested ${msgBytesIngested}. Message bytes stored ${msgBytesStored}. Message data reduction percent ${msgReductionPercent}. Messages skipped ${msgSkipCount}. Message attachment references skipped ${msgAttachmentSkipCount}. New channels discovered ${numChannelsAdded}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Backup/#postgres_db_cluster","title":"postgres_db_cluster","text":"<p>CreateOnDemandPostgresDbClusterSnapshotFailure</p> <pre><code>${username} failed to trigger an on-demand snapshot for PostgreSQL database cluster ${dbClusterName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>CreateOnDemandPostgresDbClusterSnapshotStarted</p> <pre><code>${username} triggered an on-demand snapshot for PostgreSQL database cluster ${dbClusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Backup/#saasapps","title":"saasapps","text":"<p>SaasAppsBackupCanceled</p> <pre><code>Canceled ${maintenanceType} backup of ${displayName} ${snappableType}  belonging to ${siteName}. ${attachmentURLMessage}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>SaasAppsBackupCompleted</p> <pre><code>Successfully completed ${maintenanceType} backup of ${displayName}  ${snappableType} belonging to ${siteName}. Number of rows added:  ${rowsAdded}, number of rows modified: ${rowsModified}, number of rows deleted: ${rowsDeleted}. ${attachmentURLMessage}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>SaasAppsBackupFailed</p> <pre><code>Unable to take ${maintenanceType} backup of ${displayName}  ${snappableType} belonging to ${siteName} because ${reason}. ${attachmentURLMessage}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>SaasAppsBackupStarted</p> <pre><code>${userID} started backup of ${displayName} ${snappableType}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SaasAppsBackupStarted</p> <pre><code>Started ${maintenanceType} backup of ${displayName} ${snappableType}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>SaasAppsBackupStartFailed</p> <pre><code>${userID} failed to start on-demand backup of ${displayName}  ${snappableType}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>SaasAppsEntityBackupFailed</p> <pre><code>Unable to complete backup of '${entityName}' entity for ${displayName} ${snappableType}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskFailureNo</p> <p>SaasAppsEntityBackupStarted</p> <pre><code>Started backup of '${entityName}' entity for ${displayName} ${snappableType}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>SaasAppsEntityBackupSucceeded</p> <pre><code>Successfully completed backup of '${entityName}' entity for ${displayName} ${snappableType}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Backup/#sap_hana_system","title":"sap_hana_system","text":"<p>CreateOnDemandSapHanaStorageSnapshotFailure</p> <pre><code>${username} failed to trigger an on-demand storage snapshot for SAP HANA system ${systemName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>CreateOnDemandSapHanaStorageSnapshotStarted</p> <pre><code>${username} triggered an on-demand storage snapshot for SAP HANA system ${systemName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Backup/#vsphere","title":"vsphere","text":"<p>VSphereBulkSnapshotSingleFailed</p> <pre><code>${username} failed to start a job to take a snapshot of Virtual Machine '${snappableName}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>VSphereBulkSnapshotSingleStarted</p> <pre><code>${username} started a job to take a snapshot of Virtual Machine '${snappableName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Classification/","title":"Classification","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Classification/#classification","title":"classification","text":"<p>AnalyzerCreated</p> <pre><code>${username} created a new custom analyzer named '${analyzerName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AnalyzerDeleted</p> <pre><code>${username} deleted the custom analyzer named '${analyzerName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AnalyzerEdited</p> <pre><code>${username} modified the custom analyzer named '${analyzerName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AnalyzerRiskUpdated</p> <pre><code>${username} updated the analyzer risk to '${analyzerRisk}' for  ${analyzerNames}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>BulkPolicyJobFailure</p> <pre><code>Failed to ${actionType} policies to workloads for clusters or hierarchy objects.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>BulkPolicyJobSuccess</p> <pre><code>Successfully ${actionType} policies to workloads for clusters or hierarchy objects.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ClassficationResultsAvailable</p> <pre><code>Results available in the Objects page for the workload '${objectName}' on the snapshot at ${snapshotsTimeStamp}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ClassificationCanceled</p> <pre><code>Canceled classification of ${objectType} '${objectName}' on snapshot(s)  at ${snapshotsTimeStamp} with policies ${policyList}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningCanceledNo</p> <p>ClassificationFailure</p> <pre><code>Failed to classify ${objectType} '${objectName}' on snapshot(s) at  ${snapshotsTimeStamp} with policies ${policyList}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ClassificationRunning</p> <pre><code>Running classification of ${objectType} '${objectName}' on snapshot(s)  at ${snapshotsTimeStamp} with policies ${policyList}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ClassificationRunningNoNewSnapshot</p> <pre><code>Running classification of ${objectType} '${objectName}' with policies  ${policyList}: No new snapshot to analyze.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ClassificationStarted</p> <pre><code>Beginning classification of ${objectType} '${objectName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ClassificationSuccess</p> <pre><code>Completed classification of ${objectType} '${objectName}' on snapshot(s) at ${snapshotsTimeStamp} with policies ${policyList}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ClassificationSuccessNoNewSnapshot</p> <pre><code>Completed classification of ${objectType} '${objectName}' with policies ${policyList}: No new snapshot to analyze.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CrawlJobDeleted</p> <pre><code>${username} deleted the discovery named '${crawlName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CrawlJobStarted</p> <pre><code>${username} ran a discovery named '${crawlName}', which included ${policyNames}, across ${numObjects} object(s).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DCAddObjectsToPolicyFailure</p> <pre><code>Failed to add ${ObjectCount} objects to ${policyID}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskFailureNo</p> <p>DCAddObjectsToPolicySuccess</p> <pre><code>Added ${ObjectCount} objects to ${policyID} successfully\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>DCObjectResultsDownloaded</p> <pre><code>${username} downloaded full discovery results of ${objectType} '${objectName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DCObjectResultsOnLocationDownloaded</p> <pre><code>${username} downloaded full discovery results of ${objectType} '${objectName}' on '${location}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DCPathResultsDownloaded</p> <pre><code>${username} downloaded discovery results of '${path}' in ${objectType} '${objectName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DCPathResultsOnLocationDownloaded</p> <pre><code>${username} downloaded discovery results of '${path}' in ${objectType} '${objectName}' on '${location}'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DCPolicySyncCanceled</p> <pre><code>Sync canceled due to modifications to policies. A new sync will begin shortly\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>DCPolicySyncFailed</p> <pre><code>Failed to sync changes on ${clusterName}. Reason: ${errorMessage}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>DCPolicySyncFailedClusterDisconnected</p> <pre><code>Unable to sync changes on ${clusterName} because the cluster is disconnected\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>DCPolicySyncRecovered</p> <pre><code>Sync recovered and completed successfully on ${clusterName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>DCPolicySyncStarting</p> <pre><code>Starting to sync changes for ${policies} on ${clusterName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>DCPolicySyncSuccess</p> <pre><code>Succeeded to sync changes on ${clusterName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ODCResultsDownloaded</p> <pre><code>${username} downloaded the results of the discovery named '${crawlName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>PolicyCreated</p> <pre><code>${username} created a new custom policy named '${policyName}', which includes ${analyzerNames}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>PolicyDeleted</p> <pre><code>${username} deleted the policy named '${policyName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>PolicyEdited</p> <pre><code>${username} modified the policy named '${policyName}', which now includes ${analyzerNames}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>PolicyObjAdded</p> <pre><code>${username} added ${objectNames} to ${policyNames}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>PolicyObjRemoved</p> <pre><code>${username} removed ${objectNames} from ${policyNames}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>PreviewerDisabled</p> <pre><code>${username} disabled previewer for '${clusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>PreviewerEnabled</p> <pre><code>${username} enabled previewer for '${clusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>WhitelistUpdateAdd</p> <pre><code>${username} updated the allowlist for '${objectName}' on path '${pathName}', adding '${analyzerNames}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>WhitelistUpdateAddRemove</p> <pre><code>${username} updated the allowlist for '${objectName}' on path '${pathName}', adding '${analyzersAdded}' and removing '${analyzersRemoved}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>WhitelistUpdateRemove</p> <pre><code>${username} updated the allowlist for '${objectName}' on path '${pathName}', removing '${analyzerNames}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/","title":"Configuration","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#active_directory","title":"active_directory","text":"<p>ActiveDirectoryRefreshDomainStarted</p> <pre><code>${username} started a job to refresh the Active Directory domain  ${domainName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ActiveDirectoryRefreshDomainStartFailed</p> <pre><code>${username} unable to start a job to refresh the Active Directory domain  ${domainName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#appflows","title":"appflows","text":"<p>BlueprintArchiveSucceeded</p> <pre><code>${userEmail} successfully archived recovery plan '${blueprintName}' on ${clusterName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>BlueprintCreationSucceeded</p> <pre><code>${userEmail} successfully created recovery plan '${blueprintName}' on ${clusterName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>BlueprintUpdateSucceeded</p> <pre><code>${userEmail} successfully updated recovery plan '${blueprintName}' on ${clusterName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>InstallIofilterStarted</p> <pre><code>${userEmail} started a job to install iofilter on ${computeClusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>InstallIofilterStartFailed</p> <pre><code>${userEmail} failed to start a job to install iofilter on  ${computeClusterName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>InstanceResourceConfigurationDeletionSucceeded</p> <pre><code>${userEmail} successfully deleted resource configuration for recovery  plan '${blueprintName}' on ${clusterName} with failover Id ${failoverId}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>PostScriptUpdateSucceeded</p> <pre><code>${userEmail} successfully updated post script for the snappable '${snappableName}' of the recovery plan '${blueprintName}' on ${clusterName} with failover type ${failoverType}. The hashcode of the post script is ${postscriptSignature}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RecoveryPlanCreationSucceeded</p> <pre><code>${userEmail} successfully created recovery plan '${planName}' on ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RecoveryPlanDeletionSucceeded</p> <pre><code>${userEmail} successfully deleted recovery plan '${planName}' on ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RecoveryPlanUpdateSucceeded</p> <pre><code>${userEmail} successfully updated recovery plan '${planName}' on ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ResourceConfigurationCreationSucceeded</p> <pre><code>${userEmail} successfully created resource configuration for recovery plan '${planName}' on ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ResourceConfigurationDeletionSucceeded</p> <pre><code>${userEmail} successfully deleted resource configuration for recovery plan '${planName}' on ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ResourceConfigurationUpdateSucceeded</p> <pre><code>${userEmail} successfully updated resource configuration for recovery plan '${planName}' on ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ResourceMappingCreationSucceeded</p> <pre><code>${userEmail} successfully created resource mapping for recovery plan '${blueprintName}' on ${clusterName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ResourceMappingDeletionSucceeded</p> <pre><code>${userEmail} successfully deleted resource mapping for recovery plan '${blueprintName}' on ${clusterName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ResourceMappingModificationSucceeded</p> <pre><code>${userEmail} successfully modified resource mapping for recovery plan '${blueprintName}' on ${clusterName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UninstallIofilterStarted</p> <pre><code>${userEmail} started a job to uninstall iofilter on ${computeClusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UninstallIofilterStartFailed</p> <pre><code>${userEmail} failed to start a job to uninstall iofilter on  ${computeClusterName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpgradeIofilterStarted</p> <pre><code>${userEmail} started a job to upgrade iofilter on ${computeClusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpgradeIofilterStartFailed</p> <pre><code>${userEmail} failed to start a job to upgrade iofilter on  ${computeClusterName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#archivalgroup","title":"archivalgroup","text":"<p>ArchivalGroupCreationSucceeded</p> <pre><code>${userEmail} successfully created ${archivalGroupType} Archival Location ${archivalGroupName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ArchivalGroupDeletionSucceeded</p> <pre><code>${userEmail} successfully deleted Archival Location ${archivalGroupName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ArchivalGroupModificationSucceeded</p> <pre><code>${userEmail} successfully modified Archival Location ${archivalGroupName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#archivallocation","title":"archivallocation","text":"<p>ArchivalLocationCreationSucceeded</p> <pre><code>${userEmail} successfully created ${archivalLocationType} archival  location ${archivalLocationName} with ${keyType} encryption key type.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ArchivalLocationCreationWithKeyVaultSucceeded</p> <pre><code>${userEmail} successfully created ${archivalLocationType} archival  location ${archivalLocationName} with ${keyName} of ${keyType}  encryption key type from ${keyVaultUrl}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ArchivalLocationModificationSucceeded</p> <pre><code>${userEmail} successfully modified archival location ${archivalLocationName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ArchivalLocationReaderDataSourcesRefreshTriggerFailed</p> <pre><code>${userEmail} failed to trigger data source refresh for reader archival location ${archivalLocationName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ArchivalLocationReaderDataSourcesRefreshTriggerSucceeded</p> <pre><code>${userEmail} successfully triggered data source refresh for reader archival location ${archivalLocationName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ArchivalLocationReaderPromotionFailed</p> <pre><code>${userEmail} failed to promote reader archival location ${archivalLocationName} to read/write state from Polaris.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ArchivalLocationReaderPromotionSucceeded</p> <pre><code>${userEmail} successfully promoted reader archival location ${archivalLocationName} to read/write state from Polaris.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ArchivalLocationReaderRefreshTriggerFailed</p> <pre><code>${userEmail} failed to trigger refresh for reader archival location ${archivalLocationName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ArchivalLocationReaderRefreshTriggerSucceeded</p> <pre><code>${userEmail} successfully triggered refresh for reader archival location ${archivalLocationName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ArchivalLocationStateChangeFailed</p> <pre><code>${userEmail} failed to ${archivalLocationStatus} archival location ${archivalLocationName} from Polaris.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ArchivalLocationStateChangeSucceeded</p> <pre><code>${userEmail} successfully ${archivalLocationStatus} archival location ${archivalLocationName} from Polaris.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DataCenterCloudAccountStateChange</p> <pre><code>${userEmail} successfully ${cloudAccountStatus}  ${providerType} data center cloud account '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ReaderArchivalLocationMasterKeyUpdateSucceeded</p> <pre><code>${userEmail} successfully modified the master encryption key for the  reader archival location ${archivalLocationName} to ${keyType}  encryption key.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ReaderArchivalLocationMasterKeyWithKeyVaultUpdateSucceeded</p> <pre><code>${userEmail} successfully modified the master encryption key for the  reader archival location ${archivalLocationName} to ${keyType}  encryption key. ${keyName} from ${keyVaultUrl} is being used as the  encryption key.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#awsnative","title":"awsnative","text":"<p>AwsNativeDeleteAccountJobStarted</p> <pre><code>${userEmail} started to disable ${featureDisplayName} protection of AWS account ${awsAccountDisplayName}. ${featureSnapshots} from AWS will ${deleteSnapshotsMsg} be deleted.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AwsNativeDeleteAccountJobStartFailed</p> <pre><code>${userEmail} failed to start disable of ${featureDisplayName} protection of AWS account ${awsAccountDisplayName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AwsNativeRefreshAccountJobStarted</p> <pre><code>${userEmail} started refresh of AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AwsNativeRefreshAccountJobStartFailed</p> <pre><code>${userEmail} failed to start refresh of AWS account ${awsAccountDisplayName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>DeleteAwsAccountArchiveSnapshotTaskFailed</p> <pre><code>Failed to delete ${featureSnapshots} for ${featureDisplayName} protection in the AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>DeleteAwsAccountArchiveSnapshotTaskStarted</p> <pre><code>Deleting ${featureSnapshots} for ${featureDisplayName} protection in the AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>DeleteAwsAccountArchiveSnapshotTaskSucceeded</p> <pre><code>Successfully Deleted ${featureSnapshots} for ${featureDisplayName} protection in the AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>DeleteAwsNativeAccountJobFailed</p> <pre><code>Failed to disable ${featureDisplayName} protection for AWS account ${awsAccountDisplayName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>DeleteAwsNativeAccountJobQueued</p> <pre><code>Queued disabling ${featureDisplayName} protection of AWS account ${awsAccountDisplayName}. ${featureSnapshots} from AWS will ${deleteSnapshotsMsg} be deleted.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>DeleteAwsNativeAccountJobStarted</p> <pre><code>Started a job to disable ${featureDisplayName} protection for AWS account ${awsAccountDisplayName}. ${featureSnapshots} from AWS will ${deleteSnapshotsMsg} be deleted.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>DeleteAwsNativeAccountJobSucceeded</p> <pre><code>Successfully disabled ${featureDisplayName} protection for AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>RefreshAwsNativeAccountJobCanceled</p> <pre><code>Canceled  ${maintenanceType} refresh of AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>RefreshAwsNativeAccountJobCanceling</p> <pre><code>Canceling  ${maintenanceType} refresh of AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>RefreshAwsNativeAccountJobFailed</p> <pre><code>Failed to refresh AWS account ${awsAccountDisplayName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>RefreshAwsNativeAccountJobStarted</p> <pre><code>Started  ${maintenanceType} refresh of AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>RefreshAwsNativeAccountJobSucceeded</p> <pre><code>Successfully refreshed AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>RefreshAwsNativeAccountRefreshFeaturesTaskStarted</p> <pre><code>Refreshing ${awsAccountFeatures} features for ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#azuread","title":"azuread","text":"<p>AzureAdDeleteDirectoryFailed</p> <pre><code>${userID} attempted to delete the Azure AD Directory ${directoryName},  but the operation failed.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AzureAdDeleteDirectoryStarted</p> <pre><code>${userName} started deletion of Azure AD Directory ${directoryName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AzureAdOnboardingFailed</p> <pre><code>Onboarding of the Azure AD Directory ${directoryName} failed.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AzureAdOnboardingSucceeded</p> <pre><code>Onboarding of the Azure AD Directory ${directoryName} Succeeded.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#azurenative","title":"azurenative","text":"<p>AzureNativeDBPrereqVerifyJobCanceled</p> <pre><code>Canceled prerequisite verification of the ${serverDisplayName} -  ${serverTypeDisplayName} in the ${resGroupDisplayName} resource group of the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AzureNativeDBPrereqVerifyJobCanceling</p> <pre><code>Canceling prerequisite verification of the ${serverDisplayName} -  ${serverTypeDisplayName} in the ${resGroupDisplayName} resource group of the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>AzureNativeDBPrereqVerifyJobFailed</p> <pre><code>Failed prerequisite verification of the ${serverDisplayName} -  ${serverTypeDisplayName} in the ${resGroupDisplayName} resource group of the ${subscriptionDisplayName} subscription. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureNativeDBPrereqVerifyJobQueued</p> <pre><code>Queued prerequisite verification of the ${serverDisplayName} -  ${serverTypeDisplayName} in the ${resGroupDisplayName} resource group of the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>AzureNativeDBPrereqVerifyJobStarted</p> <pre><code>Started prerequisite verification of the ${serverDisplayName} -  ${serverTypeDisplayName} in the ${resGroupDisplayName} resource group of the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeDBPrereqVerifyJobSucceeded</p> <pre><code>Successfully completed prerequisite verification of the ${serverDisplayName} -  ${serverTypeDisplayName} in the ${resGroupDisplayName} resource group of the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AzureNativeDeleteSubscriptionArchiveSnapshotTaskFailed</p> <pre><code>Failed to delete snapshots in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativeDeleteSubscriptionArchiveSnapshotTaskStarted</p> <pre><code>Deleting snapshots in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AzureNativeDeleteSubscriptionArchiveSnapshotTaskSucceeded</p> <pre><code>Deleted snapshots in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeDeleteSubscriptionJobCanceled</p> <pre><code>Canceled the job to disable ${featureDisplayName} protection for the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AzureNativeDeleteSubscriptionJobCanceling</p> <pre><code>Canceling the job to disable ${featureDisplayName} protection for the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>AzureNativeDeleteSubscriptionJobFailed</p> <pre><code>${userEmail} failed to start disabling protection of the ${subscriptionDisplayName} Azure subscription. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AzureNativeDeleteSubscriptionJobFailed</p> <pre><code>Failed to disable ${featureDisplayName} protection for the ${subscriptionDisplayName} subscription. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureNativeDeleteSubscriptionJobStarted</p> <pre><code>${userEmail} started disabling protection of the ${subscriptionDisplayName} Azure subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AzureNativeDeleteSubscriptionJobStarted</p> <pre><code>Started a job to disable ${featureDisplayName} protection for the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeDeleteSubscriptionJobSucceeded</p> <pre><code>Successfully disabled ${featureDisplayName} protection for the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AzureNativeRefreshSubscriptionCanceled</p> <pre><code>Canceled ${maintenanceType} refresh of the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AzureNativeRefreshSubscriptionCanceling</p> <pre><code>Canceling ${maintenanceType} refresh of the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>AzureNativeRefreshSubscriptionFailed</p> <pre><code>Failed ${maintenanceType} refresh of the ${subscriptionDisplayName} subscription (${statusPerFeature}). Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureNativeRefreshSubscriptionJobStarted</p> <pre><code>${userEmail} started refresh of the ${subscriptionDisplayName} Azure subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AzureNativeRefreshSubscriptionJobStartFailed</p> <pre><code>${userEmail} failed to start refresh of the ${subscriptionDisplayName} Azure subscription. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AzureNativeRefreshSubscriptionQueued</p> <pre><code>Queued ${maintenanceType} refresh of the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>AzureNativeRefreshSubscriptionStarted</p> <pre><code>Started ${maintenanceType} refresh of the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeRefreshSubscriptionSucceeded</p> <pre><code>Successfully finished ${maintenanceType} refresh of the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#blobstore","title":"blobstore","text":"<p>CyberEventLockdownUpdateFailed</p> <pre><code>${userName} failed to ${action} Cyber Event Lockdown for ${clusterName} (${clusterUuid}). ${supportMessage}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>CyberEventLockdownUpdateSucceeded</p> <pre><code>${userName} has ${action}d Cyber Event Lockdown for ${clusterName} (${clusterUuid}). ${supportMessage}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#cassandra_source","title":"cassandra_source","text":"<p>AddCassandraSourceFailure</p> <pre><code>${username} failed to add the Cassandra source '${sourceName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>AddCassandraSourceStarted</p> <pre><code>${username} started adding the Cassandra source '${sourceName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteCassandraSourceFailure</p> <pre><code>${username} failed to delete the Cassandra source '${sourceName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteCassandraSourceStarted</p> <pre><code>${username} started deleting the Cassandra source '${sourceName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>EditCassandraSourceFailure</p> <pre><code>${username} failed to modify the Cassandra source '${sourceName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>EditCassandraSourceStarted</p> <pre><code>${username} modified the Cassandra source '${sourceName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#ccprovision","title":"ccprovision","text":"<p>ClusterCreateFailed</p> <pre><code>${userEmail} was unable to create Rubrik Cloud Cluster ${clusterName}, ${clusterUuid}, ${errorMessage}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ClusterCreateRunning</p> <pre><code>${userEmail} started the creation of Rubrik Cloud Cluster ${clusterName}, ${clusterUuid}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ClusterCreateSuccess</p> <pre><code>${userEmail} successfully created Rubrik Cloud Cluster ${clusterName}, ${clusterUuid}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ClusterCreateWarning</p> <pre><code>${userEmail} is creating Rubrik Cloud Cluster ${clusterName}, ${clusterUuid}, with a warning message, ${warning}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessYes</p> <p>ClusterRecoveryFailed</p> <pre><code>${userEmail} was unable to recover Rubrik Cloud Cluster ${clusterName}, ${clusterUuid}, ${errorMessage}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ClusterRecoveryRunning</p> <pre><code>${userEmail} started the recovery of Rubrik Cloud Cluster ${clusterName}, ${clusterUuid}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ClusterRecoverySuccess</p> <pre><code>${userEmail} successfully recovered Rubrik Cloud Cluster ${clusterName}, ${clusterUuid}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#cdm_rbac_migration","title":"cdm_rbac_migration","text":"<p>FetchCDMRBACConfigJobFailed</p> <pre><code>Failed to fetch the Rubrik CDM RBAC configuration from ${clusterName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>FetchCDMRBACConfigJobStarted</p> <pre><code>Started the job to fetch the Rubrik CDM RBAC configuration from ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>FetchCDMRBACConfigJobSucceeded</p> <pre><code>Successfully fetched the Rubrik CDM RBAC configuration from ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>GenerateCDMRBACMigrationSummaryJobFailed</p> <pre><code>Failed to generate the Rubrik CDM RBAC migration summary from ${clusterName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>GenerateCDMRBACMigrationSummaryJobStarted</p> <pre><code>Started the job to generate the Rubrik CDM RBAC migration summary from ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>GenerateCDMRBACMigrationSummaryJobSucceeded</p> <pre><code>Successfully generated the Rubrik CDM RBAC migration summary from ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>MigrateCDMRBACConfigJobFailed</p> <pre><code>Failed to migrate the Rubrik CDM RBAC configuration from ${clusterName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>MigrateCDMRBACConfigJobStarted</p> <pre><code>Started the job to migrate the Rubrik CDM RBAC configuration from ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>MigrateCDMRBACConfigJobSucceeded</p> <pre><code>Successfully migrated the Rubrik CDM RBAC configuration from ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#cdm_remove_cluster","title":"cdm_remove_cluster","text":"<p>ClusterDeleteCompleted</p> <pre><code>Cluster data delete completed for cluster with uuid ${clusterUUID}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ClusterDeleteQueued</p> <pre><code>Cluster disconnect succeeded. Cluster delete queued for cluster with uuid ${clusterUUID}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ClusterDeleteStarted</p> <pre><code>Cluster data delete started for cluster with uuid ${clusterUUID}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>ClusterDisconnectFailed</p> <pre><code>Cluster disconnect failed for cluster with uuid ${clusterUUID}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ClusterDisconnectStarted</p> <pre><code>Cluster disconnect started for cluster with uuid ${clusterUUID}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#certificate_expiry","title":"certificate_expiry","text":"<p>CertificateExpiringSoonInUse</p> <pre><code>Certificate '${certificateName}' is expiring within the next ${dayCount} day(s).  This certificate is currently being used for the following service providers: ${serviceProviders}. Import a new certificate and reconfigure each service to use your new certificate.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>CertificateExpiringSoonNotInUse</p> <pre><code>Certificate '${certificateName}' is expiring within the next ${dayCount} day(s).\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>CertificateExpiringTodayInUse</p> <pre><code>Certificate '${certificateName}' is expiring today.  This certificate is currently being used for the following service providers: ${serviceProviders}. Import a new certificate and reconfigure each service to use your new certificate.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskSuccessNo</p> <p>CertificateExpiringTodayNotInUse</p> <pre><code>Certificate '${certificateName}' is expiring today. Connections to service providers using this certificate will fail.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#certificate_management","title":"certificate_management","text":"<p>DeleteCdmCertificateFailure</p> <pre><code>${ActorSubjectName} was unable to delete the certificate '${certName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteCdmCertificateSuccess</p> <pre><code>${ActorSubjectName} deleted the certificate '${certName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteCertificate</p> <pre><code>${ActorSubjectName} deleted the certificate '${certName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ImportCdmCertificateFailure</p> <pre><code>${ActorSubjectName} was unable to import the certificate '${certName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ImportCdmCertificateSuccess</p> <pre><code>${ActorSubjectName} imported the certificate '${certName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ImportCdmCertificateWithTrustSuccess</p> <pre><code>${ActorSubjectName} imported the certificate '${certName}' to the cluster trust store.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ImportCertificate</p> <pre><code>${ActorSubjectName} imported the certificate '${certName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ImportCSR</p> <pre><code>${ActorSubjectName} created the CSR '${csrName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateCdmCertificateFailure</p> <pre><code>${ActorSubjectName} was unable to update the certificate '${certName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateCdmCertificateSuccess</p> <pre><code>${ActorSubjectName} updated the certificate '${certName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateCertificate</p> <pre><code>${ActorSubjectName} updated the certificate '${certName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#cloudaccounts","title":"cloudaccounts","text":"<p>AwsAccountAdditionFailed</p> <pre><code>${userEmail} failed to initiate addition of ${feature} for AWS Account ${accountName} with ID ${nativeId}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AwsAccountAdditionSucceeded</p> <pre><code>${userEmail} initiated addition of ${feature} for AWS Account ${accountName} with ID ${nativeId}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AwsAccountDeletionFailed</p> <pre><code>${userEmail} failed to initiate deletion of ${feature} for AWS Account ${accountName} with ID ${nativeId}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AwsAccountDeletionSucceeded</p> <pre><code>${userEmail} initiated deletion of ${feature} for AWS Account ${accountName} with ID ${nativeId}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AwsAccountUpdateFailed</p> <pre><code>${userEmail} failed to update AWS account ${accountName} with ID ${nativeId} for feature ${feature}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AwsAccountUpdateSucceeded</p> <pre><code>${userEmail} updated AWS account ${accountName} with ID ${nativeId} for feature ${feature}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AwsAccountUpgradeFailed</p> <pre><code>${userEmail} failed to intitate upgrade of AWS account ${accountName} with ID ${nativeId} for feature ${feature}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AwsAccountUpgradeSucceeded</p> <pre><code>${userEmail} initiated upgrade of AWS Account ${accountName} with ID ${nativeId} for feature ${feature}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AwsCloudAccountAdditionFailed</p> <pre><code>Failed to add AWS cloud account ${accountName} (${nativeId}) for feature ${feature}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AwsCloudAccountAdditionSucceeded</p> <pre><code>Successfully added AWS cloud account ${accountName} (${nativeId}) for feature ${feature}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AwsCloudAccountDeletionFailed</p> <pre><code>Failed to delete AWS cloud account ${accountName} (${nativeId}) for feature ${feature}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AwsCloudAccountDeletionSucceeded</p> <pre><code>Successfully deleted AWS cloud account ${accountName} (${nativeId}) for feature ${feature}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AwsCloudAccountDisableFeatureJobFailed</p> <pre><code>Failed to disable ${feature} of AWS account ${awsAccountDisplayName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AwsCloudAccountDisableFeatureJobForProtectionStarted</p> <pre><code>Started to disable ${feature} of AWS account ${awsAccountDisplayName}. Snapshots from AWS will ${deleteSnapshotsMsg}be deleted.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsCloudAccountDisableFeatureJobSucceeded</p> <pre><code>Successfully disabled ${feature} of AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AwsCloudAccountDisconnect</p> <pre><code>Disconnected AWS cloud account ${accountName} (${nativeId}) for feature ${feature}. Reason: The CloudFormation stack for the cross-account role has been deleted.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalSuccessNo</p> <p>AwsCloudAccountMissingPermissions</p> <pre><code>The Account ${name} (${nativeId}) requires additional permissions for a recent enhancement with ${feature}. Navigate to AWS accounts under Remote Settings and upgrade permissions to reconnect account.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p> <p>AwsCloudAccountUpdateFailed</p> <pre><code>Failed to ${action} AWS cloud account ${accountName} (${nativeId}) for feature ${feature}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AwsCloudAccountUpdateSucceeded</p> <pre><code>Successfully ${action} AWS cloud account ${accountName} (${nativeId}) for feature ${feature}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AwsOutpostAccountAdditionFailed</p> <pre><code>${userEmail} failed to initiate the addition of Laminar AWS Outpost Account with ID ${nativeId}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AwsOutpostAccountAdditionFailed</p> <pre><code>Failed to add the AWS Outpost account (${nativeId}) for Laminar. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AwsOutpostAccountAdditionSucceeded</p> <pre><code>${userEmail} initiated the addition of Laminar AWS Outpost Account with ID ${nativeId}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AwsOutpostAccountAdditionSucceeded</p> <pre><code>Successfully added the Laminar AWS Outpost account (${nativeId}).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AwsOutpostAccountUpdateFailed</p> <pre><code>${userEmail} failed to update the AWS Outpost account with ID ${nativeId} for Laminar.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AwsOutpostAccountUpdateFailed</p> <pre><code>Failed to update the AWS Outpost account (${nativeId}) for Laminar. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AwsOutpostAccountUpdateSucceeded</p> <pre><code>${userEmail} updated AWS Outpost account with ID ${nativeId} for Laminar.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AwsOutpostAccountUpdateSucceeded</p> <pre><code>Successfully updated the AWS Outpost account (${nativeId}) for Laminar.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AzureCloudAccountAdditionFailed</p> <pre><code>Failed to add Azure Subscription ${subscriptionName} with ID ${nativeId} for feature ${feature}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureCloudAccountAdditionSucceeded</p> <pre><code>Successfully added Azure Subscription ${subscriptionName} with ID ${nativeId} for feature ${feature}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AzureCloudAccountDeletionFailed</p> <pre><code>Failed to delete permissions of the Azure Subscription ${subscriptionName} with ID ${nativeId} for feature ${feature}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureCloudAccountDeletionSucceeded</p> <pre><code>Successfully deleted permissions of the Azure Subscription ${subscriptionName} with ID ${nativeId} for feature ${feature}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AzureCloudAccountDisconnected</p> <pre><code>The Subscription ${subscriptionName} (${nativeId}) was disconnected because the Azure Active Directory application created for Rubrik was deleted. Under Remote Settings, open Azure Subscriptions and upgrade permissions to reconnect Subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureCloudAccountMissingPermissions</p> <pre><code>The Subscription ${subscriptionName} (${nativeId}) requires additional permissions for a recent enhancement with ${feature}. Navigate to Azure Subscriptions under Remote Settings and upgrade permissions to reconnect Subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p> <p>AzureCloudAccountUpdateNameFailed</p> <pre><code>Failed to update name of the Azure Subscription with ID ${nativeId} to ${name}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureCloudAccountUpdateNameSucceeded</p> <pre><code>Successfully updated name of the Azure Subscription with ID ${nativeId} to ${name}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AzureCloudAccountUpdateRegionsFailed</p> <pre><code>Failed to update regions in the Azure Subscription ${subscriptionName} with ID ${nativeId} for feature ${feature}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureCloudAccountUpdateRegionsSucceeded</p> <pre><code>Successfully updated regions in the Azure Subscription ${subscriptionName} with ID ${nativeId} for feature ${feature}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AzureCloudAccountUpgradeFailed</p> <pre><code>Failed to update permissions of the Azure Subscription ${subscriptionName} with ID ${nativeId} for feature ${feature}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureCloudAccountUpgradeSucceeded</p> <pre><code>Successfully updated permissions of the Azure Subscription ${subscriptionName} with ID ${nativeId} for feature ${feature}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AzureSubscriptionAdditionFailed</p> <pre><code>${userEmail} failed to add Azure Subscription ${subscriptionName} with ID ${nativeId} for feature ${feature}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AzureSubscriptionAdditionSucceeded</p> <pre><code>${userEmail} added Azure Subscription ${subscriptionName} with ID ${nativeId} for feature ${feature}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AzureSubscriptionDeletionFailed</p> <pre><code>${userEmail} failed to delete Azure Subscription ${subscriptionName} with ID ${nativeId} for feature ${feature}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AzureSubscriptionDeletionSucceeded</p> <pre><code>${userEmail} deleted Azure Subscription ${subscriptionName} with ID ${nativeId} for feature ${feature}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AzureSubscriptionUpdateFailed</p> <pre><code>${userEmail} failed to update Azure Subscription ${subscriptionName} with ID ${nativeId} for feature ${feature}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AzureSubscriptionUpdateSucceeded</p> <pre><code>${userEmail} updated Azure Subscription ${subscriptionName} with ID ${nativeId} for feature ${feature}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AzureSubscriptionUpgradeFailed</p> <pre><code>${userEmail} failed to upgrade Azure Subscription ${subscriptionName} with ID ${nativeId} for feature ${feature}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AzureSubscriptionUpgradeSucceeded</p> <pre><code>${userEmail} upgraded Azure Subscription ${subscriptionName} with ID ${nativeId} for feature ${feature}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CloudAccountDisableFeatureJobFailed</p> <pre><code>Failed to disable ${feature} of ${cloudProvider} ${accountTerminology} ${cloudAccountDisplayName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>CloudAccountDisableFeatureJobForProtectionStarted</p> <pre><code>Started to disable ${feature} of ${cloudProvider} ${accountTerminology} ${cloudAccountDisplayName}. ${deleteSnapshotsMsg}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudAccountDisableFeatureJobSucceeded</p> <pre><code>Successfully disabled ${feature} of ${cloudProvider} ${accountTerminology} ${cloudAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CloudAccountElevatedPrivilegesAdded</p> <pre><code>${userEmail} initiated a privilege elevation session for tenant - ${tenantDomain}, using OAuth.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CloudAccountElevatedPrivilegesRemoved</p> <pre><code>Elevated privileges for user ${userEmail} to ${tenantDomain} revoked.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CloudaccountsAwsExocomputeConfigAddFailed</p> <pre><code>${userEmail} failed to add Exocompute settings for the ${region} region of the ${accountName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>CloudaccountsAwsExocomputeConfigAddSucceeded</p> <pre><code>${userEmail} successfully added Exocompute settings for the ${region} region of the ${accountName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CloudaccountsAwsExocomputeConfigDeleteFailed</p> <pre><code>${userEmail} failed to delete Exocompute settings for the ${region} region for the ${accountName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>CloudaccountsAwsExocomputeConfigDeleteSucceeded</p> <pre><code>${userEmail} successfully deleted Exocompute settings for the ${region} region of the ${accountName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CloudaccountsAzureExocomputeConfigAddFailed</p> <pre><code>${userEmail} failed to add Exocompute settings for the ${region} region of the Azure Subscription ${subscriptionName} with ID ${nativeID}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>CloudaccountsAzureExocomputeConfigAddSucceeded</p> <pre><code>${userEmail} successfully added Exocompute settings for the ${region} region of the Azure Subscription ${subscriptionName} with ID ${nativeID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CloudaccountsAzureExocomputeConfigDeleteFailed</p> <pre><code>${userEmail} failed to delete Exocompute settings for the ${region} region for the Azure Subscription ${subscriptionName} with ID ${nativeID}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>CloudaccountsAzureExocomputeConfigDeleteSucceeded</p> <pre><code>${userEmail} successfully deleted Exocompute settings for the ${region} region of the Azure Subscription ${subscriptionName} with ID ${nativeID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CloudaccountsDisableFeatureJobFailed</p> <pre><code>${userEmail} failed to start disable of ${feature} of ${cloudProvider} ${accountTerminology} ${cloudAccountDisplayName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>CloudaccountsDisableFeatureJobForAwsProtectionStarted</p> <pre><code>${userEmail} started to disable ${feature} of AWS account ${awsAccountDisplayName}. ${featureSnapshots} from AWS will ${deleteSnapshotsMsg} be deleted.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CloudaccountsDisableFeatureJobForAwsStartFailed</p> <pre><code>${userEmail} failed to start disable of ${feature} of AWS account ${awsAccountDisplayName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>CloudaccountsDisableFeatureJobStarted</p> <pre><code>${userEmail} started to disable ${feature} of ${cloudProvider} ${accountTerminology} ${cloudAccountDisplayName}. ${deleteSnapshotsMsg}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>GcpCloudAccountAdditionFailed</p> <pre><code>Failed to add GCP Project ${name} with ID ${nativeId} for feature ${feature}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>GcpCloudAccountAdditionSucceeded</p> <pre><code>Successfully added GCP Project ${name} with ID ${nativeId} for feature ${feature}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>GcpCloudAccountDeletionFailed</p> <pre><code>Failed to delete permissions of the GCP Project ${name} with ID ${nativeId} for feature ${feature}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>GcpCloudAccountDeletionSucceeded</p> <pre><code>Successfully deleted permissions of the GCP Project ${name} with ID ${nativeId} for feature ${feature}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>GcpCloudAccountMissingPermissions</p> <pre><code>The Project ${name} (${nativeId}) requires additional permissions for a recent enhancement with ${feature}. Navigate to GCP Projects under Remote Settings and upgrade permissions to reconnect Project.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p> <p>GcpCloudAccountUpgradeFailed</p> <pre><code>Failed to update permissions of the GCP Project ${name} with ID ${nativeId} for feature ${feature}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>GcpCloudAccountUpgradeSucceeded</p> <pre><code>Successfully updated permissions of the GCP Project ${name} with ID ${nativeId} for feature ${feature}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>GcpProjectOperationFailed</p> <pre><code>${userEmail} failed to ${operation} GCP Project ${name} with ID ${nativeId} for feature ${feature}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>GcpProjectOperationSucceeded</p> <pre><code>${userEmail} ${operation} GCP Project ${name} with ID ${nativeId} for feature ${feature}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#cloudnative","title":"cloudnative","text":"<p>CentralExocomputeShareSnapshotsFailed</p> <pre><code>Failed to share snapshots with the mapped Exocompute account  ${exocomputeAccountName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>CentralExocomputeShareSnapshotsStarted</p> <pre><code>Sharing snapshots with the mapped Exocompute account  ${exocomputeAccountName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CentralExocomputeShareSnapshotsSucceeded</p> <pre><code>Successfully shared snapshots with the mapped Exocompute account  ${exocomputeAccountName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CentralExocomputeUnShareSnapshotsFailed</p> <pre><code>Failed to unshare snapshots from the mapped Exocompute account  ${exocomputeAccountName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>CentralExocomputeUnShareSnapshotsStarted</p> <pre><code>Unsharing snapshots from the mapped Exocompute account  ${exocomputeAccountName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CentralExocomputeUnShareSnapshotsSucceeded</p> <pre><code>Successfully unshared snapshots from the mapped Exocompute account  ${exocomputeAccountName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeDBPrereqSetupJobCanceled</p> <pre><code>Canceled database backup set up on ${qualifiedSnappableDisplayText}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>CloudNativeDBPrereqSetupJobCanceling</p> <pre><code>Canceling database backup set up on ${qualifiedSnappableDisplayText}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>CloudNativeDBPrereqSetupJobFailed</p> <pre><code>Could not set up database backup on ${qualifiedSnappableDisplayText}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>CloudNativeDBPrereqSetupJobQueued</p> <pre><code>Queued database backup set up on ${qualifiedSnappableDisplayText}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>CloudNativeDBPrereqSetupJobSetupTaskFailed</p> <pre><code>Failed to prepare ${qualifiedSnappableDisplayText} for persistent database backup. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>CloudNativeDBPrereqSetupJobSetupTaskStarted</p> <pre><code>Started preparation for persistent database backup on ${qualifiedSnappableDisplayText}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CloudNativeDBPrereqSetupJobSetupTaskSucceeded</p> <pre><code>Successfully prepared ${qualifiedSnappableDisplayText} for persistent database backup.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeDBPrereqSetupJobStarted</p> <pre><code>${userEmail} started database backup set up on ${qualifiedSnappableDisplayText}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CloudNativeDBPrereqSetupJobStarted</p> <pre><code>Started database backup set up on ${qualifiedSnappableDisplayText}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeDBPrereqSetupJobStartFailed</p> <pre><code>${userEmail} failed to start database backup set up on ${qualifiedSnappableDisplayText}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>CloudNativeDBPrereqSetupJobSucceeded</p> <pre><code>Successfully set up database backup on ${qualifiedSnappableDisplayText}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CloudNativeRBAConnectivityJobCanceled</p> <pre><code>Canceled the connectivity check to the Rubrik Backup Service on ${qualifiedSnappableDisplayText}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>CloudNativeRBAConnectivityJobCanceling</p> <pre><code>Canceling the connectivity check to the Rubrik Backup Service on ${qualifiedSnappableDisplayText}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>CloudNativeRBAConnectivityJobFailed</p> <pre><code>Could not check the connection to the Rubrik Backup Service on ${qualifiedSnappableDisplayText}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>CloudNativeRBAConnectivityJobQueued</p> <pre><code>Queued the check for the connection to the Rubrik Backup Service on ${qualifiedSnappableDisplayText}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>CloudNativeRBAConnectivityJobStarted</p> <pre><code>Checking the connection to the Rubrik Backup Service on ${qualifiedSnappableDisplayText}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeRBAConnectivityJobStarted</p> <pre><code>For ${userEmail}, checking the connection to the Rubrik Backup Service on ${qualifiedSnappableDisplayText}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CloudNativeRBAConnectivityJobStartFailed</p> <pre><code>For user ${userEmail}, unable to initiate the check for the connection to the Rubrik Backup Service on ${qualifiedSnappableDisplayText}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>CloudNativeRBAConnectivityJobSucceeded</p> <pre><code>Successfully connected to the Rubrik Backup Service on ${qualifiedSnappableDisplayText}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CloudNativeRequestClusterTaskFailed</p> <pre><code>Failed to get an Exocompute cluster.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>CloudNativeRequestClusterTaskStarted</p> <pre><code>Waiting for an Exocompute cluster to be ready.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CloudNativeRequestClusterTaskSucceeded</p> <pre><code>Using the Exocompute cluster ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeRequestHostedClusterTaskFailed</p> <pre><code>Failed to get a Rubrik-hosted compute cluster.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>CloudNativeRequestHostedClusterTaskStarted</p> <pre><code>Waiting for a Rubrik-hosted compute cluster to be ready.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CloudNativeRequestHostedClusterTaskSucceeded</p> <pre><code>Using the Rubrik-hosted compute cluster.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>FoundLeakedResources</p> <pre><code>Rubrik Security Cloud encountered an issue while attempting to clean  up your resources. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>PCRExoBundleCompatibilityCheckFailed</p> <pre><code>RSC failed to validate your exo bundle version. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>TagRuleCreationFailed</p> <pre><code>${userEmail} failed to create tag-rule ${ruleName} for ${objectType}, Failure reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>TagRuleCreationSucceeded</p> <pre><code>${userEmail} successfully created tag-rule ${ruleName} for ${objectType}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TagRuleDeletionFailed</p> <pre><code>${userEmail} failed to delete tag-rule ${ruleName} for ${objectType}, Failure reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>TagRuleDeletionSucceeded</p> <pre><code>${userEmail} successfully deleted tag-rule ${ruleName} for ${objectType}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TagRuleModificationFailed</p> <pre><code>${userEmail} failed to modify tag-rule ${ruleName} for ${objectType}, Failure reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>TagRuleModificationSucceeded</p> <pre><code>${userEmail} successfully modified tag-rule ${ruleName} for ${objectType}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#cluster","title":"cluster","text":"<p>AddClusterNodes</p> <pre><code>${userName} started an add-node job for ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AddClusterNodesFailed</p> <pre><code>${userName} failed to start an add-node job for ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>AddClusterRoute</p> <pre><code>${userName} added route ${routeConfig} for Rubrik cluster ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AddClusterRouteFailed</p> <pre><code>${userName} was unable to add route ${routeConfig} for Rubrik cluster ${clusterName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ConfigureVlan</p> <pre><code>${userName} added VLAN with ID ${vlanId} to ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ConfigureVlanFailed</p> <pre><code>${userName} failed to add VLAN with ID ${vlanId} to ${clusterName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteClusterRoute</p> <pre><code>${userName} deleted route, [${routeConfig}], for Rubrik cluster, ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteClusterRouteFailed</p> <pre><code>${userName} was unable to delete a route, [${routeConfig}], for Rubrik cluster, ${clusterName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteProxyConfig</p> <pre><code>${userName} deleted the proxy settings for ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteProxyConfigFailed</p> <pre><code>${userName} failed to delete the proxy settings for ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteVlans</p> <pre><code>${userName} deleted VLAN(s) with ID ${vlanIds} for ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteVlansFailed</p> <pre><code>${userName} failed to delete VLAN(s) with ID ${vlanIds} for ${clusterName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>FindBadDisk</p> <pre><code>${userName} successfully ran find bad disk on ${nodeId} for ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>FindBadDiskFailed</p> <pre><code>${userName} failed to find bad disk on ${nodeId} for ${clusterName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>GenerateClusterRegistrationToken</p> <pre><code>${userName} generated registration token for cluster ${clusterUUID} with nodes ${nodeIDs} and managed by polaris set to ${managedByPolaris}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>GenerateClusterRegistrationTokenFailure</p> <pre><code>${userName} failed to generate registration token for cluster ${clusterUUID} with nodes ${nodeIDs} and managed by polaris set to ${managedByPolaris}, reason ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ModifyIpmi</p> <pre><code>${userName} successfully modified IPMI settings for ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ModifyIpmiFailed</p> <pre><code>${userName} failed to modify IPMI settings for ${clusterName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>PauseClusterAlerts</p> <pre><code>${userName} paused alerts for Rubrik cluster ${clusterName}, UUID: ${clusterUUID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RemoveCDMClusterStarted</p> <pre><code>${userName} started removal of Rubrik Cluster ${clusterUUID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RemoveClusterNodes</p> <pre><code>${userName} triggered removal of nodes: ${nodeIDs} on ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RemoveDisk</p> <pre><code>${userName} successfully removed disk ${diskId} for ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RemoveDiskFailed</p> <pre><code>${userName} failed to remove disk ${diskId} for ${clusterName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>RemoveNodeForReplacement</p> <pre><code>${userName} triggered removal of node: ${nodeID} for replacement, on ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ReplaceClusterNode</p> <pre><code>${userName} triggered replacement of node: ${nodeID} on ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ResizeDisk</p> <pre><code>${userName} successfully resized disk ${diskId} for ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ResizeDiskFailed</p> <pre><code>${userName} failed to resize disk ${diskId} for ${clusterName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>SetClusterDnsAndSearchDomains</p> <pre><code>${userName} updated the DNS servers and search domains for ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SetClusterDnsAndSearchDomainsFailed</p> <pre><code>${userName} failed to update the DNS server or search domains for ${clusterName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>SetupDisk</p> <pre><code>${userName} successfully set up disk ${diskId} for ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SetupDiskFailed</p> <pre><code>${userName} failed to set up disk ${diskId} for ${clusterName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UnpauseClusterAlerts</p> <pre><code>${userName} resumed alerts for Rubrik cluster ${clusterName}, UUID: ${clusterUUID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateAirGapStatusFailed</p> <pre><code>${userName} failed to modify the air-gap status for ${clusterName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateAirGapStatusSucceeded</p> <pre><code>${userName} modified the air-gap status for ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateClusterIps</p> <pre><code>${userName} updated the floating IPs for ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateClusterIpsFailed</p> <pre><code>${userName} failed to update the floating IPs for ${clusterName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateClusterNtpServers</p> <pre><code>${userName} updated the NTP servers for ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateClusterNtpServersFailed</p> <pre><code>${userName} failed to update the NTP servers for ${clusterName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateClusterSettings</p> <pre><code>${userName} successfully updated cluster settings for ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateClusterSettingsFailed</p> <pre><code>${userName} failed to update cluster settings for ${clusterName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateProxyConfig</p> <pre><code>${userName} updated the proxy settings for ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateProxyConfigFailed</p> <pre><code>${userName} failed to update the proxy settings for ${clusterName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateRegisteredMode</p> <pre><code>${userName} successfully updated the RSC managed mode for ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateRegisteredModeFailed</p> <pre><code>${userName} was unable to update the RSC managed mode for ${clusterName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateVlan</p> <pre><code>${userName} updated VLAN with ID ${vlanId} for Rubrik cluster ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateVlanFailed</p> <pre><code>${userName} was unable to update VLAN with ID ${vlanId} for Rubrik cluster ${clusterName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#cluster_pause_resume","title":"cluster_pause_resume","text":"<p>ClusterPauseResumeFailed</p> <pre><code>${userEmail} unable to ${action} protection on clusters:  ${clusterList}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>ClusterPauseResumeFailed</p> <pre><code>Unable to ${action} protection on clusters: ${clusterList}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ClusterPauseResumeSucceeded</p> <pre><code>${userEmail} has successfully ${action} protection on clusters:  ${clusterList}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ClusterPauseResumeSucceeded</p> <pre><code>Successfully ${action} protection on clusters: ${clusterList}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#common","title":"common","text":"<p>PatchVmFailed</p> <pre><code>${username} failed to patch '${objType}' VM named '${vmName}' with ID '${vmID}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>PatchVmStarted</p> <pre><code>${username} started patching '${objType}' VM named '${vmName}' with ID '${vmID}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>VmRegisterAgentFailed</p> <pre><code>${username} failed to register agent on '${objType}' VM named '${vmName}' with ID '${vmID}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>VmRegisterAgentStarted</p> <pre><code>${username} started registering agent on '${objType}' VM named '${vmName}' with ID '${vmID}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#cross_account","title":"cross_account","text":"<p>CrossAccountMetadataSyncFailed</p> <pre><code>Failed to sync metadata from cross-account ${accountName}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#crossaccount","title":"crossaccount","text":"<p>CrossAccountPairCreation</p> <pre><code>${username} initiated connection of cross-account ${crossAccountFqdn}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CrossAccountPairDeletion</p> <pre><code>${username} initiated deletion of cross-account connection  for ${crossAccountFqdn}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CrossAccountPairRefresh</p> <pre><code>${username} initiated refresh of cross-account connection  for ${crossAccountFqdn}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#database","title":"database","text":"<p>ConfigureLogReportingProperties</p> <pre><code>${username} updated database log reporting properties on  cluster '${clusterName}' with ID '${clusterId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ConfigureLogReportingPropertiesFailure</p> <pre><code>${username} failed to update database log reporting properties on  cluster '${clusterName}' with ID '${clusterId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#db2","title":"db2","text":"<p>AddDb2InstanceFailure</p> <pre><code>${username} failed to add Db2 instance '${instanceName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>AddDb2InstanceStarted</p> <pre><code>${username} started adding Db2 instance '${instanceName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ConfigureDb2RestoreFailure</p> <pre><code>${username} failed to configure host IDs ${hostIds} for cross-host restore of Db2 database '${databaseName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ConfigureDb2RestoreStarted</p> <pre><code>${username} started configuring host IDs ${hostIds} for cross-host restore of Db2 database '${databaseName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteDb2DatabaseFailure</p> <pre><code>${username} failed to delete Db2 database '${databaseName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteDb2DatabaseStarted</p> <pre><code>${username} started deleting Db2 database '${databaseName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteDb2InstanceFailure</p> <pre><code>${username} failed to delete Db2 instance '${instanceName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteDb2InstanceStarted</p> <pre><code>${username} started deleting Db2 instance '${instanceName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DiscoverDb2InstanceFailure</p> <pre><code>${username} failed to refresh metadata for Db2 instance '${instanceName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DiscoverDb2InstanceStarted</p> <pre><code>${username} started refreshing metadata for Db2 instance '${instanceName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>EditDb2InstanceFailure</p> <pre><code>${username} failed to modify Db2 instance '${instanceName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>EditDb2InstanceStarted</p> <pre><code>${username} modified Db2 instance '${instanceName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>PatchDb2DatabaseFailure</p> <pre><code>${username} failed to patch metadata for Db2 database '${databaseName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>PatchDb2DatabaseStarted</p> <pre><code>${username} started patching metadata for Db2 database '${databaseName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RefreshDb2DatabaseFailure</p> <pre><code>${username} failed to refresh metadata for Db2 database '${databaseName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>RefreshDb2DatabaseStarted</p> <pre><code>${username} started refreshing metadata for Db2 database '${databaseName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#encryption_keys","title":"encryption_keys","text":"<p>ArchivalKeyRotationFailure</p> <pre><code>Key rotation on archival location ${locationName} has failed.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ArchivalKeyRotationInitiated</p> <pre><code>Key rotation on archival location ${locationName} is initiated.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ArchivalKeyRotationSuccess</p> <pre><code>Key rotation on archival location ${locationName} has succeeded.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ArchivalRekeyFailure</p> <pre><code>Rekey of ${rekeyJobType} on archival location ${locationName} has failed. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ArchivalRekeyInitiated</p> <pre><code>Rekey of ${rekeyJobType} on archival location ${locationName} is initiated.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ArchivalRekeySucceeded</p> <pre><code>The rekey of ${rekeyJobType} on archival location ${locationName} has been successfully completed.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ArchivalRekeySuccessOnCdm</p> <pre><code>Rekey of ${rekeyJobType} on archival location ${locationName} has succeeded on the CDM cluster.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ArchivalRekeyTaskFailure</p> <pre><code>Rekey of ${rekeyJobType} on archival location ${locationName} has failed. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#exchange","title":"exchange","text":"<p>UpdateExchangeDag</p> <pre><code>${username} updated Exchange Dag '${dagName}' with ID '${dagId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateExchangeDagFailed</p> <pre><code>${username} failed to update Exchange Dag '${dagName}' with ID '${dagId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#exocompute","title":"exocompute","text":"<p>PCRBundleApprovalSucceeded</p> <pre><code>${userName} successfully ${approvedOrRejected} bundle version ${bundleVersion}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>PCROnboardingSucceeded</p> <pre><code>${userName} successfully onboarded Private Container Registry ${registryURL}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#failover_cluster","title":"failover_cluster","text":"<p>AddFailoverClusterFailure</p> <pre><code>${username} failed to add Host Failover Cluster '${failoverClusterName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>AddFailoverClusterStarted</p> <pre><code>${username} started adding Host Failover Cluster '${failoverClusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteFailoverClusterFailure</p> <pre><code>${username} failed to delete Host Failover Cluster '${failoverClusterName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteFailoverClusterStarted</p> <pre><code>${username} started deleting Host Failover Cluster '${failoverClusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateFailoverClusterFailure</p> <pre><code>${username} failed to update Host Failover Cluster '${failoverClusterName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateFailoverClusterStarted</p> <pre><code>${username} updateed Host Failover Cluster '${failoverClusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#failover_cluster_app","title":"failover_cluster_app","text":"<p>AddFailoverClusterAppFailure</p> <pre><code>${username} failed to add Host Failover Cluster App '${failoverClusterAppName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>AddFailoverClusterAppStarted</p> <pre><code>${username} started adding Host Failover Cluster App '${failoverClusterAppName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteFailoverClusterAppFailure</p> <pre><code>${username} failed to delete Host Failover Cluster App '${failoverClusterAppName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteFailoverClusterAppStarted</p> <pre><code>${username} started deleting Host Failover Cluster App '${failoverClusterAppName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateFailoverClusterAppFailure</p> <pre><code>${username} failed to update Host Failover Cluster App '${failoverClusterAppName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateFailoverClusterAppStarted</p> <pre><code>${username} updateed Host Failover Cluster App '${failoverClusterAppName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#fileset","title":"fileset","text":"<p>CreateFileset</p> <pre><code>${username} created fileset '${filesetName} on ${parentObjectType} '${parentName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CreateFilesetFailure</p> <pre><code>${username} failed to create fileset '${filesetName}' on ${parentObjectType} '${parentName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>CreateFilesetTemplate</p> <pre><code>${username} created fileset '${filesetName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CreateFilesetTemplateFailed</p> <pre><code>${username} failed to create fileset '${filesetName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteFileset</p> <pre><code>${username} deleted fileset '${filesetName}' on ${parentObjectType} '${parentName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteFilesetFailure</p> <pre><code>${username} failed to delete fileset '${filesetName}' on ${parentObjectType} '${parentName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteFilesetTemplate</p> <pre><code>${username} deleted fileset '${filesetName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteFilesetTemplateFailed</p> <pre><code>${username} failed to delete fileset '${filesetName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateFilesetTemplate</p> <pre><code>${username} modified fileset '${filesetName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateFilesetTemplateFailed</p> <pre><code>${username} failed to modify fileset '${filesetName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#gcpnative","title":"gcpnative","text":"<p>DisableGCPNativeProjectArchiveSnapshotTaskFailed</p> <pre><code>Failed to delete snapshots in the ${projectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>DisableGCPNativeProjectArchiveSnapshotTaskStarted</p> <pre><code>Deleting snapshots in the ${projectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>DisableGCPNativeProjectArchiveSnapshotTaskSucceeded</p> <pre><code>Deleted snapshots in the ${projectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>DisableGCPNativeProjectJobCanceled</p> <pre><code>Canceled disable protection of the ${projectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>DisableGCPNativeProjectJobCanceling</p> <pre><code>Canceling disable protection of the ${projectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>DisableGCPNativeProjectJobFailed</p> <pre><code>Failed to disable protection of the ${projectDisplayName} project. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>DisableGCPNativeProjectJobStarted</p> <pre><code>Started to disable protection of the ${projectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>DisableGCPNativeProjectJobSucceeded</p> <pre><code>Successfully disabled protection of the ${projectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>GCPNativeDisableProjectJobStarted</p> <pre><code>${userEmail} started disabling protection of the ${projectDisplayName} GCP project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>GCPNativeDisableProjectJobStartFailed</p> <pre><code>${userEmail} failed to start disabling protection of the ${projectDisplayName} GCP project. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>GCPNativeRefreshProjectJobStarted</p> <pre><code>${userEmail} started refresh of GCP project ${gcpProjectDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>GCPNativeRefreshProjectJobStartFailed</p> <pre><code>${userEmail} failed to start refresh of GCP project ${gcpProjectDisplayName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>RefreshGCPNativeProjectJobCanceled</p> <pre><code>Canceled ${maintenanceType} refresh of the project ${gcpProjectDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>RefreshGCPNativeProjectJobCanceling</p> <pre><code>Canceling ${maintenanceType} refresh of the project ${gcpProjectDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>RefreshGCPNativeProjectJobFailed</p> <pre><code>Failed to refresh GCP project ${gcpProjectDisplayName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>RefreshGCPNativeProjectJobQueued</p> <pre><code>Queued ${maintenanceType} refresh of GCP project ${gcpProjectDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>RefreshGCPNativeProjectJobStarted</p> <pre><code>Started  ${maintenanceType} refresh of GCP project ${gcpProjectDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>RefreshGCPNativeProjectJobSucceeded</p> <pre><code>Successfully refreshed GCP project ${gcpProjectDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#health_monitor","title":"health_monitor","text":"<p>RunPolicies</p> <pre><code>${userName} successfully ran health monitor policies [${policyIds}] on nodes [${nodeIds}] for ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RunPoliciesFailed</p> <pre><code>${userName} failed to run health monitor policies [${policyIds}] on nodes [${nodeIds}] for ${clusterName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#host","title":"host","text":"<p>ChangeVFDOnHostFailure</p> <pre><code>${username} failed to ${operation} VFD on host '${hostName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ChangeVFDOnHostStarted</p> <pre><code>${username} started ${operation} VFD on host '${hostName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteHostFailure</p> <pre><code>${username} failed to delete host '${hostName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteHostStarted</p> <pre><code>${username} started deleting host '${hostName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>MakePrimaryHostFailed</p> <pre><code>${username} failed to configure cluster '${clusterName}' as primary for host '${hostName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>MakePrimaryHostStarted</p> <pre><code>${username} started configuring cluster '${clusterName}' as primary for host '${hostName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RefreshHostMetadataFailed</p> <pre><code>${username} failed to refresh metadata for host '${host}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>RefreshHostMetadataStarted</p> <pre><code>${username} started refreshing metadata for host '${host}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RegisteredHostSuccessfully</p> <pre><code>${username} registered host '${hostName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RegisterHostFailure</p> <pre><code>${username} failed to register host '${hostName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateHost</p> <pre><code>${username} modified host '${hostName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateHostCertificate</p> <pre><code>${username} modified certificate for host '${hostName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateHostCertificateFailed</p> <pre><code>${username} failed to modify certificate for host '${hostName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateHostFailed</p> <pre><code>${username} failed to modify host '${hostName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateRbaCredentialsFailure</p> <pre><code>${username} failed to update RBS credentials for host '${hostName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateRbaCredentialsSuccess</p> <pre><code>${username} updated RBS credentials for host '${hostName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#hyperv","title":"hyperv","text":"<p>AddHypervScvmmFailed</p> <pre><code>${username} failed to create Hyperv Scvmm '${hostName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>AddHypervScvmmStarted</p> <pre><code>${username} started creating Hyperv Scvmm '${hostName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteHypervScvmmFailed</p> <pre><code>${username} failed to delete Hyperv Scvmm '${hypervScvmm}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteHypervScvmmStarted</p> <pre><code>${username} started deleting Hyperv Scvmm '${hypervScvmm}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>EditHypervScvmmFailed</p> <pre><code>${username} failed to patch Hyperv Scvmm '${hypervScvmm}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>EditHypervScvmmStarted</p> <pre><code>${username} started patching Hyperv Scvmm '${hypervScvmm}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RefreshHypervScvmmFailed</p> <pre><code>${username} failed to refresh Hyperv Scvmm '${hypervScvmm}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>RefreshHypervScvmmStarted</p> <pre><code>${username} started refreshing Hyperv Scvmm '${hypervScvmm}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#k8s","title":"k8s","text":"<p>K8sAddKubernetesClusterFailure</p> <pre><code>${userName} was unable to add the Kubernetes cluster, ${kubernetesCluster}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>K8sAddKubernetesClusterSuccess</p> <pre><code>${userName} added the Kubernetes cluster, ${kubernetesCluster}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>K8sCreateProtectionSetFailure</p> <pre><code>${userName} was unable to create the Kubernetes protection set, ${kubernetesProtectionSet}, on Kubernetes cluster, ${kubernetesCluster}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>K8sCreateProtectionSetSuccess</p> <pre><code>${userName} created the Kubernetes protection set, ${kubernetesProtectionSet}, on Kubernetes cluster, ${kubernetesCluster}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>K8sDeleteKubernetesClusterFailure</p> <pre><code>${userName} was unable to initiate the deletion of Kubernetes cluster, ${kubernetesCluster}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>K8sDeleteKubernetesClusterSuccess</p> <pre><code>${userName} initiated the deletion of Kubernetes cluster, ${kubernetesCluster}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>K8sDeleteProtectionSetFailure</p> <pre><code>${userName} was unable to delete the Kubernetes protection set, ${kubernetesProtectionSet}, on Kubernetes cluster, ${kubernetesCluster}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>K8sDeleteProtectionSetSuccess</p> <pre><code>${userName} initiated the deletion of Kubernetes protection set, ${kubernetesProtectionSet}, on Kubernetes cluster, ${kubernetesCluster}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>K8sUpdateKubernetesClusterFailure</p> <pre><code>${userName} was unable to modify the ${updatedFields} of the Kubernetes cluster, ${kubernetesCluster}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>K8sUpdateKubernetesClusterSuccess</p> <pre><code>${userName} modified the ${updatedFields} of the Kubernetes cluster, ${kubernetesCluster}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>K8sUpdateProtectionSetFailure</p> <pre><code>${userName} was unable to modify the Kubernetes protection set, ${kubernetesProtectionSet}, on Kubernetes cluster, ${kubernetesCluster}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>K8sUpdateProtectionSetSuccess</p> <pre><code>${userName} modified the Kubernetes protection set, ${kubernetesProtectionSet}, on Kubernetes cluster, ${kubernetesCluster}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#kms_key_vault","title":"kms_key_vault","text":"<p>AddKMSKeyVault</p> <pre><code>${username} added KMS Key Vault ${keyVaultName} of type ${keyVaultType}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteKMSKeyVault</p> <pre><code>${username} deleted KMS Key Vault ${keyVaultName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>EditAzureKmsKeyVaultFailure</p> <pre><code>Failed to update the credentials for the KMS key vault ${kmsName}  on the Rubrik cluster ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>EditAzureKmsKeyVaultInitiated</p> <pre><code>Initiating the process to update the credentials for the KMS key vault ${kmsName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>EditAzureKmsKeyVaultSuccess</p> <pre><code>Successfully updated credentials for the KMS key vault ${kmsName}  on the Rubrik cluster ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>UpdateKMSKeyVault</p> <pre><code>${username} updated KMS Key Vault ${keyVaultName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateKMSKeyVaultFailure</p> <pre><code>Failed to update KMS key vault ${kmsName} of type ${kmsType}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureNo</p> <p>UpdateKMSKeyVaultSuccess</p> <pre><code>Successfully updated KMS key vault ${kmsName} of type ${kmsType}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#kupr","title":"kupr","text":"<p>KuprClusterRefreshCanceled</p> <pre><code>Canceled refreshing Kubernetes Cluster ${clusterName} with clusterID ${clusterUUID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>KuprClusterRefreshCanceling</p> <pre><code>Canceling refreshing Kubernetes Cluster ${clusterName} with clusterID ${clusterUUID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>KuprClusterRefreshCompleted</p> <pre><code>Successfully refreshed Kubernetes Cluster ${clusterName} with clusterID ${clusterUUID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>KuprClusterRefreshFailed</p> <pre><code>Refreshing Kubernetes Cluster ${clusterName} with clusterID ${clusterUUID} failed. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>KuprClusterRefreshStarted</p> <pre><code>Started refreshing Kubernetes Cluster ${clusterName} with clusterID ${clusterUUID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>KuprDeletingClusterStarted</p> <pre><code>${userName} deleted Kubernetes Cluster ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>KuprDeletingClusterStarted</p> <pre><code>${userName} deleted Kubernetes Cluster ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>KuprOnBoardingStarted</p> <pre><code>${userName} onboarded Kubernetes Cluster ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>KuprOnboardingStarted</p> <pre><code>${userName} onboarded Kubernetes Cluster ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#legalhold","title":"legalhold","text":"<p>ApplyLegalHoldFailure</p> <pre><code>${userEmail} on the Rubrik cluster named ${clusterName} unsuccessfully attempted to place a Legal Hold on the ${snapshotTimeDisplay} UTC snapshot of ${snappableName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ApplyLegalHoldSuccess</p> <pre><code>${userEmail} has successfully placed a Legal Hold on the ${snapshotTimeDisplay} UTC snapshot of ${snappableName} on the Rubrik cluster ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DissolveLegalHoldFailure</p> <pre><code>${userEmail} on the Rubrik cluster named ${clusterName} unsuccessfully attempted to remove a Legal Hold from the ${snapshotTimeDisplay} UTC snapshot of ${snappableName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DissolveLegalHoldSuccess</p> <pre><code>${userEmail} has successfully removed the Legal Hold from the ${snapshotTimeDisplay} UTC snapshot of ${snappableName} on the Rubrik cluster ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#managed_volume","title":"managed_volume","text":"<p>ConfigureManagedVolumeLogExportFailure</p> <pre><code>${username} failed to create a log export for Managed Volume: '${mvName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ConfigureManagedVolumeLogExportSuccess</p> <pre><code>${username} started the operation to create a log export for Managed Volume: '${mvName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>InternalResizeManagedVolume</p> <pre><code>${username} started the operation to resize managed volume for '${mv}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>InternalResizeManagedVolumeFailure</p> <pre><code>${username} failed to resize managed volume for '${mv}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>InternalUpdateManagedVolume</p> <pre><code>${username} updated the Managed Volume '${mv}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>InternalUpdateManagedVolumeFailure</p> <pre><code>${username} failed to update the Managed Volume '${mv}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>TakeManagedVolumeOnDemandSnapshot</p> <pre><code>${username} started the operation to create on demand snapshot for Managed Volume: '${mvName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TakeManagedVolumeOnDemandSnapshotFailed</p> <pre><code>${username} failed to create on demand snapshot for Managed Volume: '${mvName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>V1CreateManagedVolume</p> <pre><code>${username} started the operation to create the Managed Volume '${mv}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>V1CreateManagedVolumeFailure</p> <pre><code>${username} failed to create the Managed Volume '${mv}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>V1DeleteManagedVolume</p> <pre><code>${username} started the operation to delete the Managed Volume '${mv}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>V1DeleteManagedVolumeFailure</p> <pre><code>${username} failed to delete the Managed Volume '${mv}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#mongo","title":"mongo","text":"<p>AddCdmMongoSourceFailure</p> <pre><code>${username} unable to add MongoDB source '${sourceName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>AddCdmMongoSourceStarted</p> <pre><code>${username} started adding MongoDB source '${sourceName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteCdmMongoSourceFailure</p> <pre><code>${username} unable to delete MongoDB source '${sourceName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteCdmMongoSourceStarted</p> <pre><code>${username} started deleting MongoDB source '${sourceName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DiscoverCdmMongoSourceFailure</p> <pre><code>${username} unable to refresh metadata for MongoDB source '${sourceName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DiscoverCdmMongoSourceStarted</p> <pre><code>${username} started refreshing metadata for MongoDB source '${sourceName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>EditCdmMongoSourceFailure</p> <pre><code>${username} unable to edit MongoDB source '${sourceName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>EditCdmMongoSourceStarted</p> <pre><code>${username} modified MongoDB source '${sourceName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RecoverCdmMongoDatabasesAndCollectionsFailure</p> <pre><code>${username} unable to recover databases and collections to MongoDB source '${sourceName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>RecoverCdmMongoDatabasesAndCollectionsStarted</p> <pre><code>${username} started recovering databases and collections to MongoDB source '${sourceName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#mongo_source","title":"mongo_source","text":"<p>AddMongoSourceFailure</p> <pre><code>${username} failed to add the MongoDB source '${sourceName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>AddMongoSourceStarted</p> <pre><code>${username} started adding the MongoDB source '${sourceName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteMongoSourceFailure</p> <pre><code>${username} failed to delete the MongoDB source '${sourceName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteMongoSourceStarted</p> <pre><code>${username} started deleting the MongoDB source '${sourceName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>EditMongoSourceFailure</p> <pre><code>${username} failed to modify the MongoDB source '${sourceName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>EditMongoSourceStarted</p> <pre><code>${username} modified the MongoDB source '${sourceName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#mosaic_store","title":"mosaic_store","text":"<p>AddMosaicStoreFailure</p> <pre><code>${username} failed to add the NoSQL store '${storeName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>AddMosaicStoreStarted</p> <pre><code>${username} started the operation to add the NoSQL store '${storeName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteMosaicStoreFailure</p> <pre><code>${username} failed to delete the NoSQL store '${storeName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteMosaicStoreStarted</p> <pre><code>${username} started the operation to delete the NoSQL store '${storeName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>EditMosaicStoreeStarted</p> <pre><code>${username} modified the NoSQL store '${storeName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>EditMosaicStoreFailure</p> <pre><code>${username} failed to modify the NoSQL store '${storeName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#mssql","title":"mssql","text":"<p>UpdateDefaultDbPropertiesFailed</p> <pre><code>${username} failed to update default database properties for cluster '${clusterUuid}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateDefaultDbPropertiesSuccess</p> <pre><code>${username} successfully updated default database properties for cluster '${clusterUuid}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateMssqlAvailabilityGroup</p> <pre><code>${username} updated Microsoft SQL Server availability group '${availabilityGroupName}' with ID '${availabilityGroupId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateMssqlAvailabilityGroupFailed</p> <pre><code>${username} failed to update Microsoft SQL Server availability group '${availabilityGroupName}' with ID '${availabilityGroupId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateMssqlDatabase</p> <pre><code>${username} updated Mssql database '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateMssqlDatabaseFailed</p> <pre><code>${username} failed to update Mssql database '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateMssqlHost</p> <pre><code>${username} updated Microsoft SQL Server host '${hostName}' with ID '${hostId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateMssqlHostFailed</p> <pre><code>${username} failed to update Microsoft SQL Server host '${hostName}' with ID '${hostId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateMssqlInstance</p> <pre><code>${username} updated Microsoft SQL Server instance'${instanceName}' with ID '${instanceId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateMssqlInstanceFailed</p> <pre><code>${username} failed to update Microsoft SQL Server instance '${instanceName}' with ID '${instanceId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateMssqlLogShippingConfiguration</p> <pre><code>${username} updated log shipping configuration '${configId}' of Mssql database '${dbName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateMssqlLogShippingConfigurationFailed</p> <pre><code>${username} failed to update log shipping configuration '${configId}' of Mssql database '${dbName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateMssqlLogShippingConfigurationFailedV1</p> <pre><code>${username} failed to modify the log shipping configuration '${configId}'  for the Mssql database '${dbName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateMssqlLogShippingConfigurationV1</p> <pre><code>${username} modified the log shipping configuration '${configId}'  for the Mssql database '${dbName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateMssqlWindowsCluster</p> <pre><code>${username} updated Windows Cluster '${windowsClusterName}' with ID '${windowsClusterId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateMssqlWindowsClusterFailed</p> <pre><code>${username} failed to update Windows Cluster '${windowsClusterName}' with ID '${windowsClusterId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#nas","title":"nas","text":"<p>BulkCopyAutomigratableNasHosts</p> <pre><code>${username} Created RSC NAS System(s) from CDM NAS host(s). Migration modified the following objects Filesets    ${FilesetNames} Host Shares ${SharePaths} NAS Hosts   ${HostNames}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>BulkCopyAutomigratableNasHostsFailed</p> <pre><code>${username} Failed to create RSC NAS System(s) from CDM NAS host(s). Reason: ${reason}. Migration may have modified the following objects Filesets:    ${FilesetNames} Host Shares: ${SharePaths} NAS Hosts:   ${HostNames}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>BulkMigrateRelicShareFilesets</p> <pre><code>${username} Migrated relic CDM Share Fileset(s) to RSC NAS. Migration modified the following objects Filesets    ${FilesetNames} Host Shares ${SharePaths} NAS Hosts   ${HostNames}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>BulkMigrateRelicShareFilesetsFailed</p> <pre><code>${username} Failed to migrate relic CDM Share Fileset(s) to RSC NAS. Reason: ${reason}. Migration may have modified the following objects Filesets:    ${FilesetNames} Host Shares: ${SharePaths} NAS Hosts:   ${HostNames}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>MigrateLegacyNasHostFilesets</p> <pre><code>${username} Migrated CDM Share Fileset(s) to RSC NAS. Migration modified the following objects Filesets    ${FilesetNames} Host Shares ${SharePaths} NAS Hosts   ${HostNames}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>MigrateLegacyNasHostFilesetsFailed</p> <pre><code>${username} Failed to migrate CDM Share Fileset(s) to RSC NAS. Reason: ${reason}. Migration may have modified the following objects Filesets:    ${FilesetNames} Host Shares: ${SharePaths} NAS Hosts:   ${HostNames}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#networkthrottle","title":"networkthrottle","text":"<p>DisableNetworkThrottleFailed</p> <pre><code>${username} failed to disable ${resourceType} network throttle on cluster: ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DisableNetworkThrottleSucceeded</p> <pre><code>${username} disabled ${resourceType} network throttle on cluster: ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>EnableNetworkThrottleFailed</p> <pre><code>${username} enabled ${resourceType} network throttle on cluster: ${clusterName} for interface '${interfaceName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>EnableNetworkThrottleSucceeded</p> <pre><code>${username} enabled ${resourceType} network throttle on cluster: ${clusterName} for interface '${interfaceName}' with default throttle limit set to ${defaultThrottleLimit} Mbps.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#networkthrottlebypass","title":"networkthrottlebypass","text":"<p>DisableNetworkThrottleBypassFailed</p> <pre><code>${username} failed to disable replication network throttle bypass on cluster: ${clusterName}  for target cluster: ${targetClusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DisableNetworkThrottleBypassSucceeded</p> <pre><code>${username} disabled replication network throttle bypass on cluster: ${clusterName}  for target cluster: ${targetClusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>EnableNetworkThrottleBypassFailed</p> <pre><code>${username} failed to enable replication network throttle bypass on cluster: ${clusterName} for target cluster: ${targetClusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>EnableNetworkThrottleBypassSucceeded</p> <pre><code>${username} enabled replication network throttle bypass on cluster: ${clusterName} for target cluster: ${targetClusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#nutanix","title":"nutanix","text":"<p>CreateNutanixClusterFailed</p> <pre><code>${username} failed to create Nutanix cluster '${hostName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>CreateNutanixClusterStarted</p> <pre><code>${username} started creating Nutanix cluster '${hostName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CreateNutanixExportFailed</p> <pre><code>${username} failed to export snapshot '${snapshotID}' of snappable '${snappableName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>CreateNutanixExportStarted</p> <pre><code>${username} started exporting snapshot '${snapshotID}' of snappable '${snappableName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CreateNutanixPrismCentralFailed</p> <pre><code>${username} failed to create Nutanix Prism Central '${hostName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>CreateNutanixPrismCentralStarted</p> <pre><code>${username} started creating Nutanix Prism Central '${hostName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteNutanixClusterFailed</p> <pre><code>${username} failed to delete Nutanix cluster '${nutanixCluster}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteNutanixClusterStarted</p> <pre><code>${username} started deleting Nutanix cluster '${nutanixCluster}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteNutanixPrismCentralFailed</p> <pre><code>${username} failed to delete Nutanix Prism Central '${nutanixPrismCentral}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteNutanixPrismCentralStarted</p> <pre><code>${username} started deleting Nutanix Prism Central '${nutanixPrismCentral}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>PatchNutanixClusterFailed</p> <pre><code>${username} failed to patch Nutanix cluster '${nutanixCluster}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>PatchNutanixClusterStarted</p> <pre><code>${username} started patching Nutanix cluster '${nutanixCluster}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>PatchNutanixPrismCentralFailed</p> <pre><code>${username} failed to patch Nutanix Prism Central '${nutanixPrismCentral}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>PatchNutanixPrismCentralStarted</p> <pre><code>${username} started patching Nutanix Prism Central '${nutanixPrismCentral}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RefreshNutanixClusterFailed</p> <pre><code>${username} failed to refresh Nutanix cluster '${nutanixCluster}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>RefreshNutanixClusterStarted</p> <pre><code>${username} started refreshing Nutanix cluster '${nutanixCluster}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RefreshNutanixPrismCentralFailed</p> <pre><code>${username} failed to refresh Nutanix Prism Central '${nutanixPrismCentral}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>RefreshNutanixPrismCentralStarted</p> <pre><code>${username} started refreshing Nutanix Prism Central '${nutanixPrismCentral}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#o365","title":"o365","text":"<p>ExocomputeDeleteCanceled</p> <pre><code>Canceled deleting Azure resources in ${exocomputeName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>ExocomputeDeleteCanceling</p> <pre><code>Canceling deleting Azure resources in ${exocomputeName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>ExocomputeDeleteFailed</p> <pre><code>Failed to delete Azure resources in ${exocomputeName}. For more information on this error please visit https://support.rubrik.com/articles/How_To/000002821\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ExocomputeDeleteStarted</p> <pre><code>Started deleting Azure resources in ${exocomputeName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ExocomputeDeleteSucceeded</p> <pre><code>Successfully deleted Azure resources in ${exocomputeName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ExocomputeScaleSucceeded</p> <pre><code>Successfully scaled Azure AKS from ${oldCount} to ${newCount} nodes\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ExocomputeUpdateCanceled</p> <pre><code>Canceled updating Azure resources in ${exocomputeName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>ExocomputeUpdateCanceling</p> <pre><code>Canceling updating Azure resources in ${exocomputeName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>ExocomputeUpdateFailed</p> <pre><code>Failed to update Azure resources in ${exocomputeName}. For more information on this error please visit https://support.rubrik.com/articles/How_To/000002821\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ExocomputeUpdateStarted</p> <pre><code>Updating Azure resources in ${exocomputeName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ExocomputeUpdateSucceeded</p> <pre><code>Successfully updated Azure resources in ${exocomputeName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>M365ConfiguredGroupCreated</p> <pre><code>${userID} created a SharePoint/Teams Group '${name}' with wildcard  pattern '${wildcard}' and PDLs ${pdls}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>M365ConfiguredGroupDeleted</p> <pre><code>${userID} removed SharePoint/Teams Group '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>M365ConfiguredGroupModified</p> <pre><code>${userID} modified SharePoint/Teams Group '${name}' with wildcard  pattern '${wildcard}' and PDLs ${pdls} into SharePoint/Teams Group '${newName}' with wildcard pattern '${newWildcard}' and PDLs ${newPdls}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>M365GroupDeleted</p> <pre><code>${userID} removed ${groupType} '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>M365GroupModified</p> <pre><code>${userID} modified ${groupType} '${name}' with spec ${spec} into ${groupType} '${newName}' with spec ${newSpec}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>M36GroupCreated</p> <pre><code>${userID} created a ${groupType} '${name}' with spec  '${spec}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>O365DeleteOrgFailed</p> <pre><code>${userID} requested deletion of Microsoft 365 Subscription ${orgName}, but failed. Failure reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>O365DeleteOrgStarted</p> <pre><code>${userID} started deletion of Microsoft 365 Subscription ${orgName}. (Taskchain ID is ${taskchainID})\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#oracle","title":"oracle","text":"<p>DeleteAllOracleDatabaseSnapshots</p> <pre><code>${username} deleted all snapshots for Oracle database '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteAllOracleDatabaseSnapshotsFailed</p> <pre><code>${username} failed to delete all snapshots for Oracle database  '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DownloadArchivedOracleSnapshot</p> <pre><code>${username} downloaded archived snapshot '${snapshotId}' of Oracle database '${dbName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DownloadArchivedOracleSnapshotFailed</p> <pre><code>${username} failed to download archived snapshot '${snapshotId}' of Oracle database '${dbName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ExportOracleDatabase</p> <pre><code>${username} exported Oracle database '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ExportOracleDatabaseFailed</p> <pre><code>Failed to export Oracle database '${dbName}' with ID '${dbId}', initiated by ${username}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ExportOracleTablespace</p> <pre><code>${username} exported tablespace ${tablespaceName} of Oracle database '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ExportOracleTablespaceFailed</p> <pre><code>${username} failed to export tablespace ${tablespaceName} of Oracle database '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>InstantRecoverOracleSnapshot</p> <pre><code>${username} instant recovered Oracle database '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>InstantRecoverOracleSnapshotFailed</p> <pre><code>${username} failed to instant recover Oracle database '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>MountOracleDatabase</p> <pre><code>${username} live mounted Oracle database '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>MountOracleDatabaseFailed</p> <pre><code>${username} failed to live mount Oracle database '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>OraclePdbRestore</p> <pre><code>${username} restored the PDBs '${pdbNames}' to Oracle database '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>OraclePdbRestoreFailed</p> <pre><code>${username} failed to restore the PDBs '${pdbNames}' to Oracle database '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>OracleUnmount</p> <pre><code>${username} removed Oracle mount with ID '${mountId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>OracleUnmountFailed</p> <pre><code>${username} failed to remove Oracle mount with ID '${mountId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>RefreshOracleDatabase</p> <pre><code>${username} refreshed Oracle database '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RefreshOracleDatabaseFailed</p> <pre><code>${username} failed to refresh Oracle database '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>RestoreOracleLogs</p> <pre><code>${username} restored logs of Oracle database '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RestoreOracleLogsFailed</p> <pre><code>${username} failed to restore logs of Oracle database '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>TakeOnDemandOracleDatabaseSnapshot</p> <pre><code>${username} took an on-demand snapshot of Oracle  database '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TakeOnDemandOracleDatabaseSnapshotFailed</p> <pre><code>${username} failed to take an on-demand snapshot of Oracle  database '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>TakeOnDemandOracleLogSnapshot</p> <pre><code>${username} took an on-demand log snapshot of Oracle database  '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TakeOnDemandOracleLogSnapshotFailed</p> <pre><code>${username} failed to take an on-demand log snapshot of Oracle database '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateOracleDatabase</p> <pre><code>${username} updated Oracle database '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateOracleDatabaseFailed</p> <pre><code>${username} failed to update Oracle database '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateOracleDataGuardGroup</p> <pre><code>${username} updated Oracle Data Guard group '${dbName}' with ID  '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateOracleDataGuardGroupFailed</p> <pre><code>${username} failed to refresh Oracle Data Guard group '${dbName}'  with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateOracleHost</p> <pre><code>${username} updated Oracle host '${hostName}' with ID '${hostId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateOracleHostFailed</p> <pre><code>${username} failed to update Oracle host '${hostName}' with ID '${hostId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateOracleRac</p> <pre><code>${username} updated Oracle RAC '${racName}' with ID '${racId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateOracleRacFailed</p> <pre><code>${username} failed to update Oracle RAC '${racName}' with ID '${racId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ValidateOracleDatabaseBackups</p> <pre><code>${username} validated backups of Oracle database '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ValidateOracleDatabaseBackupsFailed</p> <pre><code>${username} failed to validate backups of Oracle database '${dbName}' with ID '${dbId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#org_config","title":"org_config","text":"<p>EnforceStricterPolicy</p> <pre><code>${admin} has enforced a stricter policy for tenant organizations.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>OrgQuotaCreated</p> <pre><code>${userEmail} has created a ${quotaType} quota for organization ${orgName} on cluster ${clusterName}. The defined quota limits are  (soft limit: ${currentSoftLimit}, hard limit: ${currentHardLimit}).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>OrgQuotaDeleted</p> <pre><code>${userEmail} has deleted the ${quotaType} quota for organization ${orgName}  on cluster ${clusterName}. Previously, the quota limits were  (soft limit: ${previousSoftLimit}, hard limit: ${previousHardLimit}).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>OrgQuotaUpdated</p> <pre><code>${userEmail} has updated the ${quotaType} quota for organization ${orgName} on cluster ${clusterName} from  (soft limit: ${previousSoftLimit}, hard limit: ${previousHardLimit}) to (soft limit: ${currentSoftLimit}, hard limit: ${currentHardLimit}).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UnenforceStricterPolicy</p> <pre><code>${admin} has relaxed the policy for tenant organizations.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#org_network","title":"org_network","text":"<p>CreateOrgNetwork</p> <pre><code>${userName} created org network ${orgNetworkName} in org ${orgName} for cluster ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CreateOrgNetworkFailed</p> <pre><code>${userName} failed to create org network ${orgNetworkName} in org ${orgName} for cluster ${clusterName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>DeleteEnvoyNgs</p> <pre><code>${userName} removed Envoy Ngs: [${envoyIds}] from org network: ${orgNetworkName} in organization ${orgName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteOrgNetwork</p> <pre><code>${userName} deleted org network ${orgNetworkName} in org ${orgName} for cluster ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteOrgNetworkFailed</p> <pre><code>${userName} failed to delete org network ${orgNetworkName} in org ${orgName} for cluster ${clusterName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>MigrateHostsToOrgNetwork</p> <pre><code>${userName} migrated ${total} hosts in the organization ${orgName}, RSC org network ${orgNetworkName}  for Rubrik cluster ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>MigrateHostsToOrgNetworkFailed</p> <pre><code>${userName} was unable to migrate hosts [${failedObjects}] in the organization ${orgName},    RSC org network ${orgNetworkName} for Rubrik cluster ${clusterName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>MigrateVcentersToOrgNetwork</p> <pre><code>${userName} migrated ${total} vCenters in organization ${orgName}, org network ${orgNetworkName}   for Rubrik cluster ${clusterName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>MigrateVcentersToOrgNetworkFailed</p> <pre><code>${userName} was unable to migrate vCenters [${failedObjects}] in organization ${orgName},  org network ${orgNetworkName} for Rubrik cluster ${clusterName} Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>SetLiveMountIps</p> <pre><code>${userName} assigned Live Mount IPs: [${liveMountIps}] to org network: ${orgNetworkName} in organization ${orgName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateOrgNetwork</p> <pre><code>${userName} updated organization network ${orgNetworkName} in organization ${orgName} for cluster ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateOrgNetworkFailed</p> <pre><code>${userName} failed to update organization network ${orgNetworkName} in organization ${orgName} for cluster ${clusterName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#postgres_db_cluster","title":"postgres_db_cluster","text":"<p>AddPostgresDbClusterFailure</p> <pre><code>${username} failed to add PostgreSQL database cluster '${dbClusterName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>AddPostgresDbClusterStarted</p> <pre><code>${username} started adding PostgreSQL database cluster '${dbClusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeletePostgresDbClusterFailure</p> <pre><code>${username} failed to delete PostgreSQL database cluster '${dbClusterName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeletePostgresDbClusterStarted</p> <pre><code>${username} started deleting PostgreSQL database cluster '${dbClusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>EditPostgresDbClusterFailure</p> <pre><code>${username} failed to modify PostgreSQL database cluster '${dbClusterName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>EditPostgresDbClusterStarted</p> <pre><code>${username} modified PostgreSQL database cluster '${dbClusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RefreshPostgresDbClusterMetadataFailed</p> <pre><code>${username} failed to refresh metadata for PostgreSQL database cluster '${dbClusterName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>RefreshPostgresDbClusterMetadataStarted</p> <pre><code>${username} started refreshing metadata for PostgreSQL database cluster '${dbClusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RestorePostgresDbClusterFailure</p> <pre><code>${username} unable to complete a restore of PostgreSQL database cluster '${dbClusterName} using snapshot with ID ${snapshotId}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>RestorePostgresDbClusterStarted</p> <pre><code>${username} initiated a restore using the snapshot with ID ${snapshotId} for the PostgreSQL database cluster '${dbClusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#radar","title":"radar","text":"<p>RadarEventsDisabled</p> <pre><code>Radar events have been disabled by ${user}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessYes</p> <p>RadarEventsDisabledForCluster</p> <pre><code>Radar events have been disabled for cluster ${clusterName} by ${user}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessYes</p> <p>RadarEventsDisabledForSnappable</p> <pre><code>Radar events have been disabled for protected object ${snappableName} on cluster ${clusterName} by ${user}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessYes</p> <p>RadarEventsEnabled</p> <pre><code>Radar events have been enabled by ${user}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RadarEventsEnabledForCluster</p> <pre><code>Radar events have been enabled for cluster ${clusterName} by ${user}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RadarEventsEnabledForSnappable</p> <pre><code>Radar events have been enabled for protected object ${snappableName} on cluster ${clusterName} by ${user}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#rcv","title":"rcv","text":"<p>RCVPEConnectionApprovalRequestApproved</p> <pre><code>${userEmail} successfully approved connection approval request for private  endpoint ${pe_id} to RCV archival location '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RCVPEConnectionApprovalRequestApproved</p> <pre><code>Pursuant to Rubrik policy, a connection approval request for private  endpoint '${pe_id}' to RCV archival location '${name}' has been  successfully approved.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>RCVPEConnectionApprovalRequestCreated</p> <pre><code>${userEmail} successfully created connection approval request for private  endpoint ${pe_id} to RCV archival location '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RCVPEConnectionApprovalRequestCreated</p> <pre><code>Pursuant to Rubrik policy, a connection approval request for private  endpoint '${pe_id}' to RCV archival location '${name}' has been  successfully created.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>RCVPEConnectionApprovalRequestExpired</p> <pre><code>Pursuant to Rubrik policy, a connection approval request for private  endpoint '${pe_id}' to RCV archival location '${name}' has been expired.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>RCVPEConnectionApprovalRequestRejected</p> <pre><code>${userEmail} successfully rejected connection approval request for private  endpoint ${pe_id} to RCV archival location '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>RCVPEConnectionApprovalRequestRejected</p> <pre><code>Pursuant to Rubrik policy, a connection approval request for private  endpoint '${pe_id}' to RCV archival location '${name}' has been rejected.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>RCVPEConnectionApprovalRequestRemoved</p> <pre><code>${userEmail} successfully removed connection approval request for private  endpoint ${pe_id} to RCV archival location '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RCVPEConnectionApprovalRequestRemoved</p> <pre><code>Pursuant to Rubrik policy, a connection approval request for private  endpoint '${pe_id}' to RCV archival location '${name}' has been removed.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>RCVPrivateEndpointApprovalFailed</p> <pre><code>Approval for Private Endpoint '${peId}' failed because of '${errMsg}'.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>RCVPublicAccessDisabled</p> <pre><code>${userEmail} successfully disabled public access for RCV archival location '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RCVPublicAccessDisabled</p> <pre><code>Pursuant to Rubrik policy, public access to RCV archival location  '${name}' has been successfully disabled.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#rekey","title":"rekey","text":"<p>RekeyMasterKey</p> <pre><code>${username} has initiated the rekeying of the master key for the archival location ${locationName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RekeyRootKey</p> <pre><code>${username} has initiated the rekeying of the root Key Encryption Key (KEK) for the archival location ${locationName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#replication","title":"replication","text":"<p>ReplicationLocationCancelImmediatelyPauseEnableSucceeded</p> <pre><code>${userEmail} successfully paused replication from cluster: ${sourceClusterName} to cluster: ${targetClusterName}. Replication from the specified cluster will be canceled immediately.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ReplicationLocationPauseDisableFailed</p> <pre><code>${userEmail} failed to resume replication from cluster: ${sourceClusterName} to cluster: ${targetClusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ReplicationLocationPauseDisableSucceeded</p> <pre><code>${userEmail} successfully resumed replication from cluster: ${sourceClusterName} to cluster: ${targetClusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ReplicationLocationPauseEnableFailed</p> <pre><code>${userEmail} failed to pause replication from cluster: ${sourceClusterName} to cluster: ${targetClusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ReplicationLocationPauseEnableSucceeded</p> <pre><code>${userEmail} successfully paused replication from cluster: ${sourceClusterName} to cluster: ${targetClusterName}. Replication from the specified cluster will be canceled after any currently running jobs finish.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ReplicationLocationSkipSnapshotsPauseDisableSucceeded</p> <pre><code>${userEmail} successfully resumed replication from cluster: ${sourceClusterName} to cluster: ${targetClusterName}. Replication will not include snapshots taken before and during the pause.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ReplicationPairCreationSucceeded</p> <pre><code>${userEmail} added Rubrik cluster: ${targetClusterName} as replication target to Rubrik cluster: ${sourceClusterName} using ${setupType} configuration.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ReplicationPairDeletionSucceeded</p> <pre><code>${userEmail} removed Rubrik cluster: ${targetClusterName} as replication target to Rubrik cluster: ${sourceClusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ReplicationTargetEditFailed</p> <pre><code>${userEmail} failed to modify replication target: ${targetClusterName} spec on source cluster: ${sourceClusterName} using ${setupType} configuration.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ReplicationTargetEditSucceeded</p> <pre><code>${userEmail} modified replication target: ${targetClusterName} spec on source cluster: ${sourceClusterName} using ${setupType} configuration.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#reports","title":"reports","text":"<p>ClusterReportMigrationOnDemandJobCanceled</p> <pre><code>Canceled migration of custom reports from ${clusterName} into RSC.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>ClusterReportMigrationOnDemandJobCanceling</p> <pre><code>Canceling migration of custom reports from ${clusterName} into RSC.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>ClusterReportMigrationOnDemandJobFailed</p> <pre><code>Failed to migrate all the custom reports from ${clusterName} into RSC.  Refer to the migration dashboard for report-level breakdown. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ClusterReportMigrationOnDemandJobQueued</p> <pre><code>Queued migration of custom reports from ${clusterName} into RSC.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>ClusterReportMigrationOnDemandJobStarted</p> <pre><code>Started migration of custom reports from ${clusterName} into RSC.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ClusterReportMigrationOnDemandJobSucceeded</p> <pre><code>Successfully migrated custom reports from ${clusterName} into RSC. Refer  to the migration dashboard for details of the migration.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>MigrateClusterReportsJobStarted</p> <pre><code>${userEmail} successfully started migration of custom reports of ${clusterName} into RSC.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>MigrateClusterReportsJobStartFailed</p> <pre><code>${userEmail} failed to start migration of custom reports of ${clusterName} into RSC. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#saasapps","title":"saasapps","text":"<p>SaasAppsOrgAuthenticated</p> <pre><code>${userID} authenticated ${orgURL} with user ${orgUser}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SaasAppsPendingAuthentication</p> <pre><code>Service is offline. Pending authentication for ${orgName} (${orgURL}) to resume protection.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#sap_hana_system","title":"sap_hana_system","text":"<p>AddSapHanaSystemFailure</p> <pre><code>${username} failed to add SAP HANA system '${systemName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>AddSapHanaSystemStarted</p> <pre><code>${username} started adding SAP HANA system '${systemName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteSapHanaSystemFailure</p> <pre><code>${username} failed to delete SAP HANA system '${systemName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteSapHanaSystemStarted</p> <pre><code>${username} started deleting SAP HANA system '${systemName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>EditSapHanaSystemFailure</p> <pre><code>${username} failed to modify SAP HANA system '${systemName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>EditSapHanaSystemStarted</p> <pre><code>${username} modified SAP HANA system '${systemName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RefreshSapHanaSystemMetadataFailed</p> <pre><code>${username} failed to refresh metadata for SAP HANA system '${systemName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>RefreshSapHanaSystemMetadataStarted</p> <pre><code>${username} started refreshing metadata for SAP HANA system '${systemName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#sessionmanagement","title":"sessionmanagement","text":"<p>ConcurrentSessionLimitExceeded</p> <pre><code>The session associated with ${userEmail} has been invalidated, as a new  login from ${source} for the same user, exceeded the maximum number of concurrent sessions allowed.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessYes</p> <p>SessionManagementSetConfiguration</p> <pre><code>${userEmail} updated ${config} from ${fromValue} to ${toValue}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#sla","title":"sla","text":"<p>DoNotProtectSLADomainAssignmentRollbackFailed</p> <pre><code>Failed to re-assign the existing SLA Domain ${slaName} to ${objectType}  ${objectName} on Rubrik cluster ${clusterUUID} while rolling back the Manage Protection operation. Retry the operation and SLA Domain assignment or re-assign the old SLA Domain.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>SLAAssignmentonRSCNativeObjectsFailed</p> <pre><code>Failed to assign SLA Domain: ${slaName} to objects: ${objects} on RSC. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>SLAAssignmentOnRSCNativeObjectsSucceed</p> <pre><code>Successfully assigned SLA Domain: ${slaName} to objects: ${objects} on RSC.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>SLADirectAssignmentForRetentionLockProcessed</p> <pre><code>Unable to apply the new SLA Domain because you  can only apply SLA Domains with settings that  are stricter than the current SLA Domain settings  to a Retention-locked object. Instead, the object  ${object} is now directly assigned the same SLA  Domain ${currentEffectiveSla}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>SLAMigrationArchivalLocation</p> <pre><code>SLA Domain has been configured with the archival location ${archivalLocationName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>SLAMigrationFailed</p> <pre><code>Failed to switch SLA Domain for ${slaName}. Error: ${errMsg}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>SLAMigrationNoObjectTypes</p> <pre><code>SLA Domain has been configured without any object types. Edit the SLA Domain manually to add object-specific configuration before using the SLA Domain to protect objects.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>SLAMigrationObjectTypes</p> <pre><code>SLA Domain has been configured with the following object types ${objectTypesStr}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>SLAMigrationRename</p> <pre><code>SLA Domain has been renamed to ${slaNewName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>SLAMigrationStarted</p> <pre><code>Started switching the SLA Domain ${slaName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>SLAMigrationStuck</p> <pre><code>Switching of SLA Domain ${slaName} is stuck. Error: ${errMsg}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>SLAMigrationSucceeded</p> <pre><code>Successfully switched the SLA Domain.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#smb_domain","title":"smb_domain","text":"<p>AddSmbDomainFailure</p> <pre><code>${username} failed to add SMB domain '${smbDomainName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>AddSmbDomainSuccess</p> <pre><code>${username} successfully added SMB domain '${smbDomainName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AuthenticateSmbDomainFailure</p> <pre><code>${username} failed to authenticate SMB domain '${smbDomainName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>AuthenticateSmbDomainSuccess</p> <pre><code>${username} successfully authenticate SMB domain '${smbDomainName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ChangeSmbSecurityConfigurationFailure</p> <pre><code>${username} failed to change SMB domain configuration of cluster '${clusterName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ChangeSmbSecurityConfigurationSuccess</p> <pre><code>${username} successfully changed SMB domain configuration of cluster '${clusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteSmbDomainFailure</p> <pre><code>${username} failed to delete SMB domain '${smbDomainName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteSmbDomainSuccess</p> <pre><code>${username} successfully deleted SMB domain '${smbDomainName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#snappables","title":"snappables","text":"<p>UnprotectObjectsTaskFailed</p> <pre><code>Failed to unprotect objects ${objectNames} as part of ${operation} operation. Any linking, unlinking or SLA Domain reassignment did not  occur due to this failure.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureNo</p> <p>UnprotectObjectsTaskStarted</p> <pre><code>Started unprotection of objects ${objectNames} as part of ${operation} operation.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>UnprotectObjectsTaskSucceeded</p> <pre><code>Successfully unprotected objects ${objectNames}. If the objects are still linked, you can either unlink them or assign a new SLA Domain through the \\\"Manage Protection\\\" workflow.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#sso","title":"sso","text":"<p>SSOAddConfiguration</p> <pre><code>${userEmail} configured SSO with Identity Provider ${entityID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SSOLoginFailure</p> <pre><code>SSO login failed. Reason: ${err_msg}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>SSORemoveConfiguration</p> <pre><code>${userEmail} disabled SSO through Identity Provider ${entityID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SSOUpdateSPCertificate</p> <pre><code>${userEmail} updated the SSO Service Provider ${certType} certificate with certificate named ${certName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#support_tunnel","title":"support_tunnel","text":"<p>SupportTunnelClosed</p> <pre><code>${username} closed a support tunnel for cluster '${cluster}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SupportTunnelCloseFailed</p> <pre><code>${username} failed to close the support tunnel for cluster '${cluster}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>SupportTunnelOpened</p> <pre><code>${username} opened a support tunnel for cluster '${cluster}' and set the timeout window to ${timeoutWindow} hours.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SupportTunnelOpenFailed</p> <pre><code>${username} failed to open a support tunnel for cluster '${cluster}' for ${timeoutWindow} hours. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#ticketingservice","title":"ticketingservice","text":"<p>TicketingPlatformConfigured</p> <pre><code>${userEmail} configured ${platformType} instance ${instanceURL}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TicketingPlatformDisconnected</p> <pre><code>${userEmail} disconnected ${platformType} instance ${instanceURL}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#tpr","title":"tpr","text":"<p>TprConfigEnable</p> <pre><code>${username} enabled Quorum Authorization.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TprConfigUpdate</p> <pre><code>${username} updated the Quorum Authorization configuration to Execution Timeout Hours: ${executionTimeoutHours}, Request Timeout Hours: ${requestTimeoutHours}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TprPolicyCreated</p> <pre><code>${username} created the Quorum Authorization policy ${policyName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TprPolicyDeleted</p> <pre><code>${username} deleted the Quorum Authorization policy ${policyName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TprPolicyUpdated</p> <pre><code>${username} updated the Quorum Authorization policy ${policyName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#vcd","title":"vcd","text":"<p>AddVcdStarted</p> <pre><code>${username} started a job to add VCD '${vcdAddress}'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AddVcdStartFailed</p> <pre><code>${username} failed to start a job to add vCenter '${vcdAddress}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteVcdStarted</p> <pre><code>${username} started a job to delete VCD '${vcdAddress}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteVcdStartFailed</p> <pre><code>${username} failed to start a job to delete VCD '${vcdAddress}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>RefreshVcdStarted</p> <pre><code>${username} started a job to refresh VCD '${vcdAddress}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RefreshVcdStartFailed</p> <pre><code>${username} failed to start a job to refresh VCD '${vcdAddress}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateVcdStarted</p> <pre><code>${username} started a job to update VCD '${vcdAddress}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateVcdStartFailed</p> <pre><code>${username} failed to start a job to update VCD '${vcdAddress}' Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>VappSnapshotInstantRecoveryStarted</p> <pre><code>${username} started a job to instant recover snapshot '${snapshotId}' from ${snappableType} '${vcdVapp}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>VappSnapshotInstantRecoveryStartFailed</p> <pre><code>${username} failed to instant recover snapshot '${snapshotId}'  from ${snappableType} '${vcdVapp}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>VcdVappOndemandSnapshotStarted</p> <pre><code>${username} started a job to take on demand snapshot for ${snappableType} '${vcdVapp}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>VcdVappOndemandSnapshotStartFailed</p> <pre><code>${username} failed to take on demand snapshot for ${snappableType}  '${vcdVapp}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>VcdVappSnapshotDeleteStarted</p> <pre><code>${username} started a job to delete snapshot '${snapshotId}' from ${snappableType} '${vcdVapp}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>VcdVappSnapshotDeleteStartFailed</p> <pre><code>${username} failed to delete snapshot '${snapshotId}' from ${snappableType} '${vcdVapp}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>VcdVappSnapshotExportStarted</p> <pre><code>${username} started a job to export snapshot '${snapshotId}' from ${snappableType} '${vcdVapp}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>VcdVappSnapshotExportStartFailed</p> <pre><code>${username} failed to export snapshot '${snapshotId}' from ${snappableType} '${vcdVapp}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>VcdVappUpdateStarted</p> <pre><code>${username} started a job to update ${snappableType} '${vcdVapp}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>VcdVappUpdateStartFailed</p> <pre><code>${username} failed to update ${snappableType} '${vcdVapp}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#volume_group","title":"volume_group","text":"<p>UpdateVolumeGroup</p> <pre><code>${username} updated volume group for host ${hostName}. Volumes included are :${volumes}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateVolumeGroupFailed</p> <pre><code>${username} failed to update volume group for host ${hostName}. Reason : ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#vsphere","title":"vsphere","text":"<p>AddVcenterStarted</p> <pre><code>${username} started a job to add vCenter '${vcenterAddress}'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AddVcenterStartFailed</p> <pre><code>${username} failed to start a job to add vCenter '${vcenterAddress}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>CreateGuestCredential</p> <pre><code>${username} created a guest credential with name '${guestCredentialName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CreateGuestCredentialFailed</p> <pre><code>${username} failed to create a guest credential with name '${guestCredentialName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>CreateVSphereAdvancedTag</p> <pre><code>${username} created an advanced tag with name '${advancedTagName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CreateVSphereAdvancedTagFailed</p> <pre><code>${username} failed to create an advanced tag with name '${advancedTagName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteGuestCredential</p> <pre><code>${username} deleted a guest credential.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteGuestCredentialFailed</p> <pre><code>${username} failed to delete a guest credential.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteVcenterStarted</p> <pre><code>${username} started a job to delete vCenter '${vcenterAddress}'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteVcenterStartFailed</p> <pre><code>${username} failed to start a job to delete vCenter '${vcenterAddress}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteVSphereAdvancedTag</p> <pre><code>${username} deleted an advanced tag'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteVSphereAdvancedTagFailed</p> <pre><code>${username} failed to delete an advanced tag'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DisabledStorageArrayIntegration</p> <pre><code>${username} disabled storage array integration in VM ${vmName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>EnabledStorageArrayIntegration</p> <pre><code>${username} enabled storage array integration in VM ${vmName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RefreshVcenterStarted</p> <pre><code>${username} started a job to refresh vCenter '${vcenterAddress}'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RefreshVcenterStartFailed</p> <pre><code>${username} failed to start a job to refresh vCenter '${vcenterAddress}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateGuestCredential</p> <pre><code>${username} updated a guest credential with name '${guestCredentialName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateGuestCredentialFailed</p> <pre><code>${username} failed to update a guest credential with name '${guestCredentialName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateVmwareAgentDeploymentSettingFailed</p> <pre><code>${username} failed to update vmware agent deployment setting on cluster '${clusterUuid}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateVmwareAgentDeploymentSettingSucceeded</p> <pre><code>${username} updated vmware agent deployment setting on cluster '${clusterUuid}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateVmwareDiskFailed</p> <pre><code>${username} failed to update a Vmware Virtual Disk '${diskName}' of vSphere VM '${vmName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateVmwareDiskSucceeded</p> <pre><code>${username} updated protection of disk with name '${diskName}' on  VM '${vmName}' to exclusion status '${status}'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateVmwareVcenterSettingFailed</p> <pre><code>${username} was unable to modify the VMware vCenter '${vcenterAddress}' on Rubrik cluster '${clusterUuid}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UpdateVmwareVcenterSettingSucceeded</p> <pre><code>${username} modified the VMware vCenter '${vcenterAddress}' on Rubrik cluster '${clusterUuid}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateVSphereAdvancedTag</p> <pre><code>${username} updated an advanced tag with name '${advancedTagName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UpdateVSphereAdvancedTagFailed</p> <pre><code>${username} failed to update an advanced tag with name '${advancedTagName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>VSphereLiveMountPoweredOffFailed</p> <pre><code>${username} failed to power off '${vmName}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>VSphereLiveMountPoweredOffStarted</p> <pre><code>${username} started powering off '${vmName}'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>VSphereLiveMountPoweredOnFailed</p> <pre><code>${username} failed to power on '${vmName}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>VSphereLiveMountPoweredOnStarted</p> <pre><code>${username} started powering on '${vmName}'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>VSphereRegisterAgent</p> <pre><code>${username} registered agent on virtual machine '${snappableName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>VSphereRegisterAgentFailed</p> <pre><code>${username} failed to register agent on virtual machine '${snappableName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>VSphereUpdateVM</p> <pre><code>${username} updated virtual machine '${snappableName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>VSphereUpdateVMFailed</p> <pre><code>${username} unable to update virtual machine '${snappableName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>VSphereUpdateVmUnmountTimeFailed</p> <pre><code>${username} failed to update unmount time for vm mount '${mountId}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>VSphereUpdateVmUnmountTimeSucceeded</p> <pre><code>${username} successfully updated unmount time for vm mount '${mountId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#webhook","title":"webhook","text":"<p>PolarisWebhookAutoDisabled</p> <pre><code>Webhook endpoint failed to receive messages after multiple retries.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Configuration/#webhooks","title":"webhooks","text":"<p>WebhookCreated</p> <pre><code>${actorSubjectName} successfully created the webhook ${targetSubjectName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>WebhookDeleted</p> <pre><code>${actorSubjectName} successfully deleted the webhook ${targetSubjectName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>WebhookDisabled</p> <pre><code>${actorSubjectName} successfully disabled the webhook ${targetSubjectName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>WebhookEnabled</p> <pre><code>${actorSubjectName} successfully enabled webhook ${targetSubjectName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>WebhookUpdated</p> <pre><code>${actorSubjectName} successfully updated the webhook ${targetSubjectName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Diagnostic/","title":"Diagnostic","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Diagnostic/#account","title":"account","text":"<p>AccountExpired</p> <pre><code>Your trial ended on ${ExpiryDate} and your account will be on hold for ${NumHoldDays} days from that date.  During the hold period, all backup jobs will be paused and no further changes can be made.  Your POC data will be deleted after ${HoldEndDate}.  To continue using the product, contact your Account Executive to purchase a license.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalSuccessNo</p> <p>AccountExpiryWarning</p> <pre><code>Hello, We want to remind you that your account is expiring in ${noOfDaysBeforeHold} days and that your existing data will not be available after that time. Act now to extend your features or buy additional features! Retain your existing data and continue to enjoy all the benefits of Rubrik data protection. For information, please contact our friendly sales professionals at sales@rubrik.com. Thank you, Rubrik\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Diagnostic/#app_failover","title":"app_failover","text":"<p>RefreshAwsNetResourcesConnectToEc2ClientFailed</p> <pre><code>Failed to connect to ec2 client: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>RefreshAwsNetResourcesEc2ClientFailed</p> <pre><code>Failed to sync AWS networking resources in '${cloudAccount}(${region})': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>RefreshAwsNetResourcesFailoverCanceled</p> <pre><code>Canceled sync AWS networking resources in '${account}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>RefreshAwsNetResourcesFailoverCanceling</p> <pre><code>Canceling sync AWS networking resources in '${account}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>RefreshAwsNetResourcesFailoverFailed</p> <pre><code>Failed to sync AWS networking resources in '${account}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>RefreshAwsNetResourcesFailoverStarted</p> <pre><code>Started to sync AWS networking resources in '${account}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>RefreshAwsNetResourcesFailoverSuccess</p> <pre><code>Synced AWS networking resources in '${account}': processed '${totalNum}' cloud locations.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>RefreshAwsNetResourcesGetCloudAccountFailed</p> <pre><code>Failed to get cloud account ${name} in '${account}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>RefreshAwsNetResourcesQueryArchivalLocationFailed</p> <pre><code>Failed to query cloud locations in '${account}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>ValidateAppBlueprintResourceMappingFailed</p> <pre><code>Failed to validate recovery spec for recovery plan '${name}' in '${account}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ValidateResourceMappingCanceled</p> <pre><code>Canceled validate recovery specs for recovery plans in '${account}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>ValidateResourceMappingCanceling</p> <pre><code>Canceling validate recovery specs for recovery plans in '${account}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>ValidateResourceMappingFailed</p> <pre><code>Failed to validate recovery specs for recovery plans in '${account}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ValidateResourceMappingQueryAppBlueprintsFailed</p> <pre><code>Failed to query recovery plans in '${account}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>ValidateResourceMappingStarted</p> <pre><code>Started validating recovery specs for recovery plans in '${account}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ValidateResourceMappingSuccess</p> <pre><code>Validated recovery specs for recovery plans in '${account}': processed '${totalNum}' and found recovery specs are invalid for '${invalidNum}' recovery plans.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Diagnostic/#awsnative","title":"awsnative","text":"<p>AwsSnapshotsMissing</p> <pre><code>One or more rubrik managed snapshots are missing from AWS account ${awsAccountDisplayName}. Total ${missingEc2SnapshotCount} AMIs and ${missingEbsSnapshotCount} volume snapshots are missing. Details of missing snapshots have been emailed to ${accountOwnersEmails}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Diagnostic/#azurenative","title":"azurenative","text":"<p>AzureSnapshotsMissing</p> <pre><code>One or more rubrik managed snapshots are missing from Azure subscription ${azureSubscriptionDisplayName}. Total ${missingVMSnapshotCount} VM snapshots, ${missingVMRepSnapshotCount} VM replicated snapshots, ${missingDiskSnapshotCount} disk snapshots and ${missingDiskRepSnapshotCount} disk replicated snapshots are missing.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureSqlDatabaseServerDeleted</p> <pre><code>One or more Rubrik managed Azure SQL Servers are missing from Azure subscription ${azureSubscriptionDisplayName}. Missing Azure SQL Servers: ${missingSqlDatabaseServersList}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureSqlManagedInstanceServerDeleted</p> <pre><code>One or more Rubrik managed Azure SQL Managed Instances are missing from Azure subscription ${azureSubscriptionDisplayName}. Missing Azure SQL Managed Instances: ${missingSqlManagedInstanceServersList}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureSqlSnapshotsMissing</p> <pre><code>One or more Rubrik managed snapshots are missing from Azure subscription ${azureSubscriptionDisplayName}. Total ${missingSqlDatabaseDbSnapshotCount} Azure Sql Database and ${missingSqlManagedInstanceDbSnapshotCount} Azure Sql Managed Database snapshots are missing.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Diagnostic/#ccprovision","title":"ccprovision","text":"<p>ClusterCreateFailed</p> <pre><code>${message}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ClusterCreateRunning</p> <pre><code>${message}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ClusterCreateSuccess</p> <pre><code>${message}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ClusterCreateWarning</p> <pre><code>${message}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Diagnostic/#cloudnative","title":"cloudnative","text":"<p>AwsRdsManualSnapshotQuotaBreach</p> <pre><code>One or more regions from the AWS account, ${awsAccountDisplayName},  protected by Rubrik, may have the following issues: manual snapshot  quota limit is about to be breached, or you have used 75%% of the quota.  Usages in affected regions are: ${quotaUsage}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>AwsRdsSnapshotsMissing</p> <pre><code>One or more RDS databases from the AWS account ${awsAccountDisplayName}  protected by Rubrik may have the following issues: Number of missing  RDS snapshots: ${missingRdsInstanceSnapshotCount}. Number of RDS  databases with modified log retention values:  ${missingRdsInstancePitrCount}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>CloudNativeIndexSnapshotsDebugModeJobCanceled</p> <pre><code>Canceled debug-mode index run of the snapshot taken on ${snapshotTimeDisplay} of the ${snappableDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>CloudNativeIndexSnapshotsDebugModeJobCanceling</p> <pre><code>Canceling debug-mode index run of the snapshot taken on ${snapshotTimeDisplay} of the ${snappableDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>CloudNativeIndexSnapshotsDebugModeJobFailed</p> <pre><code>Failed in debug-mode index run of the snapshot taken on ${snapshotTimeDisplay} of the ${snappableDisplay}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureNo</p> <p>CloudNativeIndexSnapshotsDebugModeJobQueued</p> <pre><code>Queued debug-mode index run of the snapshot taken on ${snapshotTimeDisplay} of the ${snappableDisplay}. The job will not index the snapshot.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>CloudNativeIndexSnapshotsDebugModeJobStarted</p> <pre><code>Started debug-mode index run of the snapshot taken on ${snapshotTimeDisplay} of the ${snappableDisplay}. The job will not index the snapshot.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CloudNativeIndexSnapshotsDebugModeJobSucceeded</p> <pre><code>Successfully completed debug-mode index run of the snapshot taken on ${snapshotTimeDisplay} of the ${snappableDisplay}. The snapshot was not indexed, since the job was run in the debug mode.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>GcpSnapshotsMissing</p> <pre><code>One or more rubrik managed snapshots are missing from GCP project ${gcpProjectDisplayName}. Total ${missingInstanceSnapshotCount} instance snapshots and ${missingDiskSnapshotCount} disk snapshots are missing.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Diagnostic/#cluster","title":"cluster","text":"<p>ClusterSyncJobsDelayed</p> <pre><code>Cluster ${clusterName} is experiencing the following delays in syncing data with Rubrik Cloud: \\n\\n${delayedJobsMessage}\\n\\nPlease open a support tunnel to the cluster and contact Rubrik Support for further assistance.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ClusterUnreachable</p> <pre><code>Cluster ${clusterName} is unreachable\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Diagnostic/#exocompute","title":"exocompute","text":"<p>ClusterVerificationTaskFailed</p> <pre><code>Verification failed for the customer managed cluster ${clusterDisplayName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>ClusterVerificationTaskStarted</p> <pre><code>Verifying the customer managed cluster ${clusterDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>ClusterVerificationTaskSucceeded</p> <pre><code>Successfully verified the customer managed cluster ${clusterDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ExoclusterReachingAzureQuotaLimit</p> <pre><code>${eventMsg}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>ExoclusterReachingAzureSubnetLimit</p> <pre><code>The size of the subnet ${subnet} is limiting the scaling of the AKS. Recommended minimum subnet size: ${requiredBandwidth}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>ExoclusterUpgradeCanceled</p> <pre><code>Canceled upgrade ${exoclusterType} cluster ${exoclusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>ExoclusterUpgradeCanceling</p> <pre><code>Canceling upgrade of ${exoclusterType} cluster ${exoclusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>ExoclusterUpgradeFailed</p> <pre><code>Failed to upgrade ${exoclusterType} cluster ${exoclusterName} to version ${version}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ExoclusterUpgradeNotEnoughResource</p> <pre><code>Not enough resources to upgrade ${exoclusterType} cluster ${exoclusterName} to version ${version}: ${quotaMsg}. More info on https://docs.microsoft.com/en-us/azure/aks/upgrade-cluster.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ExoclusterUpgradeStarted</p> <pre><code>Upgrading ${exoclusterType} cluster ${exoclusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>ExoclusterUpgradeSucceeded</p> <pre><code>Successfully upgraded ${exoclusterType} cluster ${exoclusterName} to version ${version}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ExocomputeAwsSetupJobCanceled</p> <pre><code>Canceled setup of the EKS cluster in the ${awsAccountDisplayName} AWS account in the ${regionDisplayName} region.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>ExocomputeAwsSetupJobCanceling</p> <pre><code>Canceling setup of the EKS cluster in the ${awsAccountDisplayName} AWS account in the ${regionDisplayName} region.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>ExocomputeAwsSetupJobFailed</p> <pre><code>Failed to setup EKS cluster in the ${awsAccountDisplayName} AWS account in the ${regionDisplayName} region. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ExocomputeAwsSetupJobStarted</p> <pre><code>Started setup of the EKS cluster in the ${awsAccountDisplayName} AWS account in the ${regionDisplayName} region.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ExocomputeAwsSetupJobSucceeded</p> <pre><code>Successfully setup EKS cluster in the ${awsAccountDisplayName} AWS account in the ${regionDisplayName} region.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ExocomputeAwsTeardownJobCanceled</p> <pre><code>Canceled termination of the ${eksClusterDisplayName} EKS cluster in the ${awsAccountDisplayName} AWS account in the ${regionDisplayName} region.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>ExocomputeAwsTeardownJobCanceling</p> <pre><code>Canceling termination of the ${eksClusterDisplayName} EKS cluster in the ${awsAccountDisplayName} AWS account in the ${regionDisplayName} region.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>ExocomputeAwsTeardownJobFailed</p> <pre><code>Failed to terminate the ${eksClusterDisplayName} EKS cluster in the ${awsAccountDisplayName} AWS account in the ${regionDisplayName} region. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ExocomputeAwsTeardownJobStarted</p> <pre><code>Terminating the ${eksClusterDisplayName} EKS cluster in the ${awsAccountDisplayName} AWS account in the ${regionDisplayName} region.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ExocomputeAwsTeardownJobSucceeded</p> <pre><code>Successfully terminated the ${eksClusterDisplayName} EKS cluster in the ${awsAccountDisplayName} AWS account in the ${regionDisplayName} region.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ExocomputeAzureSetupJobCanceled</p> <pre><code>Canceled set up of the Azure Kubernetes Cluster in the resource group ${resourceGroupName} in the region ${azureRegionDisplayName} of the Azure subscription ${subscriptionDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>ExocomputeAzureSetupJobCanceling</p> <pre><code>Canceling set up of the Azure Kubernetes Cluster in the resource group ${resourceGroupName} in the region ${azureRegionDisplayName} of the Azure subscription ${subscriptionDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>ExocomputeAzureSetupJobFailed</p> <pre><code>Failed to set up the Azure Kubernetes Cluster in the resource group ${resourceGroupName} in the region ${azureRegionDisplayName} of the Azure subscription ${subscriptionDisplayName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ExocomputeAzureSetupJobStarted</p> <pre><code>Started set up of the Azure Kubernetes Cluster in the resource group ${resourceGroupName} in the region ${azureRegionDisplayName} of the Azure subscription ${subscriptionDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ExocomputeAzureSetupJobSucceeded</p> <pre><code>Successfully set up the Azure Kubernetes Cluster ${aksClusterDisplayName} in the resource group ${resourceGroupName} in the region ${azureRegionDisplayName} of the Azure subscription ${subscriptionDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ExocomputeAzureTeardownJobCanceled</p> <pre><code>Canceled termination of the Azure Kubernetes Cluster ${aksClusterDisplayName} in the resource group ${resourceGroupName} in the region ${regionName} of the Azure subscription ${subscriptionName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>ExocomputeAzureTeardownJobCanceling</p> <pre><code>Canceling termination of the Azure Kubernetes Cluster ${aksClusterDisplayName} in the resource group ${resourceGroupName} in the region ${regionName} of the Azure subscription ${subscriptionName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>ExocomputeAzureTeardownJobFailed</p> <pre><code>Failed to terminate the Azure Kubernetes Cluster ${aksClusterDisplayName} in the resource group ${resourceGroupName} in the region ${regionName} of the Azure subscription ${subscriptionName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ExocomputeAzureTeardownJobStarted</p> <pre><code>Terminating the Azure Kubernetes Cluster ${aksClusterDisplayName} in the resource group ${resourceGroupName} in the region ${regionName} of the Azure subscription ${subscriptionName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ExocomputeAzureTeardownJobSucceeded</p> <pre><code>Successfully terminated the Azure Kubernetes Cluster ${aksClusterDisplayName} in the resource group ${resourceGroupName} in the region ${regionName} of the Azure subscription ${subscriptionName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ExocomputeCloudNativeReconcilerJobCanceled</p> <pre><code>Canceled verification and configuration of the customer managed cluster ${clusterDisplayName} in the ${cloudAccountDisplayName} ${cloudTypeDisplayName} account in the ${regionDisplayName} region.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>ExocomputeCloudNativeReconcilerJobCanceling</p> <pre><code>Canceling verification and configuration of the customer managed cluster ${clusterDisplayName} in the ${cloudAccountDisplayName} ${cloudTypeDisplayName} account in the ${regionDisplayName} region.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>ExocomputeCloudNativeReconcilerJobFailed</p> <pre><code>Failed to verify and configure the customer managed cluster ${clusterDisplayName} in the ${cloudAccountDisplayName} ${cloudTypeDisplayName} account in the ${regionDisplayName} region. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ExocomputeCloudNativeReconcilerJobStarted</p> <pre><code>Started verification and configuration of the customer managed cluster  ${clusterDisplayName} in the ${cloudAccountDisplayName} ${cloudTypeDisplayName} account in the ${regionDisplayName} region.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ExocomputeCloudNativeReconcilerJobSucceeded</p> <pre><code>Successfully verified and configured customer managed cluster  ${clusterDisplayName} in the ${cloudAccountDisplayName}  ${cloudTypeDisplayName} account in the ${regionDisplayName} region.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ExocomputeCustomerKMSSaved</p> <pre><code>User ${userEmail} entered customer KMS details for organization (${orgId}). Validated and persisted for key ${keyName} in vault ${vaultName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ExocomputeResourceProvideRegistrationCompleted</p> <pre><code>Completed registration of Azure Resource Providers for subscription ${subscriptionID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ExocomputeResourceProvideRegistrationFailed</p> <pre><code>Failed during registration of Azure Resource Providers for subscription ${subscriptionID}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>ExocomputeResourceProvideRegistrationStarted</p> <pre><code>Started registration of Azure Resource Providers for subscription ${subscriptionID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>HealthCheckTaskFailed</p> <pre><code>Failed health check for the Kubernetes cluster. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>HealthCheckTaskFailedForPoweredOffCluster</p> <pre><code>The powered-off AKS cluster, ${clusterName}, in resource group, ${rgName},  within Azure subscription, ${subscriptionID} failed the health check.  You can either start the AKS cluster to avoid data protection compliance  issues or delete the M365 subscription if you want to power down the  AKS cluster permanently.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>HealthCheckTaskStarted</p> <pre><code>Checking health of the Kubernetes Cluster.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>HealthCheckTaskSucceeded</p> <pre><code>Successfully completed health check for the Kubernetes Cluster.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>LaunchAKSClusterTaskFailed</p> <pre><code>Failed to launch the Azure Kubernetes Cluster in the resource group ${resourceGroupDisplayName} in the region ${azureRegionDisplayName} of the Azure subscription ${subscriptionDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>LaunchAKSClusterTaskStarted</p> <pre><code>Launching the Azure Kubernetes Cluster in the resource group ${resourceGroupDisplayName} in the region ${azureRegionDisplayName} of the Azure subscription ${subscriptionDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>LaunchAKSClusterTaskSucceeded</p> <pre><code>Successfully launched the Azure Kubernetes Cluster ${aksClusterDisplayName} in the resource group ${resourceGroupDisplayName} in the region ${azureRegionDisplayName} of the Azure subscription ${subscriptionDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>LaunchEKSClusterTaskFailed</p> <pre><code>Failed to launch the ${eksClusterDisplayName} EKS cluster.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>LaunchEKSClusterTaskStarted</p> <pre><code>Launching the ${eksClusterDisplayName} EKS cluster.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>LaunchEKSClusterTaskSucceeded</p> <pre><code>Successfully launched the ${eksClusterDisplayName} EKS cluster.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>LaunchWorkerNodesTaskFailed</p> <pre><code>Failed to launch worker nodes in the ${eksClusterDisplayName} EKS cluster.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>LaunchWorkerNodesTaskStarted</p> <pre><code>Launching worker nodes in the ${eksClusterDisplayName} EKS cluster.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>LaunchWorkerNodesTaskSucceeded</p> <pre><code>Launched worker nodes in the ${eksClusterDisplayName} EKS cluster.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365CleanStaleResources</p> <pre><code>Please delete following stale resource from Azure Portal: ${resources}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>O365SetupExocomputeFailed</p> <pre><code>${userID} failed to deploy Rubrik Office 365 protection software in ${exocomputeName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>O365SetupExocomputeFailed</p> <pre><code>Failed to deploy Rubrik Office 365 protection software in ${exocomputeName}: ${reason} (Error ID: ${errorID})\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365SetupExocomputeStarted</p> <pre><code>${userID} started deploying Rubrik Office 365 protection software in ${exocomputeName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>O365SetupExocomputeStarted</p> <pre><code>Deploying Rubrik Office 365 protection software in ${exocomputeName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>O365SetupExocomputeSucceeded</p> <pre><code>Successfully deployed Rubrik Office 365 protection software in ${exocomputeName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365SetupResourceStarted</p> <pre><code>Setting up ${resource} in ${exocomputeName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>O365SetupResourceSucceeded</p> <pre><code>Successfully set up ${resource} in ${exocomputeName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>SetupClusterTaskFailed</p> <pre><code>Failed to configure the customer managed cluster ${clusterDisplayName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>SetupClusterTaskStarted</p> <pre><code>Configuring the customer managed cluster ${clusterDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>SetupClusterTaskSucceeded</p> <pre><code>Successfully configured the customer managed cluster ${clusterDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>SetupEKSClusterTaskFailed</p> <pre><code>Failed to configure the ${eksClusterDisplayName} EKS cluster.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>SetupEKSClusterTaskStarted</p> <pre><code>Configuring the ${eksClusterDisplayName} EKS cluster.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>SetupEKSClusterTaskSucceeded</p> <pre><code>Successfully configured the ${eksClusterDisplayName} EKS cluster.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Diagnostic/#kms_key_vault","title":"kms_key_vault","text":"<p>KmsKeyVaultHealthCheckFailure</p> <pre><code>Connectivity health check failed for KMS ${kmsName} of type ${kmsType}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Diagnostic/#korg","title":"korg","text":"<p>CanaryFailed</p> <pre><code>Canary job failed for object ${object}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>CanaryFinished</p> <pre><code>Canary job finished for object ${object}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CanaryStarted</p> <pre><code>Canary job started for object ${object}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>JobCanceled</p> <pre><code>Job instance ${jobInstanceID} canceled.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>JobCancellationIssued</p> <pre><code>Cancellation request issued for job instance ${jobInstanceID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>JobCancellationIssuedByUser</p> <pre><code>Cancellation request received for job instance ${jobInstanceID} by user ${user}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>NonTerminalSeriesFailureRetry</p> <pre><code>The failed job will be retried automatically.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Diagnostic/#o365","title":"o365","text":"<p>InsufficientO365AppsOfType</p> <pre><code>The number of ${snappableType} apps (${appCount}) authenticated for ${orgName} is not sufficient to meet the configured SLAs. We recommend increasing the number of apps to ${recommendedAppCount}. Add ${snappableType} apps via the Manage Enterprise Apps button on the Microsoft 365 inventory page.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>M365BackupStorageSyncCanceled</p> <pre><code>Canceled backup storage sync for Microsoft 365 subscription ${orgName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>M365BackupStorageSyncFailed</p> <pre><code>Failed to complete backup storage sync for Microsoft 365 subscription  ${orgName}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>M365BackupStorageSyncStarted</p> <pre><code>Started backup storage sync for Microsoft 365 subscription ${orgName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>M365BackupStorageSyncStateTransitionStats</p> <pre><code>${count} object(s) state changed from ${fromState} to ${toState}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>M365BackupStorageSyncSucceeded</p> <pre><code>Completed backup storage sync for Microsoft 365 subscription ${orgName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365DeleteOrgFailed</p> <pre><code>Failed to delete Microsoft 365 Subscription ${orgName}: ${reason} (Error ID: ${errorID}). For more information on this error please visit https://support.rubrik.com/articles/How_To/000002821\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365DeleteOrgStarted</p> <pre><code>Started deletion of O365 Subscription ${orgName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>O365DeleteOrgSucceeded</p> <pre><code>Successfully deleted Microsoft 365 Subscription ${orgName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365DeleteOrgTaskFailed</p> <pre><code>Failed to delete Microsoft 365 Subscription ${orgName}. Retrying. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>O365RefreshOrgAddedDocLibStats</p> <pre><code>Discovered ${numAdded} new document libraries\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365RefreshOrgAddedSharePointListStats</p> <pre><code>Discovered ${numAdded} new sharepoint lists\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365RefreshOrgAddedSiteCollectionStats</p> <pre><code>Discovered ${numAdded} new site collections(s)\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365RefreshOrgAddedSiteStats</p> <pre><code>Discovered ${numAdded} new site(s)\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365RefreshOrgAddedTeamAndChannelStats</p> <pre><code>Discovered ${numTeamsAdded} new team(s) and ${numChannelsAdded} new channel(s)\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365RefreshOrgAddedUserStats</p> <pre><code>Discovered ${numAdded} new user(s)\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365RefreshOrgArchivedTeamAndChannelStats</p> <pre><code>Archived ${numTeamsArchived} team(s) and ${numChannelsArchived} channel(s)\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365RefreshOrgCanceled</p> <pre><code>Canceled ${maintenanceType} metadata refresh for subscription ${orgName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>O365RefreshOrgNewRegionsStats</p> <pre><code>Added new M365 regions (${newRegions}) to (${existingRegions}).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365RefreshOrgRemovedSharePointObjectStats</p> <pre><code>Removed ${numRemoved} SharePoint object(s).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365RefreshOrgRemovedUserStats</p> <pre><code>Removed ${numRemoved} user(s): ${removedUserList}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365RefreshOrgStarted</p> <pre><code>Started ${maintenanceType} metadata refresh for subscription ${orgName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365RefreshOrgSucceeded</p> <pre><code>Completed ${maintenanceType} metadata refresh for subscription ${orgName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365RefreshOrgUnverifiedUserStats</p> <pre><code>Unable to verify mailbox access for ${numUnverified} user(s): ${unverifiedUserList}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>O365RefreshOrgUpdatedDocLibStats</p> <pre><code>Updated metadata for ${numUpdated} document libraries\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365RefreshOrgUpdatedSharePointListStats</p> <pre><code>Updated metadata for ${numUpdated} sharepoint lists\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365RefreshOrgUpdatedSiteCollectionStats</p> <pre><code>Updated metadata for ${numUpdated} siteCollections(s)\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365RefreshOrgUpdatedSiteStats</p> <pre><code>Updated metadata for ${numUpdated} site(s)\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365RefreshOrgUpdatedTeamAndChannelStats</p> <pre><code>Updated metadata for ${numTeamsUpdated} team(s) and ${numChannelsUpdated} channel(s)\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365RefreshOrgUpdatedUserStats</p> <pre><code>Updated metadata for ${numUpdated} user(s)\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ProtectedMailboxLimitBreach</p> <pre><code>We're glad that our protection is helping! We're now protecting more mailboxes than your current licenses allow. We are protecting ${total_protected_licensed_mailbox} licensed mailboxes but the number allowed by your current licenses is ${allowed_protected_licensed_mailbox_limit}. We are protecting ${total_protected_unlicensed_mailbox} shared mailboxes but the number allowed by your current licenses is ${allowed_protected_unlicensed_mailbox_limit}. No need to worry though, we'll keep protecting the excess mailboxes for the next 30 days. During that time please reach out to the Rubrik Sales team to purchase additional licenses, or please remove ${overage_count} mailboxes. Please refer to ${learn_more_link} for more details. Thanks for being a great customer!\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p> <p>ProtectedOneDriveLimitBreach</p> <pre><code>We're glad that our protection is helping! We're now protecting more OneDrives than your current licenses allow. We are protecting ${total_protected_onedrive} OneDrives but the number allowed by your current licenses is ${allowed_protected_onedrive_limit}. No need to worry though, we'll keep protecting the excess OneDrives for the next 30 days. During that time please reach out to the Rubrik Sales team to purchase additional licenses, or please remove ${overage} mailboxes. Please refer to ${learn_more_link} for more details. Thanks for being a great customer!\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p> <p>RefreshO365OrgFailed</p> <pre><code>Failed ${maintenanceType} metadata refresh of subscription ${orgName}: ${reason} (Error ID: ${errorID}). For more information on this error please visit https://support.rubrik.com/articles/How_To/000002821\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Diagnostic/#polaris_disaster_recovery","title":"polaris_disaster_recovery","text":"<p>PolarisComponentRecoveryFailure</p> <pre><code>Recovery of ${component} failed.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>PolarisComponentRecoveryStarted</p> <pre><code>Recovery of ${component} has begun.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>PolarisComponentRecoverySuccess</p> <pre><code>Recovery of ${component} has completed successfully.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>PolarisDisasterRecoveryFailure</p> <pre><code>Disaster recovery failed.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>PolarisDisasterRecoveryStarted</p> <pre><code>Beginning disaster recovery.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>PolarisDisasterRecoverySuccess</p> <pre><code>Disaster recovery has completed successfully.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>PolarisServiceStartBeginning</p> <pre><code>Returning services to running state.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>PolarisServiceStartFailure</p> <pre><code>Failed to bring up services. Please run `cluster disaster_recovery revert` from the Admin CLI.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>PolarisServiceStartSuccess</p> <pre><code>Services successfully returned to running state.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Diagnostic/#rcv","title":"rcv","text":"<p>RcvAccessRemovedNotification</p> <pre><code>Access to your Rubrik Cloud Vault (RCV) locations for the ${tier}  tier in ${bundle} with ${redundancy} redundancy was removed on  ${removeAccessDate}. If you don't renew your license, all backups in  these locations will be deleted on ${deleteDataDate}.  To renew your RCV license  and prevent the deletion of your backups, contact your Rubrik account  representative or email sales@rubrik.com.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p> <p>RcvConsumptionNotification</p> <pre><code>Your Rubrik Cloud Vault (RCV) locations for the  ${tier} tier in ${bundle} with ${redundancy} redundancy have been  paused. As a result, no new backups can be uploaded. However, you can  still access previously uploaded backups in these locations. Uploaded  backups will expire based on the retention period defined in their  SLA Domains.  To purchase additional RCV capacity, contact  your Rubrik account representative or email sales@rubrik.com.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p> <p>RcvDataDeletionNotification</p> <pre><code>Your backups in Rubrik Cloud Vault (RCV) locations for the ${tier}  tier in ${bundle} with ${redundancy} redundancy were deleted on  ${deleteDataDate}.  Your RCV Locations using RCV  ${tier} tier in ${bundle} regions have been deleted.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p> <p>RcvExpirationNotification</p> <pre><code>Your Rubrik Cloud Vault (RCV) locations for the  ${tier} tier in ${bundle} with ${redundancy} redundancy were paused. As  a result, no new backups will be uploaded. However, you can still  access previously uploaded backups in these locations. Uploaded backups  will expire based on the retention period defined in their SLA  Domains. If you do not renew your license, your access to these  locations will be removed on ${removeAccessDate}, and all backups  in these locations will be deleted on ${deleteDataDate}.  To renew your RCV  license and prevent the deletion of your backups, contact your Rubrik  account representative or email sales@rubrik.com.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p> <p>RcvForecastedConsumptionNotification</p> <pre><code>Based on your past and current consumption of  Rubrik Cloud Vault (RCV) ${tier} tier in ${bundle} regions,  we have forecasted that your consumption will exceed your  purchased entitlement on ${forecastCapacityExceedDate}.  When you exceed your license, no new backups will be uploaded  to RCV locations in ${tier} tier for ${bundle} regions  but you\u2019ll still be able to access previously uploaded backups  in these locations. Uploaded backups will expire according to the  retention period defined in their SLA Domains.  To purchase additional Rubrik Cloud Vault (RCV) capacity, contact  your Rubrik account representative or email sales@rubrik.com.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p> <p>RCVPartialExpiryNotification</p> <pre><code>Capacity Expiring: ${expiredSize} TB  Expiration Date: ${expiryDate}  Capacity Not Expiring: ${remainingSize} TB  If you exceed your remaining license of ${remainingSize} TB, the  Rubrik Cloud Vault locations for ${tier} tier in regions that belong to  ${bundle} storage bundle with ${redundancy} redundancy will be paused.  As a result, no new backups can be uploaded but you will still be able  to access previously uploaded backups in these locations. Uploaded  backups will expire according to the retention period defined in their  SLA Domains. To prevent your backups from being paused, contact your  Rubrik account representative or email sales@rubrik.com to purchase  additional Rubrik Cloud Vault capacity.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p> <p>RcvPercentageConsumptionNotification</p> <pre><code>Once you have used 100 percent of your licensed capacity, the  Rubrik Cloud Vault (RCV) locations for ${tier} tier in ${bundle} with  ${redundancy} redundancy will be paused. As a result, no new backups  can be uploaded. However, you can still access previously  uploaded backups in these locations. Uploaded backups will expire  based on retention period defined in their SLA Domains.  To prevent your backups from being paused, contact your Rubrik account  representative or email sales@rubrik.com to purchase additional  RCV capacity.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p> <p>RcvPreliminaryExpirationNotification</p> <pre><code>Your Rubrik Cloud Vault (RCV) locations for the  ${tier} tier in ${bundle}  with ${redundancy} redundancy will be paused on ${expiryDate}. As a  result, no new backups will be uploaded. However, you can still  access previously uploaded backups in these locations. Uploaded backups  will expire based on the retention period defined in their SLA  Domains. If you do not renew your license, your access to these  locations will be removed on ${removeAccessDate}, and all backups  in these locations will be deleted on ${deleteDataDate}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Diagnostic/#snapshot","title":"snapshot","text":"<p>SnapshotOutOfCompliance</p> <pre><code>The following snappable is out of SLA compliance due to missed local snapshot(s): ${snappableName}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Diagnostic/#support_user_access","title":"support_user_access","text":"<p>SupportUserAccessDisabled</p> <pre><code>${accessRevokerName} revoked read-only access to view RSC account as ${impersonatedUserName} from Rubrik support staff.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>SupportUserAccessDisabled</p> <pre><code>${accessRevokerName} revoked read-only access to view RSC account as ${impersonatedUserName} from Rubrik support staff.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SupportUserAccessEnabled</p> <pre><code>${accessProviderName} granted read-only access to view RSC account as ${impersonatedUserName} to Rubrik support staff.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SupportUserAccessEnabled</p> <pre><code>${accessProviderUserName} granted read-only access to Rubrik support staff for support ticket ${ticketId}.  Rubrik support staff will have read-only view as ${impersonatedUserName} from ${startTime} till ${endTime}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>SupportUserAccessExpired</p> <pre><code>Access provided to Rubrik Support Staff by ${accessProviderUserName} to investigate ticket ${ticketId} has been expired\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>SupportUserAccessModified</p> <pre><code>${accessModifierName} updated Rubrik support staff\u2019s read-only access timings to RSC account  as ${impersonatedUserName} from ${previousDuration} hours to ${newDuration} hours.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>SupportUserAccessModified</p> <pre><code>${accessModifierName} updated Rubrik support staff\u2019s read-only access timings to RSC account  as ${impersonatedUserName} from ${previousDuration} hours to ${newDuration} hours.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SupportUserLoggedIn</p> <pre><code>Rubrik support staff logged in as ${impersonatedUserName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SupportUserLoggedOut</p> <pre><code>Rubrik support staff viewing RSC account as ${impersonatedUserName} logged out.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Diagnostic/#trident","title":"trident","text":"<p>CPUUtilizationWarning</p> <pre><code>CPU Utilization Warning. Reasons: ${reasons}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>DiskUtilizationWarning</p> <pre><code>Disk Utilization Warning. Reasons: ${reasons}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>MemoryUtilizationWarning</p> <pre><code>Memory Utilization Warning. Reasons: ${reasons}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>PolarisHealthDegraded</p> <pre><code>Rubrik deployment status is ${node_status}. Reasons: ${reasons}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>PolarisHealthOk</p> <pre><code>Rubrik deployment status is ${node_status}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Download/","title":"Download","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Download/#appflows","title":"appflows","text":"<p>RecoveryReportDownloadTriggered</p> <pre><code>${userEmail} triggered a job to download report for recovery '${recoveryName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Download/#download","title":"download","text":"<p>DownloadReportCSV</p> <pre><code>${username} downloaded report ${reportName} as a CSV.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DownloadReportPDF</p> <pre><code>${username} downloaded report ${reportName} as a PDF.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ReportDownloadGenerateFailure</p> <pre><code>Failure to create a download link for ${reportName} taken at ${timestamp}. ${failureReason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ReportDownloadGenerateInProgress</p> <pre><code>${reportName} is under preparation. Visit the Download Center for more information.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>ReportDownloadGenerateSuccess</p> <pre><code>Successfully completed preparation of ${reportName} taken at ${timestamp}. Visit the Download Center to obtain the link to download the report\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ReportEmailGenerateFailure</p> <pre><code>Failed to immediately schedule report for ${reportName} requested at ${timestamp}. ${failureReason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ReportEmailGenerateInProgress</p> <pre><code>${reportName} is under preparation. Visit the Download Center for more information.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>ReportEmailGenerateSuccess</p> <pre><code>Successfully sent the immediately scheduled report for ${reportName} requested at ${timestamp}. Visit the Download Center for more information.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>SendImmediateReportEmail</p> <pre><code>${username} performed an immediate schedule for ${reportName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Download/#managed_volume","title":"managed_volume","text":"<p>DownloadManagedVolumeFromLocationFailure</p> <pre><code>${username} failed to download the snapshot: '${snapshotId}' from location: '${locationId}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DownloadManagedVolumeFromLocationSuccess</p> <pre><code>${username} started the operation to download the snapshot: '${snapshotId}' from location: '${locationId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Download/#rest_api_precheck","title":"rest_api_precheck","text":"<p>DownloadCSV</p> <pre><code>${username} downloaded a CDM Rest API metrics CSV file.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/ENCRYPTION_MANAGEMENT_OPERATION/","title":"ENCRYPTION MANAGEMENT OPERATION","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/ENCRYPTION_MANAGEMENT_OPERATION/#cdm_encryption","title":"cdm_encryption","text":"<p>AddKmipServerFailure</p> <pre><code>${ActorSubjectName} failed to add a KMIP server with the address '${address}.'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>AddKmipServerSuccess</p> <pre><code>${ActorSubjectName} added a KMIP server with the address '${address}.'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AsyncEditKmipServerFailure</p> <pre><code>${ActorSubjectName} was unable to schedule an edit of the KMIP server with the address '${address}.'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>AsyncEditKmipServerSuccess</p> <pre><code>${ActorSubjectName} scheduled an edit of the KMIP server with the address '${address}.'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>BulkAddKmipServerFailure</p> <pre><code>${ActorSubjectName} was unable to schedule the addition of a KMIP server with the address '${address}.'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>BulkAddKmipServerSuccess</p> <pre><code>${ActorSubjectName} scheduled the addition of a KMIP server with the address '${address}.'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>BulkDeleteKmipServerFailure</p> <pre><code>${ActorSubjectName} was unable to schedule the removal of the KMIP server with the address '${address}.'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>BulkDeleteKmipServerSuccess</p> <pre><code>${ActorSubjectName} scheduled the removal of the KMIP server with the address '${address}.'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DeleteKmipServerFailure</p> <pre><code>${ActorSubjectName} failed to delete the KMIP server with the address '${address}.'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeleteKmipServerSuccess</p> <pre><code>${ActorSubjectName} deleted the KMIP server with the address '${address}.'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ScheduleRotateKeysJobFailure</p> <pre><code>${ActorSubjectName} was unable to schedule a job to trigger a one-time data-at-rest  encryption key rotation.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ScheduleRotateKeysJobSuccess</p> <pre><code>${ActorSubjectName} scheduled a job to trigger a one-time data-at-rest  encryption key rotation with the key type '${keyType}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SetKmipClientBothSuccess</p> <pre><code>${ActorSubjectName} configured the KMIP client credentials with KMIP user '${username}' and both password and certificate-based authentication.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SetKmipClientCertificateSuccess</p> <pre><code>${ActorSubjectName} configured the KMIP client credentials with KMIP user '${username}' and certificate-based authentication.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SetKmipClientFailure</p> <pre><code>${ActorSubjectName} failed to configure the KMIP client credentials.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SetKmipClientPasswordSuccess</p> <pre><code>${ActorSubjectName} configured the KMIP client credentials with KMIP user '${username}' and password-based authentication.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SyncRotateKeysFailure</p> <pre><code>${ActorSubjectName} was unable to trigger a one-time data-at-rest encryption key rotation.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>SyncRotateKeysSuccess</p> <pre><code>${ActorSubjectName} triggered a one-time data-at-rest encryption  key rotation with the key type '${keyType}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/ENCRYPTION_MANAGEMENT_OPERATION/#colossus","title":"colossus","text":"<p>M365KeyRekeyingCompleted</p> <pre><code>Successfully rekeyed encryption keys for ${exocomputeName} in  Subscription ${orgName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>M365KeyRekeyingFailed</p> <pre><code>Failed to rekey encryption keys for ${exocomputeName} in Subscription  ${orgName}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>M365KeyRekeyingStarted</p> <pre><code>Rekeying encryption keys for ${exocomputeName} in Subscription  ${orgName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>M365KeyRotationCompleted</p> <pre><code>Successfully rotated encryption keys for ${exocomputeName} in  Subscription ${orgName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>M365KeyRotationFailed</p> <pre><code>Failed to rotate encryption keys for ${exocomputeName} in Subscription  ${orgName}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>M365KeyRotationStarted</p> <pre><code>Rotating encryption keys for ${exocomputeName} in Subscription  ${orgName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/ENCRYPTION_MANAGEMENT_OPERATION/#encryption","title":"encryption","text":"<p>BulkKmipServerAddCertificateImportFailure</p> <pre><code>Failed to add the KMIP server certificate '${certName}'  to cluster '${cluster}.'\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>BulkKmipServerAddCertificateImportSuccess</p> <pre><code>Successfully added the KMIP server certificate '${certName}'  to cluster '${cluster}.'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>BulkKmipServerAddFailure</p> <pre><code>Failed to add the KMIP Server '${address}:${port}' to cluster  '${cluster}.'\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>BulkKmipServerAddStarting</p> <pre><code>Attempting to add a KMIP Server '${address}:${port}' with server  certificate '${certName}' to cluster '${cluster}.'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>BulkKmipServerAddSuccess</p> <pre><code>Successfully added the KMIP Server '${address}:${port}' to cluster  '${cluster}.'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>BulkKmipServerDeleteFailure</p> <pre><code>Unable to delete the KMIP server '${address}' from the  Rubrik cluster '${cluster}.'\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>BulkKmipServerDeleteStarting</p> <pre><code>Attempting to delete the KMIP server '${address}' from the  Rubrik cluster '${cluster}.'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>BulkKmipServerDeleteSuccess</p> <pre><code>Successfully deleted the KMIP server '${address}' from the  Rubrik cluster '${cluster}.'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>BulkKmipServerEditFailure</p> <pre><code>Unable to edit the KMIP Server with address '${address}` to use  certificate '${certName}' and port ${port} on Rubrik cluster '${cluster}.'\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>BulkKmipServerEditStarting</p> <pre><code>Attempting to edit the KMIP Server with address '${address}` to use  certificate '${certName}' and port ${port} on Rubrik cluster '${cluster}.'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>BulkKmipServerEditSuccess</p> <pre><code>Successfully edited the KMIP Server with address '${address}` to use  certificate '${certName}' and port ${port} on Rubrik cluster '${cluster}.'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>EncryptionKeyRotationTriggerClusterUnreachable</p> <pre><code>Failed to trigger a one-time data at rest encryption key rotation for cluster '${cluster}' because the cluster is disconnected.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>EncryptionKeyRotationTriggerMalformedRequest</p> <pre><code>Failed to trigger a one-time data at rest encryption key rotation for cluster '${cluster}' due to an invalid request.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>EncryptionKeyRotationTriggerSuccess</p> <pre><code>Successfully triggered a one-time data at rest encryption key rotation for cluster '${cluster}' using key type ${keyType}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/ENCRYPTION_MANAGEMENT_OPERATION/#o365","title":"o365","text":"<p>MetadataBackupStorageAccountSetupFailure</p> <pre><code>Failed to set up storage account ${storage_account_name} for backup of  encryption keys\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>MetadataBackupStorageAccountSetupStarted</p> <pre><code>Setting up storage account ${storage_account_name} for backup of  encryption keys\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>MetadataBackupStorageAccountSetupSuccess</p> <pre><code>Successfully completed set up of storage account ${storage_account_name} for backup of encryption keys\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/FILE_DOWNLOAD/","title":"FILE DOWNLOAD","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/FILE_DOWNLOAD/#filedownloads","title":"filedownloads","text":"<p>FileDownloadCreated</p> <pre><code>${username} created a file of type ${type} named ${name}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>FileDownloadStarted</p> <pre><code>${username} is downloading a file named ${name}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Failover/","title":"Failover","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Failover/#app_failover","title":"app_failover","text":"<p>BlueprintFailoverCanceled</p> <pre><code>Canceled failover recovery plan '${name}' to '${location}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>BlueprintFailoverCanceling</p> <pre><code>Canceling failover for recovery plan '${name}' to '${location}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>BlueprintFailoverDataIngestionFailed</p> <pre><code>'${dataIngestionOperation}' process failed for recovery plan '${name}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>BlueprintFailoverDataIngestionStarted</p> <pre><code>Starting the '${dataIngestionOperation}' process for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintFailoverDataIngestionSucceed</p> <pre><code>'${dataIngestionOperation}' process succeeded for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintFailoverFailed</p> <pre><code>Failed to failover recovery plan '${name}' to '${location}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>BlueprintFailoverFinalizeFailed</p> <pre><code>Final failover tasks failed for failover of recovery plan '${name}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>BlueprintFailoverFinalizeStarted</p> <pre><code>Starting the final failover tasks for failover of recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintFailoverFinalizeSucceed</p> <pre><code>Final failover tasks succeeded for failover of recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>BlueprintFailoverIncrementalDataTransferFailed</p> <pre><code>Incremental data transfer process failed for recovery plan '${name}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>BlueprintFailoverIncrementalDataTransferStarted</p> <pre><code>Starting the incremental data transfer process for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintFailoverIncrementalDataTransferSucceed</p> <pre><code>Incremental data transfer process succeeded for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintFailoverPrepareDataFailed</p> <pre><code>Failover initialization process failed for recovery plan '${name}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>BlueprintFailoverPrepareDataStarted</p> <pre><code>Starting the failover initialization process for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintFailoverPrepareDataSucceed</p> <pre><code>Failover initialization process succeeded for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintFailoverPrepareResourceFailed</p> <pre><code>Failover resource validation and initialization process failed for recovery plan '${name}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>BlueprintFailoverPrepareResourceStarted</p> <pre><code>Starting the failover resource validation and initialization process for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintFailoverPrepareResourceSucceed</p> <pre><code>Failover resource validation and initialization process succeeded for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintFailoverProvisionFailed</p> <pre><code>Unable to set up the target Rubrik cluster '${targetClusterName}' for failover of recovery plan '${name}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>BlueprintFailoverProvisionStarted</p> <pre><code>Setting up the target Rubrik cluster '${targetClusterName}' for failover of recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintFailoverProvisionSucceed</p> <pre><code>Reconfiguration of virtual machines on target Rubrik cluster '${targetClusterName}' succeeded for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintFailoverProvisionSucceedWithNetworkReconfigureFailure</p> <pre><code>Reconfiguration of virtual machines on target Rubrik cluster '${targetClusterName}' failed for recovery plan '${name}'. Ignoring and continuing.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>BlueprintFailoverScheduled</p> <pre><code>Scheduled job to failover recovery plan '${name}' to '${location}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>BlueprintFailoverStarted</p> <pre><code>Starting failover for recovery plan '${name}' to '${location}'. Abort and cleanup setting is ${undoOnFailure}. Skipping network reconfiguration errors is ${skipNetworkError}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintFailoverSuccess</p> <pre><code>Successfully complete the failover for recovery plan '${name}' to '${location}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>BlueprintTakeOnDemandSnapshotFailed</p> <pre><code>On demand snapshot for recovery plan '${blueprintName}' failed.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureNo</p> <p>BlueprintTakeOnDemandSnapshotStarted</p> <pre><code>Starting on demand snapshot for recovery plan '${blueprintName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintTakeOnDemandSnapshotSucceed</p> <pre><code>On demand snapshot for recovery plan '${blueprintName}' successfully completed.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>BlueprintWaitOnDemandSnapshotFailed</p> <pre><code>Waiting on demand snapshot for recovery plan '${blueprintName}' failed.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureNo</p> <p>BlueprintWaitOnDemandSnapshotStarted</p> <pre><code>Waiting for on demand snapshot for recovery plan '${blueprintName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintWaitOnDemandSnapshotSucceed</p> <pre><code>Waiting on demand snapshot for recovery plan '${blueprintName}' succeeded.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CleanupFailoverCanceled</p> <pre><code>Canceled the failover cleanup for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>CleanupFailoverCanceling</p> <pre><code>Canceling the failover cleanup for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>CleanupFailoverFailed</p> <pre><code>Failed to cleanup failover for recovery plan '${name}' with ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>CleanupFailoverStarted</p> <pre><code>Started failover cleanup for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CleanupFailoverSuccess</p> <pre><code>Successfully completed the failover cleanup for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureNo</p> <p>CleanupFailoverTaskFailed</p> <pre><code>Failed to cleanup recovery plan ${name}: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>CleanupFailoverTaskFailedWithUserComment</p> <pre><code>Failed to cleanup recovery plan '${name}'. ${comment} : ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>CleanupFailoverTaskStarted</p> <pre><code>Started cleanup for recovery plan ${name}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CleanupFailoverTaskSucceed</p> <pre><code>Successfully completed the cleanup for recovery plan ${name}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CleanupFailoverTaskSucceedWithUserComment</p> <pre><code>Successfully completed the cleanup for recovery plan '${name}'. ${comment}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>FailbackCloudMachineShutdownFailed</p> <pre><code>Failed to shut down ${instanceType} ${instanceName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskFailureNo</p> <p>FailbackCloudMachineShutdownSucceed</p> <pre><code>Shut down ${instanceType} ${instanceName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>FailbackCloudMachineShutdownTaskFailed</p> <pre><code>During failover, system was unable to shutdown the child ${instanceType} of recovery plan '${blueprintName}': ${reason}. Please shutdown the child ${instanceType} manually to avoid potential resource conflicts with the child ${instanceType} spun up during failover. Resource conflicts, such as IP address collisions, may result in failures, including failure to boot during failover.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>FailbackCloudMachineShutdownTaskStarted</p> <pre><code>Started the shutdown process for recovery plan child ${instanceType}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>FailbackCloudMachineShutdownTaskSucceed</p> <pre><code>Shut down all recovery plan child ${instanceType}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>FailbackCreateOnDemandBlueprintSnapshotTaskFailed</p> <pre><code>Failed to create a snapshot for the current state of the recovery plan '${blueprintName}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>FailbackCreateOnDemandBlueprintSnapshotTaskStarted</p> <pre><code>Started taking a snapshot for the current state of the recovery plan '${blueprintName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>FailbackCreateOnDemandBlueprintSnapshotTaskSucceed</p> <pre><code>Created a snapshot for the current state of the recovery plan '${blueprintName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>FailbackDeprecatePrimaryAppTaskFailed</p> <pre><code>Failed to deprecate the primary recovery plan '${blueprintName}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>FailbackReprotectTaskFailed</p> <pre><code>Failed to reprotect the recovery plan '${blueprintName}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>FailbackReprotectTaskStarted</p> <pre><code>Reprotecting the recovery plan '${blueprintName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>FailbackReprotectTaskSucceeded</p> <pre><code>Reprotected the recovery plan '${blueprintName}' with SLA '${slaName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>FailbackSyncRecoverySpecTaskFailed</p> <pre><code>The recovery plan '${blueprintName}' at the target cluster could not be synchronized with the source due to a communication issue. This could be a result of network issues between the source and target clusters or an incorrect replication configuration. Please resolve the issue to make sure the replication has been setup correctly between the source cluster and the target cluster, then retry the failover job.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>FailbackSyncRecoverySpecTaskStarted</p> <pre><code>Started syncing the latest recovery spec to the target cluster.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>FailbackSyncRecoverySpecTaskSucceed</p> <pre><code>Successfully synced the latest recovery spec to the target cluster.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>FailoverAssignClonedSLAFailed</p> <pre><code>Failed to assign the cloned SLA to the newly created recovery plan: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>FailoverAssignSLAFailed</p> <pre><code>Failed to assign the SLA '${slaName}' to the newly created recovery plan: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>FailoverDeprecatePrimaryAppTaskFailed</p> <pre><code>Failed to deprecate the primary recovery plan '${blueprintName}': ${reason}, the ${instanceType} should be shutdown manually.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>FailoverDeprecatePrimaryAppTaskStarted</p> <pre><code>Started to deprecate the primary recovery plan '${blueprintName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>FailoverDeprecatePrimaryAppTaskSucceed</p> <pre><code>Successfully deprecated the primary recovery plan '${blueprintName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>FailoverSLANotFound</p> <pre><code>SLA not found when assigning SLA to the newly created recovery plan.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>SyncFailbackTaskFailed</p> <pre><code>Failover failed on cluster '${clusterName}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>SyncFailbackTaskSucceed</p> <pre><code>Failover succeeded on cluster '${clusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>TriggerFailbackTaskFailed</p> <pre><code>Failed to trigger failover job for recovery plan to the point in time: ${recoveryPoint} on cluster '${clusterName}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>TriggerFailbackTaskFailedWithTimeRange</p> <pre><code>Failed to trigger failover job for recovery plan to the point in time: range from ${startTime} to ${endTime} on cluster '${clusterName}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>TriggerFailbackTaskStarted</p> <pre><code>Failover job for recovery plan to the point in time: ${recoveryPoint} triggered on cluster '${clusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>TriggerFailbackTaskStartedWithTimeRange</p> <pre><code>Failover job for recovery plan to the point in time: range from ${startTime} to ${endTime} triggered on cluster '${clusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>TriggerFailbackTaskSucceed</p> <pre><code>Triggered a failover job for recovery plan to the point in time: ${recoveryPoint} on cluster '${clusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>TriggerFailbackTaskSucceedWithTimeRange</p> <pre><code>Triggered a failover job for recovery plan to the point in time: range from ${startTime} to ${endTime}, on cluster '${clusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ValidateRecoverySpecTaskFailed</p> <pre><code>Failed to validate the recovery spec of recovery plan '${blueprintName}' on cluster '${clusterName}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>ValidateRecoverySpecTaskStarted</p> <pre><code>The recovery spec of recovery plan '${blueprintName}' is being validated on cluster '${clusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>ValidateRecoverySpecTaskSucceed</p> <pre><code>Validated the recovery spec of recovery plan '${blueprintName}' on cluster '${clusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Failover/#appflows","title":"appflows","text":"<p>BlueprintFailoverCleanupStart</p> <pre><code>${userEmail} triggered cleanup job for recovery plan '${blueprintName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>BlueprintFailoverStart</p> <pre><code>${userEmail} triggered failover for recovery plan '${blueprintName}' to ${targetSite}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>BlueprintTestFailoverStart</p> <pre><code>${userEmail} triggered test failover for recovery plan '${blueprintName}' to ${targetSite}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Failover/#rcv","title":"rcv","text":"<p>RCVGRSFailoverReestablishmentPending</p> <pre><code>Rubrik Cloud Vault location '${locName}' has been successfully  failed over to '${regionType}' region, '${currentRegionName}'  with LRS redundancy. Rubrik is now attempting to re-establish  GRS redundancy in the ${pairedRegionName} region.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>RCVGRSPrimaryFailoverReestablishmentSuccess</p> <pre><code>The Rubrik Cloud Vault '${locName}' has failed back to the former  primary region '${primaryRegionName}' and Rubrik has successfully  re-established the GRS redundancy. You can now enable '${locName}'  to resume archival.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>RCVGRSSecondaryFailoverReestablishmentSuccess</p> <pre><code>Successfully re-established GRS redundancy for Rubrik Cloud Vault  location '${locName}' between the primary region ${primaryRegionName}  and the secondary region ${secondaryRegionName}. You may initiate a  failback to the former primary region ${primaryRegionName} at any time  to resume archival to '${locName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/ISOLATED_RECOVERY/","title":"ISOLATED RECOVERY","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/ISOLATED_RECOVERY/#app_failover","title":"app_failover","text":"<p>CleanupIsolatedRecoveryFailed</p> <pre><code>Failed to complete the clean up: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>CleanupIsolatedRecoveryStarted</p> <pre><code>Starting cleaning up isolated recovery\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CleanupIsolatedRecoverySuccess</p> <pre><code>Successfully completed the clean up\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CleanupIsolatedRecoveryTaskFailed</p> <pre><code>Unable to clean up virtual machines: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>CleanupIsolatedRecoveryTaskStarted</p> <pre><code>Starting clean up of virtual machines\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CleanupIsolatedRecoveryTaskSucceeded</p> <pre><code>Successfully cleaned up virtual machines\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>IsolatedRecoveryConfigurationFailed</p> <pre><code>Failed to complete configuration of virtual machines: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>IsolatedRecoveryConfigurationStarted</p> <pre><code>Starting configuration of virtual machines\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>IsolatedRecoveryConfigurationSucceeded</p> <pre><code>Successfully completed configuration of virtual machines\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>IsolatedRecoveryDeployEnvironmentFailed</p> <pre><code>Failed to deploy isolated recovery environment for isolated recovery of recovery plan '${planName}', recovery name: '${recoveryName}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>IsolatedRecoveryDeployEnvironmentStarted</p> <pre><code>Starting deployment of isolated recovery environment for isolated recovery of recovery plan '${planName}', recovery name: '${recoveryName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>IsolatedRecoveryDeployEnvironmentSucceeded</p> <pre><code>Successfully completed deployment of isolated recovery environment for isolated recovery of recovery plan '${planName}', recovery name: '${recoveryName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>IsolatedRecoveryFailed</p> <pre><code>Failed to complete isolated recovery: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>IsolatedRecoveryFinalizeFailed</p> <pre><code>Failed to complete final tasks of releasing resources for isolated recovery: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>IsolatedRecoveryFinalizeStarted</p> <pre><code>Starting final tasks of releasing resources for isolated recovery\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>IsolatedRecoveryFinalizeSucceeded</p> <pre><code>Successfully completed final tasks of releasing resources for isolated recovery\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>IsolatedRecoveryNetworkConfigurationFailed</p> <pre><code>Error occurred during network configuration of virtual machines\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>IsolatedRecoveryNetworkConfigurationStarted</p> <pre><code>Starting to execute network configuration\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>IsolatedRecoveryNetworkConfigurationSucceeded</p> <pre><code>Successfully completed network configuration of virtual machines\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>IsolatedRecoveryPostScriptFailed</p> <pre><code>Error occured during validation of post-recovery scripts\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>IsolatedRecoveryPostScriptStarted</p> <pre><code>Starting to execute post-recovery scripts\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>IsolatedRecoveryPostScriptSucceeded</p> <pre><code>Successfully completed validation of post-recovery scripts\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>IsolatedRecoveryPrepareDataFailed</p> <pre><code>Failed to complete initialization process for isolated recovery: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>IsolatedRecoveryPrepareDataStarted</p> <pre><code>Starting initialization process for isolated recovery\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>IsolatedRecoveryPrepareDataSucceeded</p> <pre><code>Successfully completed initialization process for isolated recovery\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>IsolatedRecoveryPrepareResourceFailed</p> <pre><code>Failed to complete resource validation and initialization: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>IsolatedRecoveryPrepareResourceStarted</p> <pre><code>Starting resource validation and initialization\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>IsolatedRecoveryPrepareResourceSucceeded</p> <pre><code>Successfully completed resource validation and initialization\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>IsolatedRecoveryRecoverObjectsFailed</p> <pre><code>Failed to complete recovery of virtual machines: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>IsolatedRecoveryRecoverObjectsStarted</p> <pre><code>Starting recovery of virtual machines\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>IsolatedRecoveryRecoverObjectsSucceeded</p> <pre><code>Successfully completed recovery of virtual machines\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>IsolatedRecoveryScheduled</p> <pre><code>Scheduled a job to execute isolated recovery\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>IsolatedRecoveryStarted</p> <pre><code>Starting isolated recovery via ${dataTransferType}. Use the ${undoOnFailure} setting to abort and cleanup the recovery.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>IsolatedRecoverySucceeded</p> <pre><code>Successfully completed isolated recovery\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/ISOLATED_RECOVERY/#appflows","title":"appflows","text":"<p>IsolatedRecoveryCleanupTriggered</p> <pre><code>${userEmail} triggered an isolated recovery cleanup job for recovery '${recoveryName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>IsolatedRecoveryTriggered</p> <pre><code>${userEmail} triggered an isolated recovery '${recoveryName}' to ${targetSite}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Index/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Index/#azuread","title":"azuread","text":"<p>AzureADIndexJobCanceled</p> <pre><code>Canceled snapshot indexing for directory \\\"${adDirectory}\\\".\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AzureADIndexJobCanceling</p> <pre><code>Canceling snapshot indexing for directory \\\"${adDirectory}\\\".\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>AzureADIndexJobFailed</p> <pre><code>Unable to index snapshot for directory \\\"${adDirectory}\\\".\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureADIndexJobQueued</p> <pre><code>Queued snapshot indexing for directory \\\"${adDirectory}\\\".\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>AzureADIndexJobStarted</p> <pre><code>Started snapshot indexing for directory \\\"${adDirectory}\\\".\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureADIndexJobSucceeded</p> <pre><code>Successfully completed snapshot indexing for directory  \\\"${adDirectory}\\\".\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Index/#cloudnative","title":"cloudnative","text":"<p>CloudNativeDeleteEmptyDiskTaskFailed</p> <pre><code>Failed to delete scratch ${diskTypeDisplay}(s) in region ${region}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>CloudNativeDeleteEmptyDiskTaskStarted</p> <pre><code>Deleting scratch ${diskTypeDisplay}(s) in region ${region}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CloudNativeDeleteEmptyDiskTaskSucceeded</p> <pre><code>Deleted scratch ${diskTypeDisplay}(s) in region ${region}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeIndexSnapshotBegin</p> <pre><code>Started indexing of snapshot taken at ${snapshotTimeDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CloudNativeIndexSnapshotFailedRetryable</p> <pre><code>Failed to index snapshot taken at ${snapshotTimeDisplay} in the ${indexingAttempt} attempt. Reason: ${reason}. It will be retried automatically.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>CloudNativeIndexSnapshotFailedUnindexable</p> <pre><code>Failed to index snapshot taken at ${snapshotTimeDisplay} in the ${indexingAttempt} attempt. Reason: ${reason}. Skipping indexing of this snapshot.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>CloudNativeIndexSnapshotsDeleteDisksTaskFailed</p> <pre><code>Failed to delete ${diskTypeDisplay}(s) for ${numSnapshots} snapshot(s).\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>CloudNativeIndexSnapshotsDeleteDisksTaskStarted</p> <pre><code>Deleting ${diskTypeDisplay}(s) for ${numSnapshots} snapshot(s).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CloudNativeIndexSnapshotsDeleteDisksTaskSucceeded</p> <pre><code>Deleted ${diskTypeDisplay}(s) for ${numSnapshots} snapshot(s).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeIndexSnapshotsJobCanceled</p> <pre><code>Canceled indexing of the snapshots of the ${snappableDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>CloudNativeIndexSnapshotsJobCanceling</p> <pre><code>Canceling indexing of the snapshots of the ${snappableDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>CloudNativeIndexSnapshotsJobFailed</p> <pre><code>Failed to index snapshots of the ${snappableDisplay}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>CloudNativeIndexSnapshotsJobStarted</p> <pre><code>${userEmail} started indexing of the snapshot taken at ${snapshotTimeDisplay} of the ${snappableDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CloudNativeIndexSnapshotsJobStarted</p> <pre><code>Started indexing of the snapshots of the ${snappableDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeIndexSnapshotsJobStartFailed</p> <pre><code>${userEmail} failed to start indexing of the snapshot taken at ${snapshotTimeDisplay} of the ${snappableDisplay}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>CloudNativeIndexSnapshotsJobSucceeded</p> <pre><code>Successfully indexed ${numSnapshots} snapshot(s) of the ${snappableDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CloudNativeIndexSnapshotsLaunchDisksTaskFailed</p> <pre><code>Failed to launch ${diskTypeDisplay}(s) for ${numSnapshots} snapshot(s).\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>CloudNativeIndexSnapshotsLaunchDisksTaskStarted</p> <pre><code>Launching ${diskTypeDisplay}(s) for ${numSnapshots} snapshot(s).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CloudNativeIndexSnapshotsLaunchDisksTaskSucceeded</p> <pre><code>Launched ${diskTypeDisplay}(s) for ${numSnapshots} snapshot(s).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeIndexSnapshotsOnDemandJobCanceled</p> <pre><code>Canceled indexing of the snapshot taken at ${snapshotTimeDisplay} of the ${snappableDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>CloudNativeIndexSnapshotsOnDemandJobCanceling</p> <pre><code>Canceling indexing of the snapshot taken at ${snapshotTimeDisplay} of the ${snappableDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>CloudNativeIndexSnapshotsOnDemandJobFailed</p> <pre><code>Failed to index snapshot taken at ${snapshotTimeDisplay} of the ${snappableDisplay}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>CloudNativeIndexSnapshotsOnDemandJobQueued</p> <pre><code>Queued indexing of the snapshot taken at ${snapshotTimeDisplay} of the ${snappableDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>CloudNativeIndexSnapshotsOnDemandJobStarted</p> <pre><code>Started indexing of the snapshot taken at ${snapshotTimeDisplay} of the ${snappableDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeIndexSnapshotsOnDemandJobSucceeded</p> <pre><code>Successfully indexed snapshot taken at ${snapshotTimeDisplay} of the ${snappableDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CloudNativeIndexSnapshotSucceeded</p> <pre><code>Successfully indexed snapshot taken at ${snapshotTimeDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CloudNativeIndexSnapshotsWaitForSnappableIndexTaskFailed</p> <pre><code>Failed to make ${numSnapshots} snapshot(s) available for file recovery.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>CloudNativeIndexSnapshotsWaitForSnappableIndexTaskStarted</p> <pre><code>Waiting for ${numSnapshots} snapshot(s) to be available for file recovery.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CloudNativeIndexSnapshotsWaitForSnappableIndexTaskSucceeded</p> <pre><code>${numSnapshots} snapshot(s) are available for file recovery.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Index/#o365","title":"o365","text":"<p>O365IndexTaskFailed</p> <pre><code>Failed to index ${user} Microsoft 365 ${snappable}. We will retry automatically. Reason: ${reason}. (Error ID: ${errorID}). For more information on this error please visit https://support.rubrik.com/articles/How_To/000002821\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365IndexTaskFailedWarning</p> <pre><code>Unable to index ${user} Microsoft 365 ${snappable}. Rubrik will automatically retry indexing this user. Reason: ${reason}. (Error ID: ${errorID}). For more information on this error, see https://support.rubrik.com/articles/How_To/000002821\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>O365IndexTaskSucceededWithSkip</p> <pre><code>Index completed. ${skipCount} ${itemType} were skipped because ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Index/#radar_hawkeye_indexing","title":"radar_hawkeye_indexing","text":"<p>RadarHawkeyeBuildIndexFailed</p> <pre><code>Failed to prepare Data Threat Analytics investigation view for snapshot taken on ${snapshotDate} for workload ${snappableName}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>RadarHawkeyeBuildIndexQueued</p> <pre><code>Preparing Data Threat Analytics investigation view for snapshot taken on ${snapshotDate} for workload ${snappableName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>RadarHawkeyeBuildIndexStarted</p> <pre><code>Started preparing Data Threat Analytics investigation view for snapshot taken on ${snapshotDate} for workload ${snappableName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>RadarHawkeyeBuildIndexSucceeded</p> <pre><code>Successfully prepared Data Threat Analytics investigation view for snapshot taken on ${snapshotDate} for workload ${snappableName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/LocalRecovery/","title":"LocalRecovery","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/LocalRecovery/#app_failover","title":"app_failover","text":"<p>BlueprintLocalRecoveryCanceled</p> <pre><code>In-place recovery canceled for the recovery plan '${name}' on '${location}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>BlueprintLocalRecoveryCanceling</p> <pre><code>Canceling in-place recovery for the recovery plan '${name}' on '${location}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>BlueprintLocalRecoveryDataIngestionFailed</p> <pre><code>'${dataIngestionOperation}' recovery failed for the recovery plan '${name}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>BlueprintLocalRecoveryDataIngestionStarted</p> <pre><code>Starting the '${dataIngestionOperation}' process for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintLocalRecoveryDataIngestionSucceed</p> <pre><code>'${dataIngestionOperation}' process for in-place recovery succeeded for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintLocalRecoveryFailed</p> <pre><code>In-place recovery failed for the recovery plan '${name}' on '${location}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>BlueprintLocalRecoveryFinalizeFailed</p> <pre><code>Final in-place recovery tasks failed for recovery plan '${name}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>BlueprintLocalRecoveryFinalizeStarted</p> <pre><code>Starting the final in-place recovery tasks for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintLocalRecoveryFinalizeSucceed</p> <pre><code>Final in-place recovery tasks succeeded for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>BlueprintLocalRecoveryPostScriptOptFailed</p> <pre><code>Unable to execute post scripts on the in-place recovered cluster '${sourceClusterName}' for the recovery plan '${name}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>BlueprintLocalRecoveryPostScriptOptStarted</p> <pre><code>Starting to execute post scripts on the in-place recovered cluster '${sourceClusterName}' for the recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintLocalRecoveryPostScriptOptSucceed</p> <pre><code>The in-place recovery cluster '${sourceClusterName}' post scripts setup succeeded for the recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintLocalRecoveryPrepareDataFailed</p> <pre><code>In-place recovery initialization process failed for recovery plan '${name}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>BlueprintLocalRecoveryPrepareDataStarted</p> <pre><code>Starting the in-place recovery initialization process for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintLocalRecoveryPrepareDataSucceed</p> <pre><code>In-place recovery initialization process succeeded for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintLocalRecoveryPrepareResourceFailed</p> <pre><code>The in-place recovery resource validation and initialization failed for recovery plan '${name}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>BlueprintLocalRecoveryPrepareResourceStarted</p> <pre><code>Starting the in-place recovery resource validation and initialization process for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintLocalRecoveryPrepareResourceSucceed</p> <pre><code>The in-place recovery resource validation and initialization succeeded for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintLocalRecoveryProvisionFailed</p> <pre><code>Unable to set up Rubrik cluster '${targetClusterName}' for in-place recovery of recovery plan '${name}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>BlueprintLocalRecoveryProvisionStarted</p> <pre><code>Setting up Rubrik cluster '${targetClusterName}' for in-place recovery of recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintLocalRecoveryProvisionSucceed</p> <pre><code>Reconfiguration of virtual machines on Rubrik cluster '${targetClusterName}' succeeded for in-place recovery of recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintLocalRecoveryProvisionSucceedWithNetworkReconfigureFailureEvent</p> <pre><code>Reconfiguration of virtual machines on target Rubrik cluster '${targetClusterName}' failed for recovery plan '${name}'. Ignoring and continuing.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>BlueprintLocalRecoveryScheduled</p> <pre><code>Scheduled in-place recovery job for recovery plan '${name}' on '${location}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>BlueprintLocalRecoveryStarted</p> <pre><code>Starting in-place recovery for recovery plan '${name}' to '${location}'. Abort and cleanup setting is ${undoOnFailure}. Skipping network reconfiguration errors is ${skipNetworkError}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintLocalRecoverySuccess</p> <pre><code>Successfully completed in-place recovery for the recovery plan '${name}' on '${location}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/LocalRecovery/#appflows","title":"appflows","text":"<p>BlueprintLocalRecoveryStart</p> <pre><code>${userEmail} triggered local recovery for recovery plan '${blueprintName}' to ${targetSite}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/LockSnapshot/","title":"LockSnapshot","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/LockSnapshot/#snappables","title":"snappables","text":"<p>SnapshotImmutabilityJobFailed</p> <pre><code>Failed to lock snapshots for ${snappableDisplay}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>SnapshotImmutabilityJobLockSnapshotsTaskMoreFailuresThanThreshold</p> <pre><code>Polaris failed to lock ${failureCountBeyondThreshold} more snapshot(s) of the ${snappableDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>SnapshotImmutabilityJobLockSnapshotsTaskPartiallyFailed</p> <pre><code>Polaris failed to lock snapshot taken at ${snapshotTimeDisplay} of the ${snappableDisplay}. Reason: ${errorMessageDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>SnapshotImmutabilityJobSucceeded</p> <pre><code>Successfully locked snapshots for ${workloadDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Login/","title":"Login","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Login/#authz","title":"authz","text":"<p>ClientAuthenticationFailed</p> <pre><code>${clientName} unable to authenticate with invalid secret.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>ClientIdInvalid</p> <pre><code>Unable to authenticate with invalid service account ID, ${clientId}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>LoginBlockedIP</p> <pre><code>Login by ${actorUserEmail} from ${ip} blocked because the request came from outside of the IP whitelist.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>LoginFailedDueToAccountLock</p> <pre><code>Login failed for ${userName} because the user is locked.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>LoginFailedInsufficientPermissions</p> <pre><code>Login by ${userName} (${domain}) from ${ipAddress} failed because the  user does not have any assigned roles.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>LoginFailedSSOUnauthorizedForGroups</p> <pre><code>Login by ${userEmail}(SSO) failed.  User does not belong to any of the SSO groups authorized in RSC.  User's SSO groups: (${groups})\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>LoginSucceeded</p> <pre><code>${userName} logged in.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>LoginSucceededWithNotification</p> <pre><code>${userName} logged in.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>LogoutSucceeded</p> <pre><code>${userName} was logged out ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>PasskeyLoginFailed</p> <pre><code>${username} failed to login with passkey.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>PasswordLoginFailedKnownUser</p> <pre><code>Known user, ${username}, was unable to login with an invalid password.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>PasswordLoginFailedUnknownUser</p> <pre><code>Login failed. User ${username} does not exist.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>ResetPasswordMailSent</p> <pre><code>Password reset email sent for ${userName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TotpLoginFailed</p> <pre><code>${username} failed to login with Rubrik Two-Step Verification.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>UpdateUserPasswordFailed</p> <pre><code>${userName} was unable to update their password. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureYes</p> <p>UpdateUserPasswordSucceeded</p> <pre><code>${userName} succeeded to update their password.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Login/#rkcli","title":"rkcli","text":"<p>RkcliLogin</p> <pre><code>Admin user logged in to rkcli on the ${node} node from ${ip}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Ownership/","title":"Ownership","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Ownership/#rbac","title":"rbac","text":"<p>AccountOwnerAdded</p> <pre><code>Polaris account ownership assigned to ${user} by ${invokingUser}. Current owners are ${owners}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p> <p>AccountOwnerRemoved</p> <pre><code>Polaris account ownership revoked from ${user} by ${invokingUser}. Current owners are ${owners}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Quarantine/","title":"Quarantine","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Quarantine/#radar","title":"radar","text":"<p>RadarQuarantineSnapshotCompleted</p> <pre><code>${user} quarantined ${count} path(s) in a backup of ${snappableName} taken on ${snapshotDate}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RadarReleaseSnapshotsFromQuarantineCompleted</p> <pre><code>${user} released ${count} path(s) from quarantine in a backup of ${snappableName} taken on ${snapshotDate}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/RECOVERY_SCHEDULE/","title":"RECOVERY SCHEDULE","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/RECOVERY_SCHEDULE/#appflows","title":"appflows","text":"<p>RecoveryScheduleCreationSucceeded</p> <pre><code>${userEmail} successfully created recovery schedule for  recovery plan '${planName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RecoveryScheduleDeletionSucceeded</p> <pre><code>${userEmail} successfully deleted recovery schedule for recovery plan '${planName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RecoveryScheduleUpdateSucceeded</p> <pre><code>${userEmail} successfully updated recovery schedule for recovery plan '${planName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/RUBY_AI/","title":"RUBY AI","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/RUBY_AI/#ruby_ai","title":"ruby_ai","text":"<p>DisabledRuby</p> <pre><code>${userEmail} successfully turned off the usage of Ruby.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>EnabledRuby</p> <pre><code>${userEmail} successfully enabled the usage of Ruby.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RubyConfirmation</p> <pre><code>${userEmail} confirmed Ruby ${action}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RubyDenied</p> <pre><code>${userEmail} did not confirm Ruby ${action}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/RadarAnalysis/","title":"RadarAnalysis","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/RadarAnalysis/#anomaly","title":"anomaly","text":"<p>DetailedEncryptionAnalysisFinished</p> <pre><code>Finished detailed encryption analysis for snapshot taken on ${snapshotDate} of ${snappableType} '${snappableName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>DetailedEncryptionAnalysisStarted</p> <pre><code>Started detailed encryption analysis for snapshot taken on ${snapshotDate} of ${snappableType} '${snappableName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>RadarAnalysisFinished</p> <pre><code>Finished Anomaly Detection analysis for snapshot taken on ${snapshotDate} of ${snappableType} '${snappableName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>RadarAnalysisStarted</p> <pre><code>Started Anomaly Detection analysis for snapshot taken on ${snapshotDate} of ${snappableType} '${snappableName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>RansomwareDetectionJobFailed</p> <pre><code>Ransomware detection job for snapshot taken on ${snapshotDate} of ${snappableType} '${snappableName}' failed: ${failureReason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureNo</p> <p>RansomwareDetectionJobScheduleFailed</p> <pre><code>Unable to schedule ransomware detection job on cluster ${clusterName} due to ${failureReason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureNo</p> <p>RansomwareDetectionJobStarted</p> <pre><code>Starting ransomware detection job on cluster ${clusterName} for snapshot taken on ${snapshotDate} of ${snappableType} '${snappableName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Recovery/","title":"Recovery","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Recovery/#active_directory","title":"active_directory","text":"<p>ActiveDirectoryLiveMountStarted</p> <pre><code>${username} started a job to mount the snapshot ${snapshotFid} of the  Active Directory domain controller ${dcName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ActiveDirectoryLiveMountStartFailed</p> <pre><code>${username} unable to start a job to mount the snapshot ${snapshotFid}  of the Active Directory domain controller ${dcName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ActiveDirectoryModifyLiveMountStarted</p> <pre><code>${username} updated the snapshot mount of volume export  ${volumeExportFid} of the Active Directory domain controller ${dcName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ActiveDirectoryModifyLiveMountStartFailed</p> <pre><code>${username} unable to update the snapshot mount of volume export  ${volumeExportFid} of the Active Directory domain controller ${dcName}.  Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ActiveDirectoryObjectsRestoreStarted</p> <pre><code>${username} started a job to ${restoreOperation} on the Active Directory domain controller '${dcName}' using the snapshot ${snapshotFid}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ActiveDirectoryObjectsRestoreStartFailed</p> <pre><code>${username} unable to start a job to ${restoreOperation} on the Active Directory domain controller '${dcName}' using the snapshot ${snapshotFid}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ActiveDirectoryRestoreToDCJobStarted</p> <pre><code>${username} started a job to restore the Active Directory domain controller ${dcName} using the snapshot ${snapshotFid}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ActiveDirectoryRestoreToDCJobStartFailed</p> <pre><code>${username} unable to start a job to restore the Active Directory domain controller ${dcName} using the snapshot ${snapshotFid}. Reason:  ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ActiveDirectoryRestoreToHostJobStarted</p> <pre><code>${username} started a job to restore the Active Directory domain controller ${dcName} to the host ${hostName} using the snapshot ${snapshotFid}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ActiveDirectoryRestoreToHostJobStartFailed</p> <pre><code>${username} unable to start a job to restore the Active Directory domain controller ${dcName} to the host ${hostName} using the snapshot ${snapshotFid}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ActiveDirectoryUnmountStarted</p> <pre><code>${username} started a job to unmount the snapshot mount of volume  export ${volumeExportFid} of the Active Directory domain controller  ${dcName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ActiveDirectoryUnmountStartFailed</p> <pre><code>${username} unable to start a job to unmount the snapshot mount of  volume export ${volumeExportFid} of the  Active Directory domain  controller ${dcName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Recovery/#awsnative","title":"awsnative","text":"<p>AwsNativeExportEbsSnapshotAttachVolumeTaskFailed</p> <pre><code>Failed to attach the ${volumeDisplayName} EBS Volume to the ${instanceDisplayName} EC2 Instance at ${devicePath} device path.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AwsNativeExportEbsSnapshotAttachVolumeTaskStarted</p> <pre><code>Attaching the ${volumeDisplayName} EBS Volume to the ${instanceDisplayName} EC2 Instance at ${devicePath} device path.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AwsNativeExportEbsSnapshotAttachVolumeTaskSucceeded</p> <pre><code>Successfully attached the ${volumeDisplayName} EBS Volume to the ${instanceDisplayName} EC2 Instance at ${devicePath} device path.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeExportEbsSnapshotCopySnapshotTaskFailed</p> <pre><code>Failed to copy the ${snapshotType} snapshot to the ${destinationRegion} region on the ${awsAccount} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AwsNativeExportEbsSnapshotCopySnapshotTaskStarted</p> <pre><code>Copying the ${snapshotType} snapshot to the ${destinationRegion} region on the ${awsAccount} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AwsNativeExportEbsSnapshotCopySnapshotTaskSucceeded</p> <pre><code>Successfully copied the ${snapshotType} snapshot to the ${destinationRegion} region on the ${awsAccount} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeExportEbsSnapshotCreateVolumeTaskFailed</p> <pre><code>Failed to create EBS Volume from the ${snapshotType} snapshot in the ${availabilityZone} availability zone.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AwsNativeExportEbsSnapshotCreateVolumeTaskStarted</p> <pre><code>Creating EBS Volume from the ${snapshotType} snapshot in the ${availabilityZone} availability zone.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AwsNativeExportEbsSnapshotCreateVolumeTaskSucceeded</p> <pre><code>Successfully created the ${volumeDisplayName} EBS Volume from the ${snapshotType} snapshot in the ${availabilityZone} availability zone.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeExportEbsSnapshotDetachVolumeTaskFailed</p> <pre><code>Failed to detach the ${volumeDisplayName} EBS Volume from the ${instanceDisplayName} EC2 Instance attached at ${devicePath} device path.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AwsNativeExportEbsSnapshotDetachVolumeTaskStarted</p> <pre><code>Detaching the ${volumeDisplayName} EBS Volume from the ${instanceDisplayName} EC2 Instance attached at ${devicePath} device path.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AwsNativeExportEbsSnapshotDetachVolumeTaskSucceeded</p> <pre><code>Successfully detached the ${volumeDisplayName} EBS Volume from the ${instanceDisplayName} EC2 Instance attached at ${devicePath} device path.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeExportEbsSnapshotJobCanceled</p> <pre><code>Canceled the export the ${snapshotType} snapshot of the ${volumeDisplayName} EBS Volume taken on ${snapshotCreationTime} from the ${sourceRegion} region on the ${sourceAwsAccountDisplayName} AWS account to the ${availabilityZone} availability zone in the ${destinationRegion} region in the ${targetAwsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AwsNativeExportEbsSnapshotJobFailed</p> <pre><code>Failed to export the ${snapshotType} snapshot of the ${volumeDisplayName} EBS Volume taken on ${snapshotCreationTime} from the ${sourceRegion} region on the ${sourceAwsAccountDisplayName} AWS account to the ${availabilityZone} availability zone in the ${destinationRegion} region in the ${targetAwsAccountDisplayName} AWS account. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AwsNativeExportEbsSnapshotJobQueued</p> <pre><code>Queued the export of the ${snapshotType} snapshot of the ${volumeDisplayName} EBS Volume taken on ${snapshotCreationTime} from the ${sourceRegion} region on the ${sourceAwsAccountDisplayName} AWS account to the ${availabilityZone} availability zone in the ${destinationRegion} region in the ${targetAwsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>AwsNativeExportEbsSnapshotJobStarted</p> <pre><code>Started the export of the ${snapshotType} snapshot of the ${volumeDisplayName} EBS Volume taken on ${snapshotCreationTime} from the ${sourceRegion} region on the ${sourceAwsAccountDisplayName} AWS account to the ${availabilityZone} availability zone in the ${destinationRegion} region in the ${targetAwsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeExportEbsSnapshotJobSucceeded</p> <pre><code>Successfully exported the ${snapshotType} snapshot of the ${volumeDisplayName} EBS Volume taken on ${snapshotCreationTime} from the ${sourceRegion} region on the ${sourceAwsAccountDisplayName} AWS account to the ${availabilityZone} availability zone in the ${destinationRegion} region in the ${targetAwsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AwsNativeExportEbsSnapshotSkipRestoreTasks</p> <pre><code>Skipped replacing original volume: ${skipReason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeExportEbsSnapshotStartInstanceTaskFailed</p> <pre><code>Failed to start the ${instanceDisplayName} EC2 Instance.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AwsNativeExportEbsSnapshotStartInstanceTaskStarted</p> <pre><code>Starting the ${instanceDisplayName} EC2 Instance.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AwsNativeExportEbsSnapshotStartInstanceTaskSucceeded</p> <pre><code>Successfully started the ${instanceDisplayName} EC2 Instance.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeExportEbsSnapshotStopInstanceTaskFailed</p> <pre><code>Failed to stop the ${instanceDisplayName} EC2 Instance in the ${availabilityZone} availability zone in the ${region} region.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AwsNativeExportEbsSnapshotStopInstanceTaskStarted</p> <pre><code>Stopping the ${instanceDisplayName} EC2 Instance in the ${availabilityZone} availability zone in the ${region} region.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AwsNativeExportEbsSnapshotStopInstanceTaskSucceeded</p> <pre><code>Successfully stopped the ${instanceDisplayName} EC2 Instance in the ${availabilityZone} availability zone in the ${region} region.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeExportEbsSnapshotStopInstanceTaskSucceededAlreadyStopped</p> <pre><code>The ${instanceDisplayName} EC2 Instance in the ${availabilityZone} availability zone in the ${region} region was already stopped.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeExportEbsVolumeSnapshotJobStarted</p> <pre><code>${userEmail} started the export of the ${snapshotType} snapshot of the ${volumeDisplayName} EBS Volume taken on ${snapshotCreationTime} from the ${sourceRegion} region on the ${sourceAwsAccountDisplayName} AWS account to the ${availabilityZone} availability zone in the ${destinationRegion} region in the ${targetAwsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AwsNativeExportEbsVolumeSnapshotJobStartFailed</p> <pre><code>${userEmail} failed to start the export of the ${snapshotType} snapshot of the ${volumeDisplayName} EBS Volume taken on ${snapshotCreationTime} from the ${sourceRegion} region on the ${sourceAwsAccountDisplayName} AWS account to the ${availabilityZone} availability zone in the ${destinationRegion} region in the ${targetAwsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AwsNativeExportEc2InstanceCopySnapshotTaskFailed</p> <pre><code>Failed to copy the ${snapshotType} snapshot from the ${sourceRegion} region on the ${sourceAwsAccountDisplayName} AWS account to the ${destinationRegion} region in the ${targetAwsAccountDisplayName} AWS account. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AwsNativeExportEc2InstanceCopySnapshotTaskStarted</p> <pre><code>Copying the ${snapshotType} snapshot from the ${sourceRegion} region on the ${sourceAwsAccountDisplayName} AWS account to the ${destinationRegion} region in the ${targetAwsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AwsNativeExportEc2InstanceCopySnapshotTaskSucceeded</p> <pre><code>Successfully copied the ${snapshotType} snapshot from the ${sourceRegion} region on the ${sourceAwsAccountDisplayName} AWS account to the ${destinationRegion} region in the ${targetAwsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeExportEc2InstanceJobCanceled</p> <pre><code>Canceled the export of the ${instanceDisplayName} EC2 instance from the ${snapshotType} snapshot taken on ${snapshotCreationTime} in the ${sourceRegion} region on the ${sourceAwsAccountDisplayName} AWS account to the ${destinationRegion} region in the ${targetAwsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AwsNativeExportEc2InstanceJobCanceling</p> <pre><code>Canceling the export of the ${instanceDisplayName} EC2 instance from the ${snapshotType} snapshot taken on ${snapshotCreationTime} in the ${sourceRegion} region on the ${sourceAwsAccountDisplayName} AWS account to the ${destinationRegion} region in the ${targetAwsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>AwsNativeExportEc2InstanceJobFailed</p> <pre><code>Failed to export the ${instanceDisplayName} EC2 instance from the ${snapshotType} snapshot taken on ${snapshotCreationTime} in the ${sourceRegion} region on the ${sourceAwsAccountDisplayName} AWS account to the ${destinationRegion} region in the ${targetAwsAccountDisplayName} AWS account. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AwsNativeExportEc2InstanceJobQueued</p> <pre><code>Queued the export of the ${instanceDisplayName} EC2 instance from the ${snapshotType} snapshot taken on ${snapshotCreationTime} in the ${sourceRegion} region on the ${sourceAwsAccountDisplayName} AWS account to the ${destinationRegion} region in the ${targetAwsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>AwsNativeExportEC2InstanceJobStarted</p> <pre><code>${userEmail} started the export of EC2 instance ${instanceDisplayName} from the ${snapshotType} snapshot ${snapshotDisplayName} taken on ${snapshotCreationTime} in the ${sourceRegion} region on the ${sourceAwsAccountDisplayName} AWS account to region ${destinationRegion} in the ${targetAwsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AwsNativeExportEc2InstanceJobStarted</p> <pre><code>Started the export of the ${instanceDisplayName} EC2 instance from the ${snapshotType} snapshot taken on ${snapshotCreationTime} in the ${sourceRegion} region on the ${sourceAwsAccountDisplayName} AWS account to the ${destinationRegion} region in the ${targetAwsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeExportEC2InstanceJobStartFailed</p> <pre><code>${userEmail} failed to start the export of EC2 instance from the ${snapshotType} snapshot ${snapshotDisplayName} taken on ${snapshotCreationTime} in the ${sourceRegion} region on the ${sourceAwsAccountDisplayName} AWS account to region ${destinationRegion} in the ${targetAwsAccountDisplayName} AWS account. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AwsNativeExportEc2InstanceJobSucceeded</p> <pre><code>Exported the ${instanceDisplayName} EC2 instance from the ${snapshotType} snapshot taken on ${snapshotCreationTime} in the ${sourceRegion} region on the ${sourceAwsAccountDisplayName} AWS account to the ${destinationRegion} region in the ${targetAwsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AwsNativeExportEc2InstanceLaunchInstanceTaskFailed</p> <pre><code>Failed to launch EC2 instance in the ${destinationRegion} region in the ${targetAwsAccountDisplayName} AWS account from the ${snapshotType} snapshot taken on ${snapshotCreationTime} in the ${sourceRegion} region on the ${sourceAwsAccountDisplayName} AWS account. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AwsNativeExportEc2InstanceLaunchInstanceTaskStarted</p> <pre><code>Launching EC2 instance in the ${destinationRegion} region in the ${targetAwsAccountDisplayName} AWS account from the ${snapshotType} snapshot taken on ${snapshotCreationTime} in the ${sourceRegion} on the ${sourceAwsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AwsNativeExportEc2InstanceLaunchInstanceTaskSucceeded</p> <pre><code>Successfully launched EC2 instance ${launchedInstanceDisplayName} in the ${destinationRegion} region in the ${targetAwsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeExportRdsInstanceCopySnapshotTaskFailed</p> <pre><code>Failed to copy snapshot. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AwsNativeExportRdsInstanceCopySnapshotTaskStarted</p> <pre><code>Copying ${snapshotName} snapshot.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AwsNativeExportRdsInstanceCopySnapshotTaskSucceeded</p> <pre><code>Successfully copied the ${snapshotName} snapshot in the ${destinationRegion} region from the ${sourceRegion} region.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeExportRdsInstanceCreateDependenciesTaskFailed</p> <pre><code>Failed to create ${dependencies} in the ${region} region. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AwsNativeExportRdsInstanceCreateDependenciesTaskStarted</p> <pre><code>Creating ${dependencies} in the ${region} region.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AwsNativeExportRdsInstanceCreateDependenciesTaskSucceeded</p> <pre><code>Successfully created ${dependencies} in the ${region} region.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeExportRdsInstanceJobCanceled</p> <pre><code>Canceled export of the ${instanceDisplayName} RDS database in the ${destinationRegion} region in the ${awsAccountDisplayName} AWS account from ${snapshotType} snapshot in the ${sourceRegion} region taken at ${snapshotCreationTime}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AwsNativeExportRdsInstanceJobCanceling</p> <pre><code>Canceling export of the ${instanceDisplayName} RDS database in the ${destinationRegion} region in the ${awsAccountDisplayName} AWS account from ${snapshotType} snapshot in the ${sourceRegion} region taken at ${snapshotCreationTime}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>AwsNativeExportRdsInstanceJobFailed</p> <pre><code>Failed to export the ${instanceDisplayName} RDS database in the ${destinationRegion} region in the ${awsAccountDisplayName} AWS account from ${snapshotType} snapshot in the ${sourceRegion} region taken at ${snapshotCreationTime}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AwsNativeExportRdsInstanceJobQueued</p> <pre><code>Queued the export of the ${instanceDisplayName} RDS database from the ${snapshotType} snapshot taken on ${snapshotCreationTime} in the ${sourceRegion} region on the ${awsAccountDisplayName} AWS account to the ${destinationRegion} region in the ${targetAwsAccountDisplayName} AWS account.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>AwsNativeExportRdsInstanceJobStarted</p> <pre><code>${userEmail} started export of RDS instance ${instanceDisplayName} in region ${region} on AWS account ${awsAccountDisplayName} from snapshot ${snapshotDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AwsNativeExportRdsInstanceJobStarted</p> <pre><code>Started export of the ${instanceDisplayName} RDS database.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeExportRdsInstanceJobStartFailed</p> <pre><code>${userEmail} failed to start export of RDS instance ${instanceDisplayName} in region ${region} on AWS account ${awsAccountDisplayName} from snapshot ${snapshotDisplayName} . Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AwsNativeExportRdsInstanceJobSucceeded</p> <pre><code>Export of the ${instanceDisplayName} RDS database in the ${destinationRegion} region in the ${awsAccountDisplayName} AWS account from ${snapshotType} snapshot in the ${sourceRegion} region, taken at ${snapshotCreationTime}, succeeded.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AwsNativeExportRdsInstanceLaunchClusterTaskFailed</p> <pre><code>Failed to launch the ${clusterName} RDS cluster. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AwsNativeExportRdsInstanceLaunchClusterTaskStarted</p> <pre><code>Launching the ${clusterName} RDS cluster.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AwsNativeExportRdsInstanceLaunchClusterTaskSucceeded</p> <pre><code>Successfully launched the ${clusterName} RDS cluster.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeExportRdsInstanceLaunchInstanceTaskFailed</p> <pre><code>Failed to launch the ${instanceName} RDS instance. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AwsNativeExportRdsInstanceLaunchInstanceTaskStarted</p> <pre><code>Launching the ${instanceName} RDS instance.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AwsNativeExportRdsInstanceLaunchInstanceTaskSucceeded</p> <pre><code>Successfully launched the ${instanceName} RDS instance.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeExportRdsInstancePitrJobCanceled</p> <pre><code>Canceled point in time export of the ${instanceDisplayName} RDS  database in the ${region} region on the ${awsAccountDisplayName} AWS  account at ${exportTime}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AwsNativeExportRdsInstancePitrJobFailed</p> <pre><code>Failed to export the ${instanceDisplayName} RDS database in the  ${region} region on the ${awsAccountDisplayName} AWS account with  point in time recovery operation at ${exportTime}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AwsNativeExportRdsInstancePitrJobQueued</p> <pre><code>Queued point in time export of the ${instanceDisplayName} RDS database  in the ${region} region on the ${awsAccountDisplayName} AWS account at  ${exportTime}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>AwsNativeExportRdsInstancePitrJobStarted</p> <pre><code>${userEmail} started point in time export of RDS instance ${instanceDisplayName} in region ${region} on AWS account ${awsAccountDisplayName} to ${exportTime} .\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AwsNativeExportRdsInstancePitrJobStarted</p> <pre><code>Started point in time export of the ${instanceDisplayName} RDS database.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeExportRdsInstancePitrJobStartFailed</p> <pre><code>${userEmail} failed to start point in time export of RDS instance ${instanceDisplayName} in region ${region} on AWS account ${awsAccountDisplayName} to ${exportTime}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AwsNativeExportRdsInstancePitrJobSucceeded</p> <pre><code>Export of the ${instanceDisplayName} RDS database in the ${region}  region on the ${awsAccountDisplayName} AWS account with point in time  recovery operation at ${exportTime} succeeded.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AwsNativeLaunchDiskForMaterializationTaskFailed</p> <pre><code>Failed to launch volume(s) in availability zone ${availabilityZone} of region ${region} of account ${targetCloudAccountName} for recovering the archived snapshot.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AwsNativeLaunchDiskForMaterializationTaskStarted</p> <pre><code>Launching ${numberOfVolumes} volume(s) in availability zone ${availabilityZone} of region ${region} of account ${targetCloudAccountName} for recovering the archived snapshot.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AwsNativeLaunchDiskForMaterializationTaskSucceeded</p> <pre><code>Successfully launched ${numberOfVolumes} volume(s) in availability zone ${availabilityZone} of region ${region} of account ${targetCloudAccountName} for recovering the archived snapshot.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeLaunchDiskFromMaterializeSnapshotTaskFailed</p> <pre><code>Failed to launch volume(s) in availability zone ${availabilityZone} of region ${region} of account ${accountName} from the recovered volume snapshot(s).\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AwsNativeLaunchDiskFromMaterializeSnapshotTaskStarted</p> <pre><code>Launching volume(s) in availability zone ${availabilityZone} of region ${region} of account ${accountName} from the recovered volume snapshot(s).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AwsNativeLaunchDiskFromMaterializeSnapshotTaskSucceeded</p> <pre><code>Successfully Launched volume(s) in availability zone ${availabilityZone} of region ${region} of account ${accountName} from the recovered volume snapshot(s).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeMaterializeArchivedDiskTaskFailed</p> <pre><code>Failed to write data from archived snapshot to volume(s) in region ${region} of account ${accountName}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AwsNativeMaterializeArchivedDiskTaskStarted</p> <pre><code>Writing data from archived snapshot to volume(s) in region ${region} of account ${accountName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AwsNativeMaterializeArchivedDiskTaskSucceeded</p> <pre><code>Successfully written data from archived snapshot to volume(s) in region ${region} of account ${accountName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeRecoverS3BucketPitrJobQueued</p> <pre><code>Queued point-in-time recovery of the ${sourceBucketName} S3 Bucket in the ${sourceRegion} region to ${destinationBucketName} S3 Bucket  in the ${awsAccountDisplayName} AWS account to time ${restoreTime} .\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>AwsNativeRecoverS3BucketPitrTaskCompletedPartially</p> <pre><code>Completed point-in-time recovery of the ${sourceBucketName} S3 bucket  in the ${sourceRegion} region to ${destinationBucketName} S3 bucket  in the ${awsAccountDisplayName} AWS account to time ${restoreTime}.  Successfully restored ${numRestoredSuccessful} object(s), unable to  restore ${numRestoredFailed} object(s).\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>AwsNativeRecoverS3BucketPitrTaskFailed</p> <pre><code>Unable to perform point-in-time recovery of the ${sourceBucketName} S3  bucket in the ${sourceRegion} region to ${destinationBucketName} S3  bucket in the ${awsAccountDisplayName} AWS account at ${restoreTime}.  Unable to restore ${numRestoredFailed} object(s).\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AwsNativeRecoverS3BucketProgress</p> <pre><code>Recovery is in Progress: Successfully recovered: ${processedObjects} objects. Unable to recover: ${failedObjects} objects.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AwsNativeRecoverS3BucketRecoveryInfo</p> <pre><code>Recovery is in Progress: Successfully recovered: ${processedObjects} objects. Unable to recover: ${failedObjects} objects.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AwsNativeRecoverS3BucketRecoverySummaryInfo</p> <pre><code>Download recovery failures report (the link is valid for 24 hours): ${gcsUrl}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AwsNativeRecoverS3SnapshotJobCanceled</p> <pre><code>Canceled recovery of ${sourceBucketName} S3 Bucket in the ${sourceRegion} region in the ${sourceAwsAccountDisplayName} AWS account to ${destinationBucketName} S3 Bucket in the ${destinationAwsAccountDisplayName} AWS account from snapshot taken at ${snapshotCreationTime}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AwsNativeRecoverS3SnapshotJobCanceling</p> <pre><code>Canceling recovery of ${sourceBucketName} S3 Bucket in the ${sourceRegion} region in ${sourceAwsAccountDisplayName} AWS account to ${destinationBucketName} S3 Bucket in the ${destinationAwsAccountDisplayName} AWS account from snapshot taken at ${snapshotCreationTime}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>AwsNativeRecoverS3SnapshotJobFailed</p> <pre><code>Failed to recover ${sourceBucketName} S3 Bucket in the ${sourceRegion} region in the ${sourceAwsAccountDisplayName} AWS account to ${destinationBucketName} S3 Bucket in the ${destinationAwsAccountDisplayName} AWS account from snapshot taken at ${snapshotCreationTime}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AwsNativeRecoverS3SnapshotJobQueued</p> <pre><code>Queued recovery of ${sourceBucketName} S3 Bucket in the ${sourceRegion} region in the ${sourceAwsAccountDisplayName} AWS account to ${destinationBucketName} S3 Bucket in the ${destinationAwsAccountDisplayName} AWS account from snapshot taken at ${snapshotCreationTime}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>AwsNativeRecoverS3SnapshotJobStarted</p> <pre><code>${userEmail} started recovery of ${sourceBucketName} S3 bucket in ${sourceRegion} region in ${sourceAwsAccountDisplayName} AWS account to ${destinationBucketName} S3 bucket in the ${destinationAwsAccountDisplayName} AWS account from the snapshot taken at ${snapshotCreationTime}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AwsNativeRecoverS3SnapshotJobStarted</p> <pre><code>Started recovery of the ${sourceBucketName} S3 bucket.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeRecoverS3SnapshotJobStartFailed</p> <pre><code>${userEmail} failed to start recovery of S3 bucket ${sourceBucketName} in region ${sourceRegion} in the ${sourceAwsAccountDisplayName} AWS account to ${destinationBucketName} S3 bucket on the ${destinationAwsAccountDisplayName} AWS account from snapshot taken at ${snapshotCreationTime}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AwsNativeRecoverS3SnapshotJobSucceeded</p> <pre><code>Successfully recovered ${sourceBucketName} S3 Bucket in the ${sourceRegion} region in the ${sourceAwsAccountDisplayName} AWS account to ${destinationBucketName} S3 Bucket in the ${destinationAwsAccountDisplayName} AWS account from snapshot taken at ${snapshotCreationTime}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AwsNativeRecoverS3SnapshotPitrJobCanceled</p> <pre><code>Canceled point-in-time recovery of the ${sourceBucketName} S3 bucket in the ${sourceRegion} region to ${destinationBucketName} S3 Bucket in the ${awsAccountDisplayName} AWS account to time  ${restoreTime} .\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AwsNativeRecoverS3SnapshotPitrJobCanceling</p> <pre><code>Canceling point-in-time recovery of the ${sourceBucketName} S3  Bucket in the ${sourceRegion} region to ${destinationBucketName}  S3 Bucket in the ${awsAccountDisplayName} AWS account to time  ${restoreTime} .\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>AwsNativeRecoverS3SnapshotPitrJobFailed</p> <pre><code>Failed to recover the ${sourceBucketName} S3 Bucket in the ${sourceRegion} region to ${destinationBucketName} S3 Bucket  in the ${awsAccountDisplayName} AWS account with point-in-time recovery operation to time ${restoreTime}.  Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AwsNativeRecoverS3SnapshotPitrJobStarted</p> <pre><code>${userEmail} started point-in-time recovery of S3 bucket ${sourceBucketName} in region ${sourceRegion} region to  ${destinationBucketName} S3 bucket on the AWS account  ${awsAccountDisplayName} to ${restoreTime} .\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AwsNativeRecoverS3SnapshotPitrJobStarted</p> <pre><code>Started point-in-time recovery of the ${sourceBucketName} S3 Bucket.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeRecoverS3SnapshotPitrJobStartFailed</p> <pre><code>${userEmail} failed to start point-in-time recovery of S3 bucket ${sourceBucketName} in region ${sourceRegion} region to  ${destinationBucketName} S3 bucket on the AWS account  ${awsAccountDisplayName} to ${restoreTime}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AwsNativeRecoverS3SnapshotPitrJobSucceeded</p> <pre><code>Recovery of the ${sourceBucketName} S3 Bucket in the ${sourceRegion}  region to ${destinationBucketName} S3 Bucket in the  ${awsAccountDisplayName} AWS account with point-in-time recovery  operation to time ${restoreTime} succeeded.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AwsNativeRestoreEC2InstanceAttachVolumesTaskFailed</p> <pre><code>Failed to attach volumes ${volumeNativeIds} to EC2 instance ${instanceDisplayName} in region ${region} on AWS account ${awsAccountDisplayName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AwsNativeRestoreEC2InstanceAttachVolumesTaskStarted</p> <pre><code>Attaching volumes ${volumeNativeIds} to EC2 instance ${instanceDisplayName} in region ${region} on AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AwsNativeRestoreEC2InstanceAttachVolumesTaskSucceeded</p> <pre><code>Attached volumes ${volumeNativeIds} to EC2 instance ${instanceDisplayName} in region ${region} on AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeRestoreEC2InstanceDetachVolumesTaskFailed</p> <pre><code>Failed to detach volumes ${volumeNativeIds} from EC2 instance ${instanceDisplayName} in region ${region} on AWS account ${awsAccountDisplayName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AwsNativeRestoreEC2InstanceDetachVolumesTaskStarted</p> <pre><code>Detaching volumes ${volumeNativeIds} from EC2 instance ${instanceDisplayName} in region ${region} on AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AwsNativeRestoreEC2InstanceDetachVolumesTaskSucceeded</p> <pre><code>Detached volumes ${volumeNativeIds} from EC2 instance ${instanceDisplayName} in region ${region} on AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeRestoreEC2InstanceJobCanceled</p> <pre><code>Canceled restore of EC2 instance ${instanceDisplayName} from the snapshot taken on ${snapshotCreationTime} in region ${region} on AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AwsNativeRestoreEC2InstanceJobCanceling</p> <pre><code>Canceling restore of EC2 instance ${instanceDisplayName} from the snapshot taken on ${snapshotCreationTime} in region ${region} on AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>AwsNativeRestoreEC2InstanceJobFailed</p> <pre><code>Failed to restore EC2 instance ${instanceDisplayName} from the snapshot taken on ${snapshotCreationTime} in region ${region} on AWS account ${awsAccountDisplayName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AwsNativeRestoreEC2InstanceJobQueued</p> <pre><code>Queued restore of EC2 instance ${instanceDisplayName} from the snapshot taken on ${snapshotCreationTime} in region ${region} on AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>AwsNativeRestoreEC2InstanceJobStarted</p> <pre><code>${userEmail} started restore of EC2 instance ${instanceDisplayName} from the snapshot taken on ${snapshotCreationTime} in region ${region} on AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AwsNativeRestoreEC2InstanceJobStarted</p> <pre><code>Started restore of EC2 instance ${instanceDisplayName} from the snapshot taken on ${snapshotCreationTime} in region ${region} on AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeRestoreEC2InstanceJobStartFailed</p> <pre><code>${userEmail} failed to start restore EC2 instance ${instanceDisplayName} from the snapshot taken on ${snapshotCreationTime} in region ${region} on AWS account ${awsAccountDisplayName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AwsNativeRestoreEC2InstanceJobSucceeded</p> <pre><code>Restore of EC2 instance ${instanceDisplayName} from the snapshot taken on ${snapshotCreationTime} in region ${region} succeeded on AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AwsNativeRestoreEC2InstanceLaunchVolumeTaskFailed</p> <pre><code>Failed to launch volumes ${volumeNativeIds} in region ${region} on AWS account ${awsAccountDisplayName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AwsNativeRestoreEC2InstanceLaunchVolumeTaskStarted</p> <pre><code>Launching new volumes from the snapshot taken on ${snapshotCreationTime} in region ${region} on AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AwsNativeRestoreEC2InstanceLaunchVolumeTaskSucceeded</p> <pre><code>Launched new volumes ${volumeNativeIds} in region ${region} on AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeRestoreEC2InstanceRestoreTagsTaskFailed</p> <pre><code>Failed to restore tags on EC2 instance ${instanceDisplayName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AwsNativeRestoreEC2InstanceRestoreTagsTaskStarted</p> <pre><code>Starting restore of tags.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AwsNativeRestoreEC2InstanceRestoreTagsTaskSucceeded</p> <pre><code>Successfully restored tags.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeRestoreEC2InstanceStartInstanceTaskFailed</p> <pre><code>Failed to start EC2 instance ${instanceDisplayName} in region ${region} on AWS account ${awsAccountDisplayName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AwsNativeRestoreEC2InstanceStartInstanceTaskStarted</p> <pre><code>Starting EC2 instance ${instanceDisplayName} in region ${region} on AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AwsNativeRestoreEC2InstanceStartInstanceTaskSucceeded</p> <pre><code>Started EC2 instance ${instanceDisplayName} in region ${region} on AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeRestoreEC2InstanceStopInstanceTaskFailed</p> <pre><code>Failed to power off EC2 instance ${instanceDisplayName} in region ${region} on AWS account ${awsAccountDisplayName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AwsNativeRestoreEC2InstanceStopInstanceTaskStarted</p> <pre><code>Powering off EC2 instance ${instanceDisplayName} in region ${region} on AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AwsNativeRestoreEC2InstanceStopInstanceTaskSucceeded</p> <pre><code>Powered off EC2 instance ${instanceDisplayName} in region ${region} on AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AwsNativeSnapshotMaterializeDiskTaskFailed</p> <pre><code>Failed to create snapshot(s) of volume(s) of the archived snapshot in  region ${region} of account ${accountName}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AwsNativeSnapshotMaterializeDiskTaskStarted</p> <pre><code>Creating snapshot(s) of volume(s) of the archived snapshot in region ${region} of account ${accountName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AwsNativeSnapshotMaterializeDiskTaskSucceeded</p> <pre><code>Successfully created snapshot(s) of volume(s) of the archived snapshot in region ${region} of account ${accountName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>RefreshAwsNativeAccountJobQueued</p> <pre><code>Queued ${maintenanceType} refresh of AWS account ${awsAccountDisplayName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Recovery/#azuread","title":"azuread","text":"<p>AzureADRecoveryJobCanceled</p> <pre><code>Canceled recovery for directory \\\"${adDirectory}\\\".\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AzureADRecoveryJobCanceling</p> <pre><code>Canceling recovery for directory \\\"${adDirectory}\\\".\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>AzureADRecoveryJobFailed</p> <pre><code>Unable to recover directory \\\"${adDirectory}\\\".  Reason: ${reason}. ${remedy}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureADRecoveryJobQueued</p> <pre><code>Queued recovery for directory \\\"${adDirectory}\\\".\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>AzureADRecoveryJobStarted</p> <pre><code>Started recovery for directory \\\"${adDirectory}\\\".\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureADRecoveryJobSucceeded</p> <pre><code>Successfully recovered directory \\\"${adDirectory}\\\".\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AzureADRestoreFailedSummary</p> <pre><code>Recovery for directory \\\"${adDirectory}\\\"\\x20 has completed. Attempted to restore ${total} objects. Successfully restored ${totalRestored} objects. ${fullyDeleted} restored objects have a new UUID that is different from the original object UUID. Failed to read ${readFailed} objects from the snapshot. Failed to create ${createFailed} objects.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureNo</p> <p>AzureADRestoreSummary</p> <pre><code>Recovery for directory \\\"${adDirectory}\\\"\\x20 has completed. Attempted to restore ${total} objects. Successfully restored ${totalRestored} objects. ${fullyDeleted} restored objects have a new UUID that is different from the original object UUID. Download recovery details (the link is valid for 24 hours): ${gcsUrl}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Recovery/#azurenative","title":"azurenative","text":"<p>AzureNativeCreateNewStorageAccountTaskStarted</p> <pre><code>Started creating storage account with name: ${storageAccountName} in resource group: ${resourceGroupName}, subscription:${subscriptionName},  region: ${regionName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AzureNativeCreateStorageAccountTaskFailed</p> <pre><code>Failed to create storage account with name: ${storageAccountName} in resource group: ${resourceGroupName}, subscription:${subscriptionName}, region: ${regionName}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativeCreateStorageAccountTaskSucceeded</p> <pre><code>Successfully created storage account with name: ${storageAccountName} in resource group: ${resourceGroupName}, subscription:${subscriptionName}, region: ${regionName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeDatabaseCreationTaskFailed</p> <pre><code>Failed creating an empty database ${databaseDisplayName} in server ${serverDisplayName} and region ${region}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>AzureNativeDatabaseCreationTaskStarted</p> <pre><code>Creating an empty database ${databaseDisplayName} in server ${serverDisplayName} and region ${region}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeDatabaseCreationTaskSuceeded</p> <pre><code>Successfully created an empty database ${databaseDisplayName} in server ${serverDisplayName} and region ${region}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeDatabaseRecoveryTaskFailed</p> <pre><code>Failed recovery to database ${databaseDisplayName} in server ${serverDisplayName} and region ${region}. Please delete this database from Azure. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>AzureNativeDatabaseRecoveryTaskStarted</p> <pre><code>Starting recovery to database ${databaseDisplayName} in server ${serverDisplayName} and region ${region}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeDatabaseRecoveryTaskSuceeded</p> <pre><code>Successfully recovered to database ${databaseDisplayName} in server ${serverDisplayName} and region ${region}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeExportDatabaseCanceled</p> <pre><code>Canceled ${restoreType} export of the ${sourceDatabaseName} ${databaseType} to ${destinationDatabaseName} ${databaseType} in the ${destinationServerName} ${serverType}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AzureNativeExportDatabaseCanceling</p> <pre><code>Canceling ${restoreType} export of the ${sourceDatabaseName} ${databaseType} to ${destinationDatabaseName} ${databaseType} in the ${destinationServerName} ${serverType}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>AzureNativeExportDatabaseFailed</p> <pre><code>Failed ${restoreType} export of the ${sourceDatabaseName} ${databaseType} to ${destinationDatabaseName} ${databaseType} in the ${destinationServerName} ${serverType}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureNativeExportDatabaseQueued</p> <pre><code>Queued ${restoreType} export of the ${sourceDatabaseName} ${databaseType} to ${destinationDatabaseName} ${databaseType} in the ${destinationServerName} ${serverType}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>AzureNativeExportDatabaseStarted</p> <pre><code>${userEmail} started ${restoreType} export of the ${databaseType} ${databaseName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AzureNativeExportDatabaseStarted</p> <pre><code>Started ${restoreType} export of the ${sourceDatabaseName} ${databaseType} to ${destinationDatabaseName} ${databaseType} in the ${destinationServerName} ${serverType}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeExportDatabaseStartFailed</p> <pre><code>${userEmail} failed to start ${restoreType} export of the ${databaseType} ${databaseName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AzureNativeExportDatabaseSucceeded</p> <pre><code>Successfully finished ${restoreType} export of the ${sourceDatabaseName} ${databaseType} to ${destinationDatabaseName} ${databaseType} in the ${destinationServerName} ${serverType}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AzureNativeExportDbSuccessWithLoginDeletionFailed</p> <pre><code>Successfully recovered to database ${databaseDisplayName} in server ${serverDisplayName} and region ${region}. Unable to delete the temporary login user ${user} in database ${db}. Manual deletion is required.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p> <p>AzureNativeExportDiskSnapshotAttachDiskOsDiskTaskFailed</p> <pre><code>Failed to swap OS disk of the ${vmDisplayName} virtual machine. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativeExportDiskSnapshotAttachDiskOsDiskTaskStarted</p> <pre><code>Swapping OS disk of the ${vmDisplayName} virtual machine.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AzureNativeExportDiskSnapshotAttachDiskOsDiskTaskSucceeded</p> <pre><code>Swapped OS disk of the ${vmDisplayName} virtual machine.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeExportDiskSnapshotAttachDiskTaskFailed</p> <pre><code>Failed to attach disk with LUN ${lun} to the ${vmDisplayName} virtual machine. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativeExportDiskSnapshotAttachDiskTaskStarted</p> <pre><code>Attaching disk with LUN ${lun} to the ${vmDisplayName} virtual machine.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AzureNativeExportDiskSnapshotAttachDiskTaskSucceeded</p> <pre><code>Attached disk with LUN ${lun} to the ${vmDisplayName} virtual machine.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeExportDiskSnapshotCreateDiskTaskFailed</p> <pre><code>Failed to create new disk in the ${region} region from the snapshot taken at ${snapshotTimeDisplay}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativeExportDiskSnapshotCreateDiskTaskStarted</p> <pre><code>Creating new disk in the ${region} region from the snapshot taken at ${snapshotTimeDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AzureNativeExportDiskSnapshotCreateDiskTaskSucceeded</p> <pre><code>Created new disk in the ${region} region from the snapshot taken at ${snapshotTimeDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeExportDiskSnapshotDetachDiskTaskFailed</p> <pre><code>Failed to detach disks with LUN ${lun} from the ${vmDisplayName} virtual machine. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativeExportDiskSnapshotDetachDiskTaskStarted</p> <pre><code>Detaching disk with LUN ${lun} from the ${vmDisplayName} virtual machine.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AzureNativeExportDiskSnapshotDetachDiskTaskSucceeded</p> <pre><code>Detached disk with LUN ${lun} from the ${vmDisplayName} virtual machine.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeExportDiskSnapshotJobCanceled</p> <pre><code>Canceled export of the ${diskDisplayName} disk in the ${region} region and ${destSubscriptionDisplayName} subscription from the snapshot taken at ${snapshotTimeDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AzureNativeExportDiskSnapshotJobCanceling</p> <pre><code>Canceling export of the ${diskDisplayName} disk in the ${region} region and ${destSubscriptionDisplayName} subscription from the snapshot taken at ${snapshotTimeDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>AzureNativeExportDiskSnapshotJobFailed</p> <pre><code>Failed to export the ${diskDisplayName} disk in the ${region} region and ${destSubscriptionDisplayName} subscription from the snapshot taken at ${snapshotTimeDisplay}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureNativeExportDiskSnapshotJobQueued</p> <pre><code>Queued export of the ${diskDisplayName} disk in the ${region} region and ${destSubscriptionDisplayName} subscription from the snapshot taken at ${snapshotTimeDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>AzureNativeExportDiskSnapshotJobStarted</p> <pre><code>${userEmail} started export of the ${diskDisplayName} Azure disk in the ${region} region and ${destSubscriptionDisplayName} subscription from the snapshot taken at ${snapshotTimeDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AzureNativeExportDiskSnapshotJobStarted</p> <pre><code>Started export of the ${diskDisplayName} disk in the ${region} region and ${destSubscriptionDisplayName} subscription from the snapshot taken at ${snapshotTimeDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeExportDiskSnapshotJobStartFailed</p> <pre><code>${userEmail} failed to start export of the ${diskDisplayName} Azure disk in the ${region} region and ${destSubscriptionDisplayName} subscription from the snapshot taken at ${snapshotTimeDisplay}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AzureNativeExportDiskSnapshotJobSucceeded</p> <pre><code>Export of the ${diskDisplayName} disk in the ${region} region and ${destSubscriptionDisplayName} subscription from the snapshot taken at ${snapshotTimeDisplay} succeeded.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AzureNativeExportVMCreateSnapshotDisksTaskFailed</p> <pre><code>Failed to create new disks in the ${region} region from the snapshot taken at ${snapshotTimeDisplay}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativeExportVMCreateSnapshotDisksTaskStarted</p> <pre><code>Creating new disks in the ${region} region from the snapshot taken at ${snapshotTimeDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AzureNativeExportVMCreateSnapshotDisksTaskSucceeded</p> <pre><code>Created new disks in the ${region} region from the snapshot taken at ${snapshotTimeDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeExportVMCreateVMTaskFailed</p> <pre><code>Failed to create the ${vmDisplayName} virtual machine in the ${region} region. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativeExportVMCreateVMTaskStarted</p> <pre><code>Creating the ${vmDisplayName} virtual machine in the ${region} region.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AzureNativeExportVMCreateVMTaskSucceeded</p> <pre><code>Created the ${vmDisplayName} virtual machine in the ${region} region.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeExportVMEnableEncryptionTaskFailed</p> <pre><code>Failed to enable encryption for the ${vmDisplayName} virtual machine. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativeExportVMEnableEncryptionTaskSkipped</p> <pre><code>Cannot enable encryption for the ${vmDisplayName} virtual machine.  You can enable manually ADE for an exported virtual machine.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>AzureNativeExportVMEnableEncryptionTaskStarted</p> <pre><code>Enabling encryption for the ${vmDisplayName} virtual machine.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AzureNativeExportVMEnableEncryptionTaskSucceeded</p> <pre><code>Enabled encryption for the ${vmDisplayName} virtual machine.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeExportVMJobCanceled</p> <pre><code>Canceled export of the ${vmDisplayName} virtual machine in the ${region} region and ${destSubscriptionDisplayName} subscription from the snapshot taken at ${snapshotTimeDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AzureNativeExportVMJobCanceling</p> <pre><code>Canceling export of the ${vmDisplayName} virtual machine in the ${region} region and ${destSubscriptionDisplayName} subscription from the snapshot taken at ${snapshotTimeDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>AzureNativeExportVMJobFailed</p> <pre><code>Failed to export the ${vmDisplayName} virtual machine in the ${region} region and ${destSubscriptionDisplayName} subscription from the snapshot taken at ${snapshotTimeDisplay}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureNativeExportVMJobQueued</p> <pre><code>Queued export of the ${vmDisplayName} virtual machine in the ${region} region and ${destSubscriptionDisplayName} subscription from the snapshot taken at ${snapshotTimeDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>AzureNativeExportVMJobStarted</p> <pre><code>${userEmail} started export of the ${vmDisplayName} Azure virtual machine in the ${region} region and ${destSubscriptionDisplayName} subscription from the snapshot taken at ${snapshotTimeDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AzureNativeExportVMJobStarted</p> <pre><code>Started export of the ${vmDisplayName} virtual machine in the ${region} region and ${destSubscriptionDisplayName} subscription from the snapshot taken at ${snapshotTimeDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeExportVMJobStartFailed</p> <pre><code>${userEmail} failed to start export of the ${vmDisplayName} Azure virtual machine in the ${region} region and ${destSubscriptionDisplayName} subscription from the snapshot taken at ${snapshotTimeDisplay}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AzureNativeExportVMJobSucceeded</p> <pre><code>Export of the ${vmDisplayName} virtual machine in the ${region} region and ${destSubscriptionDisplayName} subscription from the snapshot taken at ${snapshotTimeDisplay} succeeded.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AzureNativeMountDiskJobCanceled</p> <pre><code>Canceled mounting disks on the ${vmDisplayName} virtual machine in the ${region} region from the snapshot taken at ${snapshotTimeDisplay} in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AzureNativeMountDiskJobCanceling</p> <pre><code>Canceling mounting disks on the ${vmDisplayName} virtual machine in the ${region} region from the snapshot taken at ${snapshotTimeDisplay} in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>AzureNativeMountDiskJobFailed</p> <pre><code>Unable to mount disks on the ${vmDisplayName} virtual machine in the ${region} region from the snapshot taken at ${snapshotTimeDisplay} in the ${subscriptionDisplayName} subscription. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureNativeMountDiskJobQueued</p> <pre><code>Queued mount disk on the ${vmDisplayName} virtual machine in the ${region} region from the snapshot taken at ${snapshotTimeDisplay} in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>AzureNativeMountDiskJobStarted</p> <pre><code>Started mounting disk on the ${vmDisplayName} virtual machine in the ${region} region from the snapshot taken at ${snapshotTimeDisplay} in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeMountDiskJobSucceeded</p> <pre><code>Successfully mounted disks on the ${vmDisplayName} virtual machine in  the ${region} region from the snapshot taken at ${snapshotTimeDisplay}  in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AzureNativeMountDisksTaskFailed</p> <pre><code>Unable to mount disks created from the snapshot taken at ${snapshotTimeDisplay} of ${sourceVmDisplayName} on ${targetVmDisplayName} virtual machine in the region ${region}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativeMountDisksTaskStarted</p> <pre><code>Mounting the disks created from the snapshot taken at ${snapshotTimeDisplay} of ${sourceVmDisplayName} on ${targetVmDisplayName} virtual machine in the region ${region}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AzureNativeMountDisksTaskSucceeded</p> <pre><code>Mounted the disks created from the snapshot taken at ${snapshotTimeDisplay} of ${sourceVmDisplayName} on ${targetVmDisplayName} virtual machine in the region ${region}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeMovingDatabaseToElasticPoolTaskFailed</p> <pre><code>Failed to move database ${databaseDisplayName} to elastic pool ${elasticPoolDisplayName} in ${serverDisplayName} and  region ${region}.. Reason: ${reason}. Note that database is successfully recovered, please manually move the recovered database to the desired elastic pool.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativeMovingDatabaseToElasticPoolTaskStarted</p> <pre><code>Moving destination database ${databaseDisplayName} to elastic pool ${elasticPoolDisplayName} in ${serverDisplayName} and  region ${region}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeMovingDatabaseToElasticPoolTaskSucceeded</p> <pre><code>Successfully moved database ${databaseDisplayName} to elastic pool ${elasticPoolDisplayName} in ${serverDisplayName} and  region ${region}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativePowerOffTaskFailed</p> <pre><code>Failed to power off the ${vmDisplayName} virtual machine. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativePowerOffTaskStarted</p> <pre><code>Powering off the ${vmDisplayName} virtual machine.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AzureNativePowerOffTaskSucceeded</p> <pre><code>Powered off the ${vmDisplayName} virtual machine.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativePowerOnTaskFailed</p> <pre><code>Failed to power on the ${vmDisplayName} virtual machine. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativePowerOnTaskStarted</p> <pre><code>Powering on the ${vmDisplayName} virtual machine.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AzureNativePowerOnTaskSucceeded</p> <pre><code>Powered on the ${vmDisplayName} virtual machine.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativePublishStorageAccountRecoveryInfo</p> <pre><code>Recovery is in progress: Successfully processed: ${processedObjects} objects. Unable to recover: ${failedObjects} objects.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AzureNativePublishStorageAccountRecoveryProgress</p> <pre><code>Recovery is in progress: Successfully processed: ${processedObjects} objects. Unable to recover: ${failedObjects} objects.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AzureNativeRecoverStorageAccountJobCanceled</p> <pre><code>Canceled recovery of ${sourceStorageAccount} storage account in the ${resGroupDisplayName} resource group from the snapshot taken at ${snapshotTimeDisplay} in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AzureNativeRecoverStorageAccountJobCanceling</p> <pre><code>Canceling recovery of the ${sourceStorageAccount} storage account in the ${resGroupDisplayName} resource group from the snapshot taken at  ${snapshotTimeDisplay} in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>AzureNativeRecoverStorageAccountJobFailed</p> <pre><code>Unable to recover the ${sourceStorageAccount} storage account in the ${resGroupDisplayName} resource group from the snapshot taken at ${snapshotTimeDisplay} in the ${subscriptionDisplayName} subscription. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureNativeRecoverStorageAccountJobQueued</p> <pre><code>Queued recovery of the ${sourceStorageAccount} storage account in the ${resGroupDisplayName} resource group from the snapshot taken at ${snapshotCreationTime} in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>AzureNativeRecoverStorageAccountJobStarted</p> <pre><code>Started recovery of the ${sourceStorageAccount} storage account in the ${resGroupDisplayName} resource group from the snapshot taken at ${snapshotTimeDisplay} in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeRecoverStorageAccountJobSucceeded</p> <pre><code>Recovery of the ${sourceStorageAccount} storage account in the ${resGroupDisplayName} resource group from the snapshot taken at ${snapshotTimeDisplay} in the ${subscriptionDisplayName} succeeded.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AzureNativeRecoverStorageAccountSnapshotJobStarted</p> <pre><code>${userEmail} started restore of the ${saDisplayName} Azure storage account in the ${resGroupDisplayName} resource group from the snapshot taken at ${snapshotTimeDisplay} in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AzureNativeRecoverStorageAccountSnapshotJobStartFailed</p> <pre><code>${userEmail} failed to start restore of the ${saDisplayName} Azure storage account in the ${resGroupDisplayName} resource group from the snapshot taken at ${snapshotTimeDisplay} in the ${subscriptionDisplayName} subscription. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AzureNativeResizeDiskTaskFailed</p> <pre><code>Failed to re-size the ${diskDisplayName} managed disk. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativeResizeDiskTaskStarted</p> <pre><code>Re-sizing ${diskDisplayName} managed disk.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AzureNativeResizeDiskTaskSucceeded</p> <pre><code>Re-sized ${diskDisplayName} managed disk.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeRestoreVMAttachDisksTaskFailed</p> <pre><code>Failed to attach disks with LUNs ${luns} or restore OS disk to the ${vmDisplayName} virtual machine. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativeRestoreVMAttachDisksTaskStarted</p> <pre><code>Attaching disks with LUNs ${luns} and restoring OS disk to the  ${vmDisplayName} virtual machine.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AzureNativeRestoreVMAttachDisksTaskSucceeded</p> <pre><code>Attached disks with LUNs ${luns} and restored OS disk to the  ${vmDisplayName} virtual machine.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeRestoreVMCreateSnapshotDisksTaskFailed</p> <pre><code>Failed to create new disks from the snapshot taken at ${snapshotTimeDisplay}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativeRestoreVMCreateSnapshotDisksTaskStarted</p> <pre><code>Creating new disks from the snapshot taken at ${snapshotTimeDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AzureNativeRestoreVMCreateSnapshotDisksTaskSucceeded</p> <pre><code>Created new disks from the snapshot taken at ${snapshotTimeDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeRestoreVMDeleteDetachedDisksTaskFailed</p> <pre><code>Failed to delete detached disks. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativeRestoreVMDeleteDetachedDisksTaskStarted</p> <pre><code>Deleting detached disks.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AzureNativeRestoreVMDeleteDetachedDisksTaskSucceeded</p> <pre><code>Deleted detached disks.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeRestoreVMDetachDisksTaskFailed</p> <pre><code>Failed to detach disks with LUNs ${luns} from the ${vmDisplayName} virtual machine. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativeRestoreVMDetachDisksTaskStarted</p> <pre><code>Detaching disks with LUNs ${luns} from the ${vmDisplayName} virtual machine.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AzureNativeRestoreVMDetachDisksTaskSucceeded</p> <pre><code>Detached disks with LUNs ${luns} from the ${vmDisplayName} virtual machine.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeRestoreVMDetachDisksTaskSucceededTagsNotUpdated</p> <pre><code>Detached disks with LUNs ${luns} from the ${vmDisplayName} virtual machine. Unable to apply Rubrik metadata tags on the detached disks.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>AzureNativeRestoreVMJobCanceled</p> <pre><code>Canceled restore of ${vmDisplayName} virtual machine in the ${resGroupDisplayName} resource group from the snapshot taken at ${snapshotTimeDisplay} in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>AzureNativeRestoreVMJobCanceling</p> <pre><code>Canceling restore of the ${vmDisplayName} virtual machine in the ${resGroupDisplayName} resource group from the snapshot taken at  ${snapshotTimeDisplay} in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>AzureNativeRestoreVMJobFailed</p> <pre><code>Failed to restore the ${vmDisplayName} virtual machine in the ${resGroupDisplayName} resource group from the snapshot taken at ${snapshotTimeDisplay} in the ${subscriptionDisplayName} subscription. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AzureNativeRestoreVMJobQueued</p> <pre><code>Queued restore of the ${vmDisplayName} virtual machine in the ${resGroupDisplayName} resource group from the snapshot taken at ${snapshotTimeDisplay} in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>AzureNativeRestoreVMJobStarted</p> <pre><code>${userEmail} started restore of the ${vmDisplayName} Azure virtual machine in the ${resGroupDisplayName} resource group from the snapshot taken at ${snapshotTimeDisplay} in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AzureNativeRestoreVMJobStarted</p> <pre><code>Started restore of the ${vmDisplayName} virtual machine in the ${resGroupDisplayName} resource group from the snapshot taken at ${snapshotTimeDisplay} in the ${subscriptionDisplayName} subscription.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeRestoreVMJobStartFailed</p> <pre><code>${userEmail} failed to start restore of the ${vmDisplayName} Azure virtual machine in the ${resGroupDisplayName} resource group from the snapshot taken at ${snapshotTimeDisplay} in the ${subscriptionDisplayName} subscription. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>AzureNativeRestoreVMJobSucceeded</p> <pre><code>Restore of the ${vmDisplayName} virtual machine in the ${resGroupDisplayName} resource group from the snapshot taken at ${snapshotTimeDisplay} in the ${subscriptionDisplayName} succeeded.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AzureNativeSkippingRestoreTasks</p> <pre><code>Skipped replacing original disk as it's not attached to virtual machine.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>AzureNativeStorageAccountRecoverySummaryInfo</p> <pre><code>Download recovery failures report (the link is valid for 24 hours): ${gcsUrl}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>AzureNativeUpdateNicTaskFailed</p> <pre><code>Failed to update ${nicName} network interface of ${vmDisplayName} virtual machine. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>AzureNativeUpdateNicTaskStarted</p> <pre><code>Updating ${nicName} network interface of ${vmDisplayName} virtual machine.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>AzureNativeUpdateNicTaskSucceeded</p> <pre><code>Updated ${nicName} network interface of ${vmDisplayName} virtual machine.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AzureNativeUseExistingStorageAccountTaskStarted</p> <pre><code>Using existing storage account with name: ${storageAccountName} in resource group: ${resourceGroupName}, subscription:${subscriptionName}, region: ${regionName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Recovery/#cassandra_source","title":"cassandra_source","text":"<p>CassandraRecoveryFailure</p> <pre><code>${username} failed to start recovery of objects [${recoveryObjects}] on the Cassandra source '${sourceName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>CassandraRecoveryStarted</p> <pre><code>${username} started recovery of objects [${recoveryObjects}] on the Cassandra source '${sourceName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Recovery/#cloudnative","title":"cloudnative","text":"<p>CloudNativeDBSnapshotUploadJobCanceled</p> <pre><code>Canceled upload for snapshot taken at ${snapshotTimeDisplay} of  ${snappableDisplay} to ${bucketType} with details ${bucketDetails}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>CloudNativeDBSnapshotUploadJobCanceling</p> <pre><code>Canceling upload for snapshot taken at ${snapshotTimeDisplay} of  ${snappableDisplay} to ${bucketType} with details ${bucketDetails}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>CloudNativeDBSnapshotUploadJobFailed</p> <pre><code>Could not upload snapshot taken at ${snapshotTimeDisplay} of  ${snappableDisplay} to ${bucketType} with details ${bucketDetails}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>CloudNativeDBSnapshotUploadJobQueued</p> <pre><code>Queued upload for snapshot taken at ${snapshotTimeDisplay} of  ${snappableDisplay} to ${bucketType} with details ${bucketDetails}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>CloudNativeDBSnapshotUploadJobStarted</p> <pre><code>${userEmail} started upload of database backup taken at  ${snapshotTimeDisplay} of database ${snappableDisplay} to blob storage.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CloudNativeDBSnapshotUploadJobStarted</p> <pre><code>Started upload for snapshot taken at ${snapshotTimeDisplay} of  ${snappableDisplay} to ${bucketType} with details ${bucketDetails}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeDBSnapshotUploadJobStartFailed</p> <pre><code>${userEmail} failed to upload database backup taken at  ${snapshotTimeDisplay} of database ${snappableDisplay} to blob storage. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>CloudNativeDBSnapshotUploadJobSucceeded</p> <pre><code>Successfully uploaded snapshot taken at ${snapshotTimeDisplay} of  ${snappableDisplay} to ${bucketType} with details ${bucketDetails}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CloudNativeDBSnapshotUploadJobUploadTaskFailed</p> <pre><code>Failed to upload snapshot taken at ${snapshotTimeDisplay} of ${snappableDisplay} to ${bucketType} with details ${bucketDetails}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>CloudNativeDBSnapshotUploadJobUploadTaskFailedWithSnapshotUploadStarted</p> <pre><code>Failed to upload snapshot taken at ${snapshotTimeDisplay} of ${snappableDisplay} to ${bucketType} with details ${bucketDetails}. Please visit ${bucketURL} to manually clean up the created ${bucketType}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>CloudNativeDBSnapshotUploadJobUploadTaskStarted</p> <pre><code>Started uploading snapshot taken at ${snapshotTimeDisplay} of  ${snappableDisplay} to ${bucketType} with details ${bucketDetails}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CloudNativeDBSnapshotUploadJobUploadTaskSucceeded</p> <pre><code>Successfully uploaded snapshot taken at ${snapshotTimeDisplay} of ${snappableDisplay} to ${bucketType} with ${bucketURL} url.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeDownloadFileCreateDownloadLocationTaskFailed</p> <pre><code>Failed to create the ${downloadLocation}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>CloudNativeDownloadFileCreateDownloadLocationTaskStarted</p> <pre><code>Creating the ${downloadLocation}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CloudNativeDownloadFileCreateDownloadLocationTaskSucceeded</p> <pre><code>Created the ${downloadLocation}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeDownloadFileDeleteDisksTaskFailed</p> <pre><code>Failed to delete ${diskTypeDisplay}(s) launched from the snapshot.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>CloudNativeDownloadFileDeleteDisksTaskStarted</p> <pre><code>Deleting ${diskTypeDisplay}(s) launched from the snapshot.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CloudNativeDownloadFileDeleteDisksTaskSucceeded</p> <pre><code>Deleted ${diskTypeDisplay}(s) launched from the snapshot.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeDownloadFileDownloadTaskFailed</p> <pre><code>Failed to upload ${numFiles} file(s) to the ${downloadLocation}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>CloudNativeDownloadFileDownloadTaskSkippedSomeFiles</p> <pre><code>Failed to upload ${numFailedFiles} of ${numFiles} files to the ${downloadLocation}.  ${errors}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>CloudNativeDownloadFileDownloadTaskStarted</p> <pre><code>Uploading ${numFiles} file(s) to the ${downloadLocation}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CloudNativeDownloadFileDownloadTaskSucceeded</p> <pre><code>Uploading ${numFiles} file(s) to the ${downloadLocation}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeDownloadFileJobCanceled</p> <pre><code>Canceled recovery of ${numFiles} file(s) from the snapshot of the ${snappableDisplay} taken at ${snapshotTimeDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>CloudNativeDownloadFileJobCanceledAndBucketCreated</p> <pre><code>Canceled recovery of ${numFiles} file(s) from the snapshot of the ${snappableDisplay} taken at ${snapshotTimeDisplay}. Please visit ${bucketURL} to manually clean up the created ${bucketType}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>CloudNativeDownloadFileJobCanceling</p> <pre><code>Canceling recovery of ${numFiles} file(s) from the snapshot of the ${snappableDisplay} taken at ${snapshotTimeDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>CloudNativeDownloadFileJobFailed</p> <pre><code>Failed to recover ${numFiles} file(s) from the snapshot of the ${snappableDisplay} taken at ${snapshotTimeDisplay}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>CloudNativeDownloadFileJobFailedAndBucketCreated</p> <pre><code>Failed to recover ${numFiles} file(s) from the snapshot of the ${snappableDisplay} taken at ${snapshotTimeDisplay}. Reason: ${reason}. Please visit ${bucketURL} to manually clean up the created ${bucketType}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>CloudNativeDownloadFileJobQueued</p> <pre><code>Queued recovery of ${numFiles} file(s) from the snapshot of the ${snappableDisplay} taken at ${snapshotTimeDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>CloudNativeDownloadFileJobStarted</p> <pre><code>${userEmail} started download of ${numFiles} file(s) from the snapshot of the ${snappableDisplay} taken at ${snapshotTimeDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CloudNativeDownloadFileJobStarted</p> <pre><code>Started recovery of ${numFiles} file(s) from the snapshot of the ${snappableDisplay} taken at ${snapshotTimeDisplay}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeDownloadFileJobStartFailed</p> <pre><code>${userEmail} failed to start download of ${numFiles} file(s) from the snapshot of the ${snappableDisplay} taken at ${snapshotTimeDisplay}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>CloudNativeDownloadFileJobSucceeded</p> <pre><code>Successfully uploaded ${numFiles} file(s) from the snapshot of the ${snappableDisplay} taken at ${snapshotTimeDisplay} to ${downloadLocation} url.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CloudNativeDownloadFileJobSucceededSkippedSomeFiles</p> <pre><code>Successfully uploaded ${uploadedFiles} out of ${numFiles} file(s) from the snapshot of the ${snappableDisplay} taken at ${snapshotTimeDisplay} to ${downloadLocation} url. See details for skipped files.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CloudNativeDownloadFileLaunchDisksTaskFailed</p> <pre><code>Failed to launch ${diskTypeDisplay}(s) from the snapshot.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>CloudNativeDownloadFileLaunchDisksTaskStarted</p> <pre><code>Temporarily launching ${diskTypeDisplay}(s) from the snapshot in region ${region}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CloudNativeDownloadFileLaunchDisksTaskSucceeded</p> <pre><code>Launched ${diskTypeDisplay}(s) from the snapshot in region ${region}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeRecoverFileToVMDownloadTaskFailed</p> <pre><code>Failed to recover ${numFiles} file(s) to the virtual machine  ${vmName} (${vmIpAddress}) at ${restoreDirectory}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>CloudNativeRecoverFileToVMDownloadTaskStarted</p> <pre><code>Recovering ${numFiles} file(s) to the virtual machine  ${vmName} (${vmIpAddress}) at ${restoreDirectory}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CloudNativeRecoverFileToVMDownloadTaskSucceeded</p> <pre><code>Recovering ${numFiles} file(s) to the virtual machine  ${vmName} (${vmIpAddress}) at ${restoreDirectory}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CloudNativeRecoverFileToVMJobSucceeded</p> <pre><code>Successfully recovered ${numFiles} file(s) from the snapshot of the ${snappableDisplay} taken at ${snapshotTimeDisplay} to the virtual  machine ${vmName} (${vmIpAddress}) at ${restoreDirectory}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Recovery/#common","title":"common","text":"<p>DownloadBackupFiles</p> <pre><code>${username} started a job to download backup files of object type '${objType}' with Id '${objId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DownloadBackupFilesFailed</p> <pre><code>${username} failed to start a job to download backup files of object type '${objType}' with Id '${objId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DownloadBackupFilesFromArchive</p> <pre><code>${username} started a job to download backup files from archive of object type '${objType}' with Id '${objId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DownloadBackupFilesFromArchiveFailed</p> <pre><code>${username} failed to start a job to download backup files from archive of object type '${objType}' with Id '${objId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DownloadFilesStarted</p> <pre><code>${username} started a job to download ${numOfPaths} path(s) from a backup of '${objectName}' taken on ${date}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DownloadFilesStartFailed</p> <pre><code>${username} failed to start a job to download ${numOfPaths} path(s) from a backup of '${objectName}' taken on ${date}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DownloadReplicatedSnapshotFromLocationFailed</p> <pre><code>${username} failed to start a job to download replicated snapshot  from location of object type '${objType}' with Id '${objId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DownloadReplicatedSnapshotFromLocationSuccess</p> <pre><code>${username} started a job to download replicated snapshot from location of object type '${objType}' with Id '${objId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DownloadSnapshotFromRemoteFailed</p> <pre><code>${username} failed to start a job to download remote snapshot for  '${objName}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DownloadSnapshotFromRemoteSuccess</p> <pre><code>${username} started a job to download remote snapshot for '${objName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ExportFilesStarted</p> <pre><code>${username} started a job to restore ${count} file(s) from a backup of '${objectName}' taken on ${date} to '${objectDestName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ExportFilesStartFailed</p> <pre><code>${username} failed to start a job to restore ${count} file(s) from a backup of '${objectName}' taken on ${date} to '${objectDestName}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ExportSnapshotStarted</p> <pre><code>${username} started a job to export snapshot '${snapshotId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>ExportSnapshotStartFailed</p> <pre><code>${username} failed to start a job to export snapshot '${snapshotId}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>InstantRecoverSnapshotStarted</p> <pre><code>${username} started a job to instantly recover '${snappableName}' (${snappableType}) with a snapshot taken at '${snapshotDate}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>InstantRecoverSnapshotStartFailed</p> <pre><code>${username} failed to start a job to instantly recover '${snappableName}' (${snappableType}) with a snapshot taken at '${snapshotDate}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>MountSnapshotStarted</p> <pre><code>${username} started a job to mount '${snappableName}' (${snappableType}) with a snapshot taken at '${snapshotDate}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>MountSnapshotStartFailed</p> <pre><code>${username} failed to start a job to mount '${snappableName}'  (${snappableType}) with a snapshot taken at '${snapshotDate}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>RestoreFilesStarted</p> <pre><code>${username} started a job to restore ${count} file(s) from a backup of '${objectName}' taken on ${date}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RestoreFilesStartFailed</p> <pre><code>${username} failed to start a job to restore ${count} file(s) from a backup of '${objectName}' taken on ${date}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>UnmountMountStarted</p> <pre><code>${username} started a job to remove ${snappableType} mount '${mountId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>UnmountMountStartFailed</p> <pre><code>${username} failed to start a job to remove ${snappableType} mount '${mountId}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Recovery/#fileset","title":"fileset","text":"<p>ExportFilesetFailure</p> <pre><code>Failed to export '${sourceDir}' from '${source}' to '${destination}' based on snapshot taken at '${snapshotDate}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ExportFilesetStarted</p> <pre><code>Started exporting '${sourceDir}' from '${source}' to '${destination}' based on snapshot taken at '${snapshotDate}'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RestoreFilesetFailure</p> <pre><code>Failed to start restore job for fileset '${filesetName}' from source path '${sourceDir}' to ${hostAndShare} destination path '${destinationDir}' using snapshot ${snapshotId} taken on ${snapshotDate}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>RestoreFilesetStarted</p> <pre><code>${username} started a restore job for fileset '${filesetName}' from source path '${sourceDir}' to ${hostAndShare} destination path '${destinationDir}' using snapshot ${snapshotId} taken on ${snapshotDate}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Recovery/#gcpnative","title":"gcpnative","text":"<p>GCPNativeAttachDisksTaskFailed</p> <pre><code>Failed to attach recovered disks to the instance. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>GCPNativeAttachDisksTaskStarted</p> <pre><code>Attaching recovered disks to the instance.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>GCPNativeAttachDisksTaskSucceeded</p> <pre><code>Successfully attached recovered disks to the instance.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>GCPNativeDetachDisksTaskFailed</p> <pre><code>Failed to detach existing disks from the instance. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>GCPNativeDetachDisksTaskStarted</p> <pre><code>Detaching existing disks from the instance.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>GCPNativeDetachDisksTaskSucceeded</p> <pre><code>Successfully detached existing disks from the instance.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>GCPNativeExportDiskCreateDiskTaskFailed</p> <pre><code>Failed to create the disk. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>GCPNativeExportDiskCreateDiskTaskStarted</p> <pre><code>Creating the disk.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>GCPNativeExportDiskCreateDiskTaskSucceeded</p> <pre><code>Successfully created the disk.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>GCPNativeExportDiskJobCanceled</p> <pre><code>Canceled export of the ${diskDisplayName} disk in the ${locationName} ${locationScope} from the snapshot taken at ${snapshotDisplayTime} in the ${projectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>GCPNativeExportDiskJobCanceling</p> <pre><code>Canceling export of the ${diskDisplayName} disk in the ${locationName} ${locationScope} from the snapshot taken at ${snapshotDisplayTime} in the ${projectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>GCPNativeExportDiskJobFailed</p> <pre><code>Failed to export the ${diskDisplayName} disk in the ${locationName} ${locationScope} from the snapshot taken at ${snapshotDisplayTime} in the ${projectDisplayName} project. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>GCPNativeExportDiskJobQueued</p> <pre><code>Queued export of the ${diskDisplayName} disk in the ${locationName} ${locationScope} from the snapshot taken at ${snapshotDisplayTime} in the ${projectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>GCPNativeExportDiskJobStarted</p> <pre><code>${userEmail} started export of the ${diskDisplayName} GCP disk in the ${locationName} ${locationScope} from the snapshot taken at ${snapshotDisplayTime} in the ${projectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>GCPNativeExportDiskJobStarted</p> <pre><code>Started export of the ${diskDisplayName} disk in the ${locationName} ${locationScope} from the snapshot taken at ${snapshotDisplayTime} in the ${projectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>GCPNativeExportDiskJobStartFailed</p> <pre><code>${userEmail} failed to start the export of the ${diskDisplayName} GCP disk in the ${locationName} ${locationScope} from the snapshot taken at ${snapshotDisplayTime} in the ${projectDisplayName} project. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>GCPNativeExportDiskJobSucceeded</p> <pre><code>Export of the ${diskDisplayName} disk in the ${locationName} ${locationScope} from the snapshot taken at ${snapshotDisplayTime} in the ${projectDisplayName} project succeeded.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>GCPNativeExportInstanceCreateInstanceTaskFailed</p> <pre><code>Failed to create the instance. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>GCPNativeExportInstanceCreateInstanceTaskStarted</p> <pre><code>Creating the instance.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>GCPNativeExportInstanceCreateInstanceTaskSucceeded</p> <pre><code>Successfully created the instance.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>GCPNativeExportInstanceJobCanceled</p> <pre><code>Canceled export of the ${instanceDisplayName} GCE instance in the ${zone} zone from the snapshot taken at ${snapshotDisplayTime} in the ${projectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>GCPNativeExportInstanceJobCanceling</p> <pre><code>Canceling export of the ${instanceDisplayName} GCE instance in the ${zone} zone from the snapshot taken at ${snapshotDisplayTime} in the ${projectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>GCPNativeExportInstanceJobFailed</p> <pre><code>Failed to export the ${instanceDisplayName} GCE instance in the ${zone} zone from the snapshot taken at ${snapshotDisplayTime} in the ${projectDisplayName} project. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>GCPNativeExportInstanceJobQueued</p> <pre><code>Queued export of the ${instanceDisplayName} GCE instance in the ${zone} zone from the snapshot taken at ${snapshotDisplayTime} in the ${projectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>GCPNativeExportInstanceJobStarted</p> <pre><code>${userEmail} started export of the ${instanceDisplayName} GCP instance in the ${zone} zone from the snapshot taken at ${snapshotDisplayTime} in the ${projectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>GCPNativeExportInstanceJobStarted</p> <pre><code>Started export of the ${instanceDisplayName} GCE instance in the ${zone} zone from the snapshot taken at ${snapshotDisplayTime} in the ${projectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>GCPNativeExportInstanceJobStartFailed</p> <pre><code>${userEmail} failed to start the export of the ${instanceDisplayName} GCP instance in the ${zone} zone from the snapshot taken at ${snapshotDisplayTime} in the ${projectDisplayName} project. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>GCPNativeExportInstanceJobSucceeded</p> <pre><code>Export of the ${instanceDisplayName} GCE instance in the ${zone} zone from the snapshot taken at ${snapshotDisplayTime} in the ${projectDisplayName} project succeeded.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>GCPNativeRestoreInstanceCreateDisksTaskFailed</p> <pre><code>Failed to create disks from the snapshot. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>GCPNativeRestoreInstanceCreateDisksTaskStarted</p> <pre><code>Creating disks from the snapshot.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>GCPNativeRestoreInstanceCreateDisksTaskSucceeded</p> <pre><code>Successfully created disks from the snapshot.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>GCPNativeRestoreInstanceJobCanceled</p> <pre><code>Canceled restore of the ${instanceDisplayName} GCE instance in the ${zone} zone from the snapshot taken at ${snapshotDisplayTime} in the ${projectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>GCPNativeRestoreInstanceJobCanceling</p> <pre><code>Canceling restore of the ${instanceDisplayName} GCE instance in the ${zone} zone from the snapshot taken at ${snapshotDisplayTime} in the ${projectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>GCPNativeRestoreInstanceJobFailed</p> <pre><code>Failed to restore the ${instanceDisplayName} GCE instance in the ${zone} zone from the snapshot taken at ${snapshotDisplayTime} in the ${projectDisplayName} project. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>GCPNativeRestoreInstanceJobQueued</p> <pre><code>Queued restore of the ${instanceDisplayName} GCE instance in the ${zone} zone from the snapshot taken at ${snapshotDisplayTime} in the ${projectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>GCPNativeRestoreInstanceJobStarted</p> <pre><code>${userEmail} started restore of the ${instanceDisplayName} GCP GCE instance in the ${zone} zone from the snapshot taken at ${snapshotDisplayTime} in the ${projectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>GCPNativeRestoreInstanceJobStarted</p> <pre><code>Started restore of the ${instanceDisplayName} GCE instance in the ${zone} zone from the snapshot taken at ${snapshotDisplayTime} in the ${projectDisplayName} project.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>GCPNativeRestoreInstanceJobStartFailed</p> <pre><code>${userEmail} failed to start restore of the ${instanceDisplayName} GCP GCE instance in the ${zone} zone from the snapshot taken at ${snapshotDisplayTime} in the ${projectDisplayName} project. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>GCPNativeRestoreInstanceJobSucceeded</p> <pre><code>Restore of the ${instanceDisplayName} GCE instance in the ${zone} zone from the snapshot taken at ${snapshotDisplayTime} in the ${projectDisplayName} project succeeded.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>GCPNativeRestoreInstanceRestoreInstanceLabelsTaskFailed</p> <pre><code>Failed to restore instance labels from the snapshot. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>GCPNativeRestoreInstanceRestoreInstanceLabelsTaskStarted</p> <pre><code>Restoring instance labels from the snapshot.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>GCPNativeRestoreInstanceRestoreInstanceLabelsTaskSucceeded</p> <pre><code>Successfully restored instance labels from the snapshot.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>GCPNativeStartInstanceTaskFailed</p> <pre><code>Failed to start the instance. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>GCPNativeStartInstanceTaskStarted</p> <pre><code>Starting the instance.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>GCPNativeStartInstanceTaskSucceeded</p> <pre><code>Successfully started the instance.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>GCPNativeStopInstanceTaskFailed</p> <pre><code>Failed to stop the instance. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>GCPNativeStopInstanceTaskStarted</p> <pre><code>Stopping the instance.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>GCPNativeStopInstanceTaskSucceeded</p> <pre><code>Successfully stopped the instance.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>GCPNativeStopInstanceTaskSucceededNoop</p> <pre><code>Ensured that the instance is stopped.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Recovery/#hyperv","title":"hyperv","text":"<p>CreateHypervDiskMountFailed</p> <pre><code>${username} failed to mount disks from snapshot '${snapshotID}' of Hyper-V virtual machine '${snappableName}' to Hyper-V virtual machine '${targetSnappableName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>CreateHypervDiskMountStarted</p> <pre><code>${username} started disk mount from snapshot '${snapshotID}' of Hyper-V virtual machine '${snappableName}' to Hyper-V virtual machine '${targetSnappableName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CreateHypervExportFailed</p> <pre><code>${username} failed to export snapshot '${snapshotID}' of Hyper-V virtual machine '${snappableName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>CreateHypervExportStarted</p> <pre><code>${username} started exporting snapshot '${snapshotID}' of Hyper-V virtual machine '${snappableName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CreateHypervInstantRecoveryFailed</p> <pre><code>${username} failed to instant recover snapshot '${snapshotID}' of Hyper-V Virtual Machine '${snappableName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>CreateHypervInstantRecoveryStarted</p> <pre><code>${username} started instant recovery of Hyper-V Virtual Machine '${snappableName}' with snapshot '${snapshotID}'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CreateHypervMountFailed</p> <pre><code>${username} failed to mount snapshot '${snapshotID}' of Hyper-V Virtual Machine '${snappableName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>CreateHypervMountStarted</p> <pre><code>${username} started live mount of snapshot '${snapshotID}' of Hyper-V Virtual Machine '${snappableName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CreateInplaceHypervExportFailed</p> <pre><code>${username} failed to in-place export snapshot '${snapshotID}' of Hyper-V virtual machine '${snappableName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>CreateInplaceHypervExportStarted</p> <pre><code>${username} started in-place exporting snapshot '${snapshotID}' of Hyper-V virtual machine '${snappableName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DownloadVmLevelFilesFailed</p> <pre><code>${username} failed to download virtual-machine-level files from snapshot '${snapshotID}' of Hyper-V virtual machine '${snappableName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DownloadVmLevelFilesStarted</p> <pre><code>${username} started downloading virtual-machine-level files from snapshot '${snapshotID}' of Hyper-V virtual machine '${snappableName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>HypervBatchExportSingleFailed</p> <pre><code>${username} failed to start a job to export a snapshot of Hyper-V Virtual Machine '${vmId}'(${vmName}). Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>HypervBatchExportSingleStarted</p> <pre><code>${username} started a job to export a snapshot of Hyper-V Virtual Machine '${vmId}'(${vmName}).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>HypervBatchInstantRecoverSingleFailed</p> <pre><code>${username} failed to start a job to instant recover a snapshot on Hyper-V Virtual Machine '${vmId}'(${vmName}). Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>HypervBatchInstantRecoverSingleStarted</p> <pre><code>${username} started a job to instant recover a snapshot on Hyper-V Virtual Machine '${vmId}'(${vmName}).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>HypervBatchMountSingleFailed</p> <pre><code>${username} failed to start a job to mount a snapshot of Hyper-V Virtual Machine '${vmId}'(${vmName}). Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>HypervBatchMountSingleStarted</p> <pre><code>${username} started a job to mount a snapshot of Hyper-V Virtual Machine '${vmId}'(${vmName}).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Recovery/#kupr","title":"kupr","text":"<p>KuprNamespaceExportCanceled</p> <pre><code>Canceled export of namespace snapshot with snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in Cluster ${targetClusterName} with clusterID ${targetClusterUUID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>KuprNamespaceExportCanceling</p> <pre><code>Canceling export of namespace snapshot with snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in Cluster ${targetClusterName} with clusterID ${targetClusterUUID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>KuprNamespaceExportCompleted</p> <pre><code>Successfully exported namespace snapshot with snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in Cluster ${targetClusterName} with clusterID ${targetClusterUUID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>KuprNamespaceExportFailed</p> <pre><code>Export of namespace snapshot with snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in Cluster ${targetClusterName} with clusterID ${targetClusterUUID} failed. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>KuprNamespaceExportFilesetFailure</p> <pre><code>Failed to export PVC data for PVC ${pvcID}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>KuprNamespaceExportFilesetSnapshotTaskFailed</p> <pre><code>Failed to export PVC data from snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in Cluster ${targetClusterName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>KuprNamespaceExportFilesetSnapshotTaskStarted</p> <pre><code>Started export of PVC data from snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in Cluster ${targetClusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>KuprNamespaceExportFilesetSnapshotTaskSuccess</p> <pre><code>Successfully exported PVC data from snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in Cluster ${targetClusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>KuprNamespaceExportResourceSnapshotTaskError</p> <pre><code>Errors occurred while trying to export resource definition(s) from snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in cluster ${targetClusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>KuprNamespaceExportResourceSnapshotTaskFailed</p> <pre><code>Failed to export resource definition(s) from snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in Cluster ${targetClusterName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>KuprNamespaceExportResourceSnapshotTaskStarted</p> <pre><code>Started export of resource definition(s) from snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in Cluster ${targetClusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>KuprNamespaceExportResourceSnapshotTaskSuccess</p> <pre><code>Successfully exported resource definition(s) from snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in Cluster ${targetClusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>KuprNamespaceExportResourceSnapshotTaskWarning</p> <pre><code>Skipped exporting resource definition(s) from snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in cluster ${targetClusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>KuprNamespaceExportStarted</p> <pre><code>Started export of namespace snapshot with snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in Cluster ${targetClusterName} with clusterID ${targetClusterUUID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>KuprNamespaceRestoreCanceled</p> <pre><code>Canceled restore of namespace snapshot with snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in Cluster ${targetClusterName} with clusterID ${targetClusterUUID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>KuprNamespaceRestoreCanceling</p> <pre><code>Canceling restore of namespace snapshot with snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in Cluster ${targetClusterName} with clusterID ${targetClusterUUID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>KuprNamespaceRestoreCompleted</p> <pre><code>Successfully restored namespace snapshot with snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in Cluster ${targetClusterName} with clusterID ${targetClusterUUID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>KuprNamespaceRestoreFailed</p> <pre><code>Restore of namespace snapshot with snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in Cluster ${targetClusterName} with clusterID ${targetClusterUUID} failed. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>KuprNamespaceRestoreFilesetFailure</p> <pre><code>Failed to restore PVC data for PVC ${pvcID}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>KuprNamespaceRestoreFilesetSnapshotTaskFailed</p> <pre><code>Failed to restore PVC data from snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in Cluster ${targetClusterName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>KuprNamespaceRestoreFilesetSnapshotTaskStarted</p> <pre><code>Started restore of PVC data from snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in Cluster ${targetClusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>KuprNamespaceRestoreFilesetSnapshotTaskSuccess</p> <pre><code>Successfully restored PVC data from snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in Cluster ${targetClusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>KuprNamespaceRestoreResourceSnapshotTaskError</p> <pre><code>Errors occurred while trying to restore resource definition(s) from snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in cluster ${targetClusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>KuprNamespaceRestoreResourceSnapshotTaskFailed</p> <pre><code>Failed to restore resource definition(s) from snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in Cluster ${targetClusterName}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>KuprNamespaceRestoreResourceSnapshotTaskStarted</p> <pre><code>Started restore of resource definition(s) from snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in Cluster ${targetClusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>KuprNamespaceRestoreResourceSnapshotTaskSuccess</p> <pre><code>Successfully restored resource definition(s) from snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in Cluster ${targetClusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>KuprNamespaceRestoreResourceSnapshotTaskWarning</p> <pre><code>Skipped restoring resource definition(s) from snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in cluster ${targetClusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>KuprNamespaceRestoreStarted</p> <pre><code>Started restore of namespace snapshot with snapshotID ${snapshotID} to Kubernetes Namespace ${targetNamespace} in Cluster ${targetClusterName} with clusterID ${targetClusterUUID}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>KuprRecoverySkipPVCWarning</p> <pre><code>Restoring PersistentVolumeClaim(PVC) ${pvcName} as an empty PVC since  its backup was skipped. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Recovery/#managed_volume","title":"managed_volume","text":"<p>InternalExportSlaSnapshot</p> <pre><code>${username} exported the snapshot '${snapshot}' of SLA Managed Volume '${mv}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>InternalExportSlaSnapshotFailure</p> <pre><code>${username} failed to export the snapshot '${snapshot}' of SLA Managed Volume '${mv}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>InternalExportSnapshot</p> <pre><code>${username} exported the snapshot '${snapshot}' of Managed Volume '${mv}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>InternalExportSnapshotFailure</p> <pre><code>${username} failed to export the snapshot '${snapshot}' of Managed Volume '${mv}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>V1DeleteSnapshotExport</p> <pre><code>${username} deleted the live mount '${mount}' of Managed Volume '${mv}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>V1DeleteSnapshotExportFailure</p> <pre><code>${username} failed to delete the live mount '${mount}' of Managed Volume '${mv}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Recovery/#mongo_source","title":"mongo_source","text":"<p>MongoRecoveryFailure</p> <pre><code>${username} failed to start recovery of objects [${recoveryObjects}] on the MongoDB source '${sourceName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>MongoRecoveryStarted</p> <pre><code>${username} started recovery of objects [${recoveryObjects}] on the MongoDB source '${sourceName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Recovery/#mount","title":"mount","text":"<p>CreateLiveMount</p> <pre><code>${username} started a job to mount '${objId}' (${objName}) of type ${objType}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CreateLiveMountFailed</p> <pre><code>${username} failed to start a job to mount '${objId}' (${objName}) of type ${objType}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Recovery/#mssql","title":"mssql","text":"<p>AssignMssqlSlaDomain</p> <pre><code>${username} assigned SLA Domain to Mssql database '${dbName}'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>AssignMssqlSlaDomainFailed</p> <pre><code>${username} failed to assign SLA Domain to Mssql database '${dbName}'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>BulkExportMssqlDbFailure</p> <pre><code>${username} was unable to export multiple SQL Server databases to  instance '${destinationInstanceName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>BulkExportMssqlDbStarted</p> <pre><code>${username} started exporting multiple SQL Server databases to instance  '${destinationInstanceName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CreateMssqlLogShippingConfiguration</p> <pre><code>${username} created log shipping for '${dbName}'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>CreateMssqlLogShippingConfigurationFailed</p> <pre><code>${username} failed to create log shipping for Mssql database '${dbName}'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ExportMssqlDbFailure</p> <pre><code>${username} failed exporting database '${source}' to '${destination}' Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ExportMssqlDbStarted</p> <pre><code>${username} started exporting database '${source}' to '${destination}'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RestoreMssqlDbFailure</p> <pre><code>${username} failed to restore '${dbName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>RestoreMssqlDbStarted</p> <pre><code>${username} began restoring '${dbName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Recovery/#nutanix","title":"nutanix","text":"<p>CreateNutanixDiskMountFailed</p> <pre><code>${username} failed to mount disks from snapshot '${snapshotID}' of Nutanix virtual machine '${snappableName}' to Nutanix virtual machine '${targetSnappableName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>CreateNutanixDiskMountStarted</p> <pre><code>${username} started disk mount from snapshot '${snapshotID}' of Nutanix virtual machine '${snappableName}' to Nutanix virtual machine '${targetSnappableName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>DownloadNutanixVdiskFailed</p> <pre><code>${username} failed to download virtual disks from snapshot '${snapshotID}' of Nutanix virtual machine '${snappableName}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DownloadNutanixVdiskStarted</p> <pre><code>${username} started downloading virtual disks from snapshot '${snapshotID}' of Nutanix virtual machine '${snappableName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>NutanixBatchExportSingleFailed</p> <pre><code>${username} failed to start a job to export a snapshot of Nutanix Virtual Machine '${vmId}'(${vmName}). Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>NutanixBatchExportSingleStarted</p> <pre><code>${username} started a job to export a snapshot of Nutanix Virtual Machine '${vmId}'(${vmName}).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>NutanixBatchMountSingleFailed</p> <pre><code>${username} failed to start a job to mount a snapshot of Nutanix Virtual Machine '${vmId}'(${vmName}). Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>NutanixBatchMountSingleStarted</p> <pre><code>${username} started a job to mount a snapshot of Nutanix Virtual Machine '${vmId}'(${vmName}).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>NutanixVmMountMigrationStarted</p> <pre><code>${username} started a job to migrate ${snappableType} mount '${mountId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>NutanixVmMountMigrationStartFailed</p> <pre><code>${username} failed to start a job to migrate ${snappableType} mount '${mountId}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>PatchNutanixVmMountStarted</p> <pre><code>${username} started a job to patch ${snappableType} mount '${mountId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>PatchNutanixVmMountStartFailed</p> <pre><code>${username} failed to start a job to patch ${snappableType} mount '${mountId}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Recovery/#o365","title":"o365","text":"<p>M365BackupStorageRestoreFailed</p> <pre><code>Failed to perform ${restoreType} of ${sourceObject} Microsoft 365  ${snappableType} data. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>M365BackupStorageRestoreStarted</p> <pre><code>Started ${restoreType} of ${sourceObject} Microsoft 365 ${snappableType} data.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>M365PublishBackupStorageInplaceRestoreSucceeded</p> <pre><code>Successfully completed in-place restore of ${sourceObject} Microsoft  365 ${snappableType} data.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>M365PublishBackupStorageRestoreProgress</p> <pre><code>Restore is in progress.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>O365ExchangeExportSuccess</p> <pre><code>Successfully exported ${numEmails} emails and ${numExportedAttachments} attachments in ${numFolders} folders (total size: ${bytesUploaded}) from the mailbox of ${sourceUser}. Skipped data: ${numSkippedFolders} folders, ${numSkippedEmails} emails  and ${numSkippedAttachments} attachments (estimated total skipped size:  ${bytesSkipped}). The download link has been generated successfully: ${exportUrl}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365ExchangeInplaceRestoreFailure</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numEmails} emails,  ${numEvents} calendar events, ${numContacts} contacts, and  ${numAttachments} attachments (skipped ${skippedAttachments}  attachments) in ${numFolders} folders from ${sourceUser} Microsoft 365  Exchange to ${destinationUser}. Failed to restore ${failurePercent}%% of the items. For more information, click here: ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365ExchangeInplaceRestoreFailureWithRenamedCalendars</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numEmails} emails,  ${numEvents} calendar events, ${numContacts} contacts, and  ${numAttachments} attachments (skipped ${skippedAttachments} attachments)  in ${numFolders} folders from ${sourceUser} Microsoft 365 Exchange to  ${destinationUser}. (Renamed ${RenamesDueToNameConflictsCount} calendars due to naming conflict). Failed to restore ${failurePercent}%% of the items. For more information, click here: ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365ExchangeInplaceRestorePartialSuccess</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numEmails} emails,  ${numEvents} calendar events, ${numContacts} contacts, and  ${numAttachments} attachments (skipped ${skippedAttachments}  attachments) in ${numFolders} folders from ${sourceUser} Microsoft 365  Exchange to ${destinationUser}. Failed to restore ${failurePercent}%% of the items. For more information, click here: ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>O365ExchangeInplaceRestorePartialSuccessWithRenamedCalendars</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numEmails} emails,  ${numEvents} calendar events, ${numContacts} contacts, and  ${numAttachments} attachments (skipped ${skippedAttachments} attachments)  in ${numFolders} folders from ${sourceUser} Microsoft 365 Exchange to  ${destinationUser}. (Renamed ${RenamesDueToNameConflictsCount} calendars due to naming conflict). Failed to restore ${failurePercent}%% of the items. For more information, click here: ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>O365ExchangeInplaceRestoreSuccess</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numEmails} emails,  ${numEvents} calendar events, ${numContacts} contacts, and  ${numAttachments} attachments (skipped ${skippedAttachments}  attachments) in ${numFolders} folders from ${sourceUser} Microsoft 365  Exchange to ${destinationUser}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365ExchangeInplaceRestoreSuccessWithRenamedCalendars</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numEmails} emails,  ${numEvents} calendar events, ${numContacts} contacts, and  ${numAttachments} attachments (skipped ${skippedAttachments}  attachments) in ${numFolders} folders from ${sourceUser} Microsoft 365  Exchange to ${destinationUser}. (Renamed ${RenamesDueToNameConflictsCount} calendars due to naming  conflict).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365ExchangeRestoreFailure</p> <pre><code>Successfully restored ${numEmails} emails, ${numEvents} calendar events, and ${numAttachments} attachments (skipped ${skippedAttachments} attachments) in ${numFolders} folders from ${sourceUser} Microsoft 365 Exchange to ${destinationUser}. Failed to restore ${failurePercent}%% of the items. For more information, click here: ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365ExchangeRestorePartialSuccess</p> <pre><code>Successfully restored ${numEmails} emails, ${numEvents} calendar events, and ${numAttachments} attachments (skipped ${skippedAttachments} attachments) in ${numFolders} folders from ${sourceUser} Microsoft 365 Exchange to ${destinationUser}. Failed to restore ${failurePercent}%% of the items. For more information, click here: ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>O365ExchangeRestoreSuccess</p> <pre><code>Successfully restored ${numEmails} emails, ${numEvents} calendar events, and ${numAttachments} attachments (skipped ${skippedAttachments} attachments) in ${numFolders} folders from ${sourceUser} Microsoft 365 Exchange to ${destinationUser}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365ExchangeRestoreWithContactsFailure</p> <pre><code>Successfully restored ${numEmails} emails, ${numEvents} calendar events, ${numContacts} contacts, and ${numAttachments} attachments (skipped ${skippedAttachments} attachments) in ${numFolders} folders from ${sourceUser} Microsoft 365 Exchange to ${destinationUser}. Failed to restore ${failurePercent}%% of the items. For more  information, click here: ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365ExchangeRestoreWithContactsPartialSuccess</p> <pre><code>Successfully restored ${numEmails} emails, ${numEvents} calendar events, ${numContacts} contacts, and ${numAttachments} attachments (skipped ${skippedAttachments} attachments) in ${numFolders} folders from ${sourceUser} Microsoft 365 Exchange to ${destinationUser}. Failed to restore ${failurePercent}%% of the items. For more  information, click here: ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>O365ExchangeRestoreWithContactsSuccess</p> <pre><code>Successfully restored ${numEmails} emails, ${numEvents} calendar events, ${numContacts} contacts, and ${numAttachments} attachments (skipped ${skippedAttachments} attachments) in ${numFolders} folders from ${sourceUser} Microsoft 365 Exchange to ${destinationUser}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365ExportDownloaded</p> <pre><code>${userID} accessed the download link for the exported Microsoft 365 ${objectType} data of ${objectName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>O365ExportFailed</p> <pre><code>${userID} failed to export ${sourceUser} Microsoft 365 ${snappableType} data${optionalDescription}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>O365ExportFailed</p> <pre><code>Failed to export ${sourceUser} Microsoft 365 ${snappableType} data because ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365ExportStarted</p> <pre><code>${userID} started export of ${sourceUser} Microsoft 365 ${snappableType} data${optionalDescription}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>O365ExportStarted</p> <pre><code>Started export of ${sourceUser} Microsoft 365 ${snappableType} data\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365InplaceRestoreCanceled</p> <pre><code>Canceled ${inplaceRestoreUIName} of Microsoft 365 ${snappableType}  data for ${user}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>O365InplaceRestoreFailed</p> <pre><code>${userEmail} unable to start ${inplaceRestoreUIName} of Microsoft 365 ${snappableType} from ${sourceSnappableName} to ${destinationSnappableName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>O365InplaceRestoreFailed</p> <pre><code>Failed to perform ${inplaceRestoreUIName} Microsoft 365 ${snappableType} data from ${sourceUser} to ${destinationUser} because of ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365InplaceRestoreStarted</p> <pre><code>${userEmail} started ${inplaceRestoreUIName} of Microsoft 365 ${snappableType}  from '${sourceSnappableName}' to '${destinationSnappableName}'${optionalDescription}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>O365InplaceRestoreStarted</p> <pre><code>Started ${inplaceRestoreUIName} of Microsoft 365 ${snappableType} data from ${sourceUser} to ${destinationUser}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365LogRestoreAttachmentTooLarge</p> <pre><code>Could not restore ${numTooLargeAttachments} attachment(s) due to Microsoft API limitations. Manual recovery is possible.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>O365LogRestoreMetrics</p> <pre><code>Restored ${numEmails} e-mails and ${numAttachments} attachments\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365MailBoxRestoreSuccess</p> <pre><code>Successfully restored ${numEmails} email(s) and ${numAttachments} attachment(s) from ${sourceUser} Microsoft 365 ${snappableType} to ${destinationUser}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365OnedriveExportSuccess</p> <pre><code>Successfully exported ${numRestoredFiles} file(s) (total uploaded size: ${bytesUploaded}) and ${numRestoredFolders} folder(s) from ${sourceUser} Microsoft 365 Onedrive. The download link has been generated successfully: ${exportUrl}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365OnedriveInplaceRestoreFailure</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numRestoredFiles} files (total uploaded size: ${bytesUploaded}) and ${numRestoredFolders}  folders from Microsoft 365 OneDrive ${sourceUser} to ${destinationUser}. Failed to restore ${failurePercent}%% of the items. For more  information, click here: ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365OnedriveInplaceRestoreFailureWithRenamedItems</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numRestoredFiles} files (total uploaded size: ${bytesUploaded}) and ${numRestoredFolders} folders from Microsoft 365 OneDrive ${sourceUser} to ${destinationUser}. (Renamed ${RenamesDueToNameConflictsCount} files and folders due to naming conflict  and ${RenamesDueToItemLockedCount} files that were locked for editing  and were not available for overwriting). Failed to restore  ${failurePercent}%% of the items. For more information, click here:  ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365OnedriveInplaceRestorePartialSuccess</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numRestoredFiles} files (total uploaded size: ${bytesUploaded}) and ${numRestoredFolders}  folders from Microsoft 365 OneDrive ${sourceUser} to ${destinationUser}. Failed to restore ${failurePercent}%% of the items. For more  information, click here: ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>O365OnedriveInplaceRestorePartialSuccessWithRenamedItems</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numRestoredFiles} files (total uploaded size: ${bytesUploaded}) and ${numRestoredFolders} folders from Microsoft 365 OneDrive ${sourceUser} to ${destinationUser}. (Renamed ${RenamesDueToNameConflictsCount} files and folders due to naming conflict  and ${RenamesDueToItemLockedCount} files that were locked for editing  and were not available for overwriting). Failed to restore  ${failurePercent}%% of the items. For more information, click here:  ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>O365OnedriveInplaceRestoreSuccess</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numRestoredFiles} files (total uploaded size: ${bytesUploaded}) and ${numRestoredFolders} folders from Microsoft 365 OneDrive ${sourceUser} to ${destinationUser}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365OnedriveInplaceRestoreSuccessWithRenamedItems</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numRestoredFiles} files (total uploaded size: ${bytesUploaded}) and ${numRestoredFolders} folders from Microsoft 365 OneDrive ${sourceUser} to ${destinationUser}. (Renamed ${RenamesDueToNameConflictsCount} files and folders due to naming conflict and ${RenamesDueToItemLockedCount} files that were  locked for editing and were not available for overwriting).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365OnedriveRestoreFailure</p> <pre><code>Successfully restored ${numRestoredFiles} file(s) (total uploaded size:  ${bytesUploaded}) and ${numRestoredFolders} folder(s) from ${sourceUser} Microsoft 365 OneDrive to ${destinationUser}. Failed to restore  ${failurePercent}%% of the items. For more information, click here:  ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365OnedriveRestorePartialSuccess</p> <pre><code>Successfully restored ${numRestoredFiles} file(s) (total uploaded size:  ${bytesUploaded}) and ${numRestoredFolders} folder(s) from ${sourceUser} Microsoft 365 OneDrive to ${destinationUser}. Failed to restore  ${failurePercent}%% of the items. For more information, click here:  ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>O365OnedriveRestoreSuccess</p> <pre><code>Successfully restored ${numRestoredFiles} file(s) (total uploaded size: ${bytesUploaded}) and ${numRestoredFolders} folder(s) from ${sourceUser} Microsoft 365 OneDrive to ${destinationUser}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365PublishRestoreProgress</p> <pre><code>Successfully recovered ${restoredItems} out of total ${totalItems}  items (${itemsSinceLastUpdate} items in last  ${progressIntervalInMins} minutes)\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>O365PublishSharePointSiteRestoreProgress</p> <pre><code>Recovered ${leafObjectsRestored} out of total ${totalLeafObjects} drives/lists. Total items recovered so far: ${totalItemsRestored}  (${itemsSinceLastUpdate} items in last ${progressIntervalInMins}  minutes). Currently recovering [${objectInProgress}], its progress so  far: ${itemsRestoredInCurrentObject} out of ${totalItemsInCurrentObject}  items\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>O365RelicRestoreStarted</p> <pre><code>Restoring the relic object\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>O365RelicRestoreSucceeded</p> <pre><code>Successfully restored the relic object. It will be visible on RSC once your subscription is refreshed\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365RestoreCanceled</p> <pre><code>Canceled restore of ${user} Microsoft 365 ${snappableType}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>O365RestoredItems</p> <pre><code>List of restored items in the CSV file: ${downloadLink}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365RestoreFailed</p> <pre><code>${userID} failed to start restore of O365 ${snappableType} from ${sourceSnappableName} to ${destinationSnappableName}. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p> <p>O365RestoreFailed</p> <pre><code>Failed to restore ${sourceUser} Microsoft 365 ${snappableType} data to ${destinationUser} because ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365RestoreStarted</p> <pre><code>${userID} started restore of Microsoft 365 ${snappableType} from '${sourceSnappableName}' to '${destinationSnappableName}'${optionalDescription}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>O365RestoreStarted</p> <pre><code>Started restore of ${sourceUser} Microsoft 365 ${snappableType} data to ${destinationUser}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365RestoreSuccess</p> <pre><code>Successfully restored ${sourceUser} Office 365 ${snappableType} data to ${destinationUser} account\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365SearchInProgress</p> <pre><code>Preparing items for the recovery\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>O365SearchPhaseCompleted</p> <pre><code>Successfully prepared ${totalItems} items for recovery\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365SharedTeamsInfo</p> <pre><code>Following teams originally belonged to Channel ${sourceChannel}. Please invite them to the newly created Shared Channel to complete their membership. ${sourceTenantTeams} ${externalTeams}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365SharePointDriveExportSuccess</p> <pre><code>Successfully exported ${numRestoredFiles} file(s) (total uploaded size: ${bytesUploaded}) and ${numRestoredFolders} folder(s) from ${sourceObject} Microsoft 365 ${snappableType}.The download link has been generated successfully: ${exportUrl}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365SharePointDriveRestoreSuccess</p> <pre><code>Successfully restored ${numRestoredFiles} file(s) (total uploaded size: ${bytesUploaded}) and ${numRestoredFolders} folder(s) from ${sourceObject} Microsoft 365 ${snappableType} to ${destinationObject}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365SharePointListRestoreSuccess</p> <pre><code>Successfully restored ${NumRestoredItems} item(s) and ${numRestoredFolders} folder(s) from ${sourceObject} Office 365 ${snappableType} to ${destinationObject}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365SharePointSiteHierarchyRestoreCompleted</p> <pre><code>Successfully prepared site hierarchy, initiating recovery of the drives/lists\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>O365SharePointSiteHierarchyRestoreInProgress</p> <pre><code>Preparing site hierarchy for the recovery\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>O365SharePointSiteInplaceRestoreFailure</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numRestoredSites} site(s),  ${numRestoredDocLibs} document libraries,  ${numRestoredLists} list(s),  ${numRestoredWebParts} page libraries, ${numRestoredFiles} file item(s),  ${numRestoredListItems} list item(s), and  ${numRestoredFolders} folder(s)  (total uploaded size: ${bytesUploaded})  from ${sourceObject}  Microsoft 365 ${snappableType} to ${destinationObject}. Failed to restore ${failurePercent}%% of the items. For more information, click here: ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365SharePointSiteInplaceRestoreFailureWithRenamedItems</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numRestoredSites} site(s),  ${numRestoredDocLibs} document libraries,  ${numRestoredLists} list(s),  ${numRestoredWebParts} page libraries, ${numRestoredFiles} file item(s),  ${numRestoredListItems} list item(s), and  ${numRestoredFolders} folder(s)  (total uploaded size: ${bytesUploaded})  from ${sourceObject}  Microsoft 365 ${snappableType} to ${destinationObject} (Renamed ${RenamesDueToNameConflictsCount} files and folders due to naming conflict and ${RenamesDueToItemLockedCount} files that were  locked for editing and were not available for overwriting). Failed to restore ${failurePercent}%% of the items. For more  information, click here: ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365SharePointSiteInplaceRestorePartialSuccess</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numRestoredSites} site(s),  ${numRestoredDocLibs} document libraries,  ${numRestoredLists} list(s),  ${numRestoredWebParts} page libraries, ${numRestoredFiles} file item(s),  ${numRestoredListItems} list item(s), and  ${numRestoredFolders} folder(s)  (total uploaded size: ${bytesUploaded})  from ${sourceObject}  Microsoft 365 ${snappableType} to ${destinationObject}. Failed to restore ${failurePercent}%% of the items. For more information, click here: ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>O365SharePointSiteInplaceRestorePartialSuccessWithRenamedItems</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numRestoredSites} site(s),  ${numRestoredDocLibs} document libraries,  ${numRestoredLists} list(s),  ${numRestoredWebParts} page libraries, ${numRestoredFiles} file item(s),  ${numRestoredListItems} list item(s), and  ${numRestoredFolders} folder(s)  (total uploaded size: ${bytesUploaded})  from ${sourceObject}  Microsoft 365 ${snappableType} to ${destinationObject} (Renamed ${RenamesDueToNameConflictsCount} files and folders due to naming conflict and ${RenamesDueToItemLockedCount} files that were  locked for editing and were not available for overwriting). Failed to restore ${failurePercent}%% of the items. For more  information, click here: ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>O365SharePointSiteInplaceRestoreSuccess</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numRestoredSites} site(s),  ${numRestoredDocLibs} document libraries,  ${numRestoredLists} list(s),  ${numRestoredWebParts} page libraries, ${numRestoredFiles} file item(s),  ${numRestoredListItems} list item(s), and  ${numRestoredFolders} folder(s)  (total uploaded size: ${bytesUploaded})  from ${sourceObject}  Microsoft 365 ${snappableType} to ${destinationObject}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365SharePointSiteInplaceRestoreSuccessWithRenamedItems</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numRestoredSites} site(s),  ${numRestoredDocLibs} document libraries,  ${numRestoredLists} list(s),  ${numRestoredWebParts} page libraries, ${numRestoredFiles} file item(s),  ${numRestoredListItems} list item(s), and  ${numRestoredFolders} folder(s)  (total uploaded size: ${bytesUploaded})  from ${sourceObject}  Microsoft 365 ${snappableType} to ${destinationObject} (Renamed ${RenamesDueToNameConflictsCount} files and folders due to naming conflict and ${RenamesDueToItemLockedCount} files that were  locked for editing and were not available for overwriting).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365SharePointSiteRestoreFailure</p> <pre><code>Successfully restored ${numRestoredSites} site(s),  ${numRestoredDocLibs} document libraries,  ${numRestoredLists} list(s),  ${numRestoredWebParts} page libraries, ${numRestoredFiles} file item(s),  ${numRestoredListItems} list item(s), and  ${numRestoredFolders} folder(s)  (total uploaded size: ${bytesUploaded})  from ${sourceObject}  Microsoft 365 ${snappableType} to ${destinationObject}. Failed to  restore ${failurePercent}%% of the items. For more information, click  here: ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365SharePointSiteRestorePartialSuccess</p> <pre><code>Successfully restored ${numRestoredSites} site(s),  ${numRestoredDocLibs} document libraries,  ${numRestoredLists} list(s),  ${numRestoredWebParts} page libraries, ${numRestoredFiles} file item(s),  ${numRestoredListItems} list item(s), and  ${numRestoredFolders} folder(s)  (total uploaded size: ${bytesUploaded})  from ${sourceObject}  Microsoft 365 ${snappableType} to ${destinationObject}. Failed to  restore ${failurePercent}%% of the items. For more information, click  here: ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>O365SharePointSiteRestoreSuccess</p> <pre><code>Successfully restored ${numRestoredSites} site(s),  ${numRestoredDocLibs} document libraries,  ${numRestoredLists} list(s),  ${numRestoredWebParts} page libraries, ${numRestoredFiles} file item(s),  ${numRestoredListItems} list item(s), and  ${numRestoredFolders} folder(s)  (total uploaded size: ${bytesUploaded})  from ${sourceObject}  Microsoft 365 ${snappableType} to ${destinationObject}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365TeamConversationsInplaceRestoreFailure</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numRestoredMessages} message(s) and ${numRestoredFiles} attachment(s) from Team  '${sourceObject}' (channels: ${sourceChannels}) to ${destinationObject}. Failed to restore ${failurePercent}%% of the items. For more  information, click here: ${failedItemsLink}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365TeamConversationsInplaceRestoreFailureWithWarning</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numRestoredMessages} message(s) and ${numRestoredFiles} attachment(s) from Team  '${sourceObject}' (channels: ${sourceChannels}) to ${destinationObject}. Failed to restore ${failurePercent}%% of the items. For more  information, click here: ${failedItemsLink} . Warning: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365TeamConversationsInplaceRestorePartialSuccess</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numRestoredMessages}  message(s) and ${numRestoredFiles} attachment(s) from Team  '${sourceObject}' (channels: ${sourceChannels}) to ${destinationObject}. Failed to restore ${failurePercent}%% of the items. For more  information, click here: ${failedItemsLink}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>O365TeamConversationsInplaceRestorePartialSuccessWithWarning</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numRestoredMessages} message(s) and ${numRestoredFiles} attachment(s) from Team  '${sourceObject}' (channels: ${sourceChannels}) to ${destinationObject}. Failed to restore ${failurePercent}%% of the items. For more  information, click here: ${failedItemsLink} . Warning: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>O365TeamConversationsInplaceRestoreSuccess</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numRestoredMessages} message(s) and ${numRestoredFiles} attachment(s) from Team  '${sourceObject}' (channels: ${sourceChannels}) to ${destinationObject}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365TeamConversationsInplaceRestoreWarning</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numRestoredMessages}  message(s) and ${numRestoredFiles} attachment(s) from Team  '${sourceObject}' (channels: ${sourceChannels}) to ${destinationObject}. Warning: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p> <p>O365TeamConversationsRestoreFailure</p> <pre><code>Successfully restored ${numRestoredMessages} message(s) and ${numRestoredFiles} attachment(s) from Team '${sourceObject}' (channels: ${sourceChannels}) to ${destinationObject}. Failed to restore  ${failurePercent}%% of the items. For more information, click here:  ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365TeamConversationsRestoreFailureWithWarning</p> <pre><code>Successfully restored ${numRestoredMessages} message(s) and ${numRestoredFiles} attachment(s) from Team '${sourceObject}' (channels: ${sourceChannels}) to ${destinationObject}. Failed to restore  ${failurePercent}%% of the items. For more information, click here:  ${failedItemsLink} . Warning: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365TeamConversationsRestorePartialSuccess</p> <pre><code>Successfully restored ${numRestoredMessages} message(s) and ${numRestoredFiles} attachment(s) from Team '${sourceObject}' (channels: ${sourceChannels}) to ${destinationObject}. Failed to restore  ${failurePercent}%% of the items. For more information, click here:  ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>O365TeamConversationsRestorePartialSuccessWithWarning</p> <pre><code>Successfully restored ${numRestoredMessages} message(s) and ${numRestoredFiles} attachment(s) from Team '${sourceObject}' (channels: ${sourceChannels}) to ${destinationObject}. Failed to restore  ${failurePercent}%% of the items. For more information, click here:  ${failedItemsLink} . Warning: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>O365TeamConversationsRestoreSuccess</p> <pre><code>Successfully restored ${numRestoredMessages} message(s) and ${numRestoredFiles} attachment(s) from Team '${sourceObject}' (channels: ${sourceChannels}) to ${destinationObject}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365TeamConversationsRestoreWarning</p> <pre><code>Successfully restored ${numRestoredMessages} message(s) and ${numRestoredFiles} attachment(s) from Team '${sourceObject}' (channels: ${sourceChannels}) to ${destinationObject}. Warning: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p> <p>O365TeamFilesExportSuccess</p> <pre><code>Successfully exported ${numRestoredFiles} file(s) (total uploaded size: ${bytesUploaded}) and ${numRestoredFolders} folder(s) from Team '${sourceObject}'. The download link has been generated successfully: ${exportUrl}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365TeamFilesInplaceRestoreFailure</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numRestoredFiles}  file(s) (total uploaded size: ${bytesUploaded}) and  ${numRestoredFolders} folder(s) from Team '${sourceObject}' to  ${destinationObject}. Failed to restore ${failurePercent}%% of the  items. For more information, click here: ${failedItemsLink}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365TeamFilesInplaceRestorePartialSuccess</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numRestoredFiles}  file(s) (total uploaded size: ${bytesUploaded}) and  ${numRestoredFolders} folder(s) from Team '${sourceObject}' to  ${destinationObject}. Failed to restore ${failurePercent}%% of the  items. For more information, click here: ${failedItemsLink}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>O365TeamFilesInplaceRestoreSuccess</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of ${numRestoredFiles}  file(s) (total uploaded size: ${bytesUploaded}) and ${numRestoredFolders} folder(s) from Team '${sourceObject}' to ${destinationObject}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365TeamFilesRestoreFailure</p> <pre><code>Successfully restored ${numRestoredFiles} file(s) (total uploaded size:  ${bytesUploaded}) and ${numRestoredFolders} folder(s) from Team  '${sourceObject}' to ${destinationObject}. Failed to restore  ${failurePercent}%% of the items. For more information, click here:  ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365TeamFilesRestorePartialSuccess</p> <pre><code>Successfully restored ${numRestoredFiles} file(s) (total uploaded size:  ${bytesUploaded}) and ${numRestoredFolders} folder(s) from Team  '${sourceObject}' to ${destinationObject}. Failed to restore  ${failurePercent}%% of the items. For more information, click here:  ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>O365TeamFilesRestoreSuccess</p> <pre><code>Successfully restored ${numRestoredFiles} file(s) (total uploaded size: ${bytesUploaded}) and ${numRestoredFolders} folder(s) from Team '${sourceObject}' to ${destinationObject}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365TeamFullChannelInplaceRestoreFailure</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of full channel  '${channelName}' from Team '${sourceObject}' to ${destinationObject}. ${numRestoredMessages} message(s), ${numRestoredFiles} file(s) (total  uploaded size: ${bytesUploaded}), and ${numRestoredFolders} folder(s)  were restored. Failed to restore ${failurePercent}%% of the items. For more information, click here: ${failedItemsLink}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365TeamFullChannelInplaceRestoreFailureWithWarning</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of full channel  '${channelName}' from Team '${sourceObject}' to ${destinationObject}. ${numRestoredMessages} message(s), ${numRestoredFiles} file(s)  (total uploaded size: ${bytesUploaded}), and ${numRestoredFolders}  folder(s) were restored. Failed to restore ${failurePercent}%% of the  items. For more information, click here: ${failedItemsLink}. Warning: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365TeamFullChannelInplaceRestorePartialSuccess</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of full channel  '${channelName}' from Team '${sourceObject}' to ${destinationObject}.  ${numRestoredMessages} message(s), ${numRestoredFiles} file(s)  (total uploaded size: ${bytesUploaded}), and ${numRestoredFolders}  folder(s) were restored. Failed to restore ${failurePercent}%% of the  items. For more information, click here: ${failedItemsLink}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>O365TeamFullChannelInplaceRestorePartialSuccessWithWarning</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of full channel  '${channelName}' from Team '${sourceObject}' to ${destinationObject}. ${numRestoredMessages} message(s), ${numRestoredFiles} file(s) (total  uploaded size: ${bytesUploaded}), and ${numRestoredFolders} folder(s)  were restored. Failed to restore ${failurePercent}%% of the items. For more information, click here: ${failedItemsLink}. Warning: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>O365TeamFullChannelInplaceRestoreSuccess</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of full channel  '${channelName}' from Team '${sourceObject}' to ${destinationObject}. ${numRestoredMessages} message(s), ${numRestoredFiles} file(s)  (total uploaded size: ${bytesUploaded}), and ${numRestoredFolders}  folder(s) were restored.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365TeamFullChannelInplaceRestoreWarning</p> <pre><code>Successfully completed ${inplaceRestoreUIName} of full channel  '${channelName}' from Team '${sourceObject}' to ${destinationObject}. ${numRestoredMessages} message(s), ${numRestoredFiles} file(s) (total  uploaded size: ${bytesUploaded}), and ${numRestoredFolders} folder(s)  were restored. Warning: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p> <p>O365TeamFullChannelRestoreFailure</p> <pre><code>Successfully restored full channel '${channelName}' from Team  '${sourceObject}' to ${destinationObject}. ${numRestoredMessages}  message(s), ${numRestoredFiles} file(s) (total uploaded size:  ${bytesUploaded}), and ${numRestoredFolders} folder(s) were restored. Failed to restore ${failurePercent}%% of the items. For more  information, click here: ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365TeamFullChannelRestoreFailureWithWarning</p> <pre><code>Successfully restored full channel '${channelName}' from Team '${sourceObject}' to ${destinationObject}. ${numRestoredMessages} message(s), ${numRestoredFiles} file(s) (total uploaded size: ${bytesUploaded}), and ${numRestoredFolders} folder(s) were restored. Failed to restore ${failurePercent}%% of the items. For more information, click here:  ${failedItemsLink}. Warning: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>O365TeamFullChannelRestorePartialSuccess</p> <pre><code>Successfully restored full channel '${channelName}' from Team  '${sourceObject}' to ${destinationObject}. ${numRestoredMessages}  message(s), ${numRestoredFiles} file(s) (total uploaded size:  ${bytesUploaded}), and ${numRestoredFolders} folder(s) were restored. Failed to restore ${failurePercent}%% of the items. For more  information, click here: ${failedItemsLink}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>O365TeamFullChannelRestorePartialSuccessWithWarning</p> <pre><code>Successfully restored full channel '${channelName}' from Team '${sourceObject}' to ${destinationObject}. ${numRestoredMessages} message(s), ${numRestoredFiles} file(s) (total uploaded size: ${bytesUploaded}), and ${numRestoredFolders} folder(s) were restored. Failed to restore ${failurePercent}%% of the items. For more information, click here:  ${failedItemsLink}. Warning: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningPartialSuccessNo</p> <p>O365TeamFullChannelRestoreSuccess</p> <pre><code>Successfully restored full channel '${channelName}' from Team '${sourceObject}' to ${destinationObject}. ${numRestoredMessages} message(s), ${numRestoredFiles} file(s) (total uploaded size: ${bytesUploaded}), and ${numRestoredFolders} folder(s) were restored.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>O365TeamFullChannelRestoreWarning</p> <pre><code>Successfully restored full channel '${channelName}' from Team '${sourceObject}' to ${destinationObject}. ${numRestoredMessages} message(s), ${numRestoredFiles} file(s) (total uploaded size: ${bytesUploaded}), and ${numRestoredFolders} folder(s) were restored. Warning: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Recovery/#postgres_db_cluster","title":"postgres_db_cluster","text":"<p>DeletePostgresDbClusterLiveMountFailure</p> <pre><code>${username} failed to trigger the deletion of a Live Mount for the PostgreSQL database cluster. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>DeletePostgresDbClusterLiveMountStarted</p> <pre><code>${username} triggered the deletion of a Live Mount for the PostgreSQL database cluster.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Recovery/#saasapps","title":"saasapps","text":"<p>SaasAppsCascadingImpactAnalysisJobFailed</p> <pre><code>Unable to complete impact analysis of ${numKeys} keys ${selectedKeys}.  Contact Rubrik Support.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureNo</p> <p>SaasAppsCascadingImpactAnalysisJobStarted</p> <pre><code>Started impact analysis of ${numKeys} keys ${selectedKeys}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>SaasAppsCascadingImpactAnalysisJobSucceeded</p> <pre><code>Successfully completed impact analysis of ${numKeys} keys ${selectedKeys}.  Check notifications to resume the restore.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>SaasAppsRestoreCanceled</p> <pre><code>Canceled restore of ${displayName} ${snappableType}.  ${attachmentURLMessage}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>SaasAppsRestoreCompleted</p> <pre><code>Successfully completed restore of ${displayName} ${snappableType}.  ${attachmentURLMessage}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>SaasAppsRestoreFailed</p> <pre><code>Unable to restore ${displayName} ${snappableType}. Reason: ${reason}.  ${attachmentURLMessage}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>SaasAppsRestoreStarted</p> <pre><code>${userID} started restore of ${displayName} ${snappableType}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SaasAppsRestoreStarted</p> <pre><code>Started restore of ${displayName} ${snappableType}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>SaasAppsRestoreStartFailed</p> <pre><code>${userID} failed to start restore of ${displayName} ${snappableType}.  Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Recovery/#testaudit","title":"testaudit","text":"<p>Test</p> <pre><code>This is a test audit.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Recovery/#vsphere","title":"vsphere","text":"<p>ExportSnapshotToStandaloneHostFailed</p> <pre><code>${username} failed to start a job to export '${snappableName}' to standalone host '${hostName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>ExportSnapshotToStandaloneHostStarted</p> <pre><code>${username} started a job to export '${snappableName}' with a snapshot to standalone host '${hostName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RelocateVsphereMountFailed</p> <pre><code>${username} failed to relocate vSphere mount '${mountId}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>RelocateVsphereMountStarted</p> <pre><code>${username} started a job to relocate vSphere mount '${mountId}'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TriggerDownloadVirtualMachineFileJobFailed</p> <pre><code>${username} failed to start a job to prepare Virtual Machine file  download for '${vmName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>TriggerDownloadVirtualMachineFileJobSucceeded</p> <pre><code>${username} started a job to prepare Virtual Machine file download  for '${vmName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>VSphereBulkExportSingleFailed</p> <pre><code>${username} failed to start a job to export a snapshot on Virtual Machine '${vmId}' (${vmName}). Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>VSphereBulkExportSingleStarted</p> <pre><code>${username} started a job to export a snapshot on Virtual Machine '${vmId}' (${vmName}).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>VSphereBulkInPlaceRecoverySingleFailed</p> <pre><code>${username} failed to start a job to in-place recover a snapshot on Virtual Machine '${vmId}' (${vmName}). Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>VSphereBulkInPlaceRecoverySingleStarted</p> <pre><code>${username} started a job to in-place recover a snapshot on Virtual Machine '${vmId}' (${vmName}).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>VSphereBulkInstantRecoverySingleFailed</p> <pre><code>${username} failed to start a job to instantly recover a snapshot on Virtual Machine '${vmId}' (${vmName}). Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>VSphereBulkInstantRecoverySingleStarted</p> <pre><code>${username} started a job to instantly recover a snapshot on Virtual Machine '${vmId}' (${vmName}).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>VSphereBulkLiveMountSingleFailed</p> <pre><code>${username} failed to start a job to mount a snapshot on Virtual Machine '${vmId}' (${vmName}). Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>VSphereBulkLiveMountSingleStarted</p> <pre><code>${username} started a job to mount a snapshot on Virtual Machine '${vmId}' (${vmName}).\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>VSphereExportFailed</p> <pre><code>${username} failed to start a job to export '${snappableName}' with a snapshot taken at '${snapshotDate}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>VSphereExportStarted</p> <pre><code>${username} started a job to export '${snappableName}' with a snapshot taken at '${snapshotDate}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>VSphereInPlaceRecoveryFailed</p> <pre><code>${username} failed to start a job to in-place recover '${snappableName}' with a snapshot taken at '${snapshotDate}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>VSphereInPlaceRecoveryStarted</p> <pre><code>${username} started a job to in-place recover '${snappableName}' with a snapshot taken at '${snapshotDate}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>VSphereInstantRecoverFailed</p> <pre><code>${username} failed to instantly recover '${snappableName}' with a snapshot taken at '${snapshotDate}'. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>VSphereInstantRecoverStarted</p> <pre><code>${username} started a job to instantly recover '${snappableName}' with a snapshot taken at '${snapshotDate}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>VSphereLatestExportFailed</p> <pre><code>${username} failed to export '${snappableName}' to the latest available recovery point. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>VSphereLatestExportStarted</p> <pre><code>${username} started a job to export '${snappableName}' to the latest available recovery point.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>VSphereLatestInPlaceRecoveryFailed</p> <pre><code>${username} failed to start a job to in-place recover '${snappableName}' to the latest available recovery point. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>VSphereLatestInPlaceRecoveryStarted</p> <pre><code>${username} started a job to in-place recover '${snappableName}' to the latest available recovery point.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>VSphereLatestInstantRecoverFailed</p> <pre><code>${username} failed to instantly recover '${snappableName}' to the latest available recovery point. Failure reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>VSphereLatestInstantRecoverStarted</p> <pre><code>${username} started a job to instantly recover '${snappableName}' to the latest available recovery point.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>VSphereLatestLiveMountFailed</p> <pre><code>${username} failed to mount '${snappableName}' to the latest available recovery point.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>VSphereLatestLiveMountStarted</p> <pre><code>${username} started a job to mount '${snappableName}' to the latest available recovery point.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>VSphereLiveMountFailed</p> <pre><code>${username} failed to mount '${snappableName}' with a snapshot taken at '${snapshotDate}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>VSphereLiveMountStarted</p> <pre><code>${username} started a job to mount '${snappableName}' with a snapshot taken at '${snapshotDate}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Replication/","title":"Replication","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Replication/#app_failover","title":"app_failover","text":"<p>ReplicateBlueprintSnapshotFailed</p> <pre><code>Failed to replicate the latest snapshot of recovery plan '${appName}' to cluster '${cluster}' in '${account}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ReplicateBlueprintSnapshotPrepareTaskFailed</p> <pre><code>Failed to prepare replication: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>ReplicateBlueprintSnapshotTriggerTaskFailed</p> <pre><code>Failed to replicate the latest snapshot of recovery plan '${appName}' to cluster '${cluster}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Replication/#cloudnative","title":"cloudnative","text":"<p>CloudNativeReplicateSnapshotsIntegrityTaskFailed</p> <pre><code>Validation of a replicated snapshot taken at ${snapshotTimeDisplay} for the ${qualifiedSnappableDisplayText} to the ${region} failed.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>CloudNativeReplicateSnapshotsReplicateTaskFailed</p> <pre><code>Failed to replicate the snapshot taken at ${snapshotTimeDisplay} for the ${qualifiedSnappableDisplayText} to the ${targetLocation}. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>CloudNativeReplicateSnapshotsReplicateTaskStarted</p> <pre><code>Replicating the snapshot taken at ${snapshotTimeDisplay} for the ${qualifiedSnappableDisplayText} to the ${targetLocation}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CloudNativeReplicateSnapshotsReplicateTaskSucceeded</p> <pre><code>Successfully replicated snapshot taken at ${snapshotTimeDisplay} for the ${qualifiedSnappableDisplayText} to the ${targetLocation}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CloudNativeReplicateSnapshotsSkipped</p> <pre><code>Replication of snapshot(s) taken at ${snapshotTimesDisplay} for the ${qualifiedSnappableDisplayText} was skipped because newer snapshot(s) have already been replicated.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/SCHEDULE_RECOVERY/","title":"SCHEDULE RECOVERY","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/SCHEDULE_RECOVERY/#app_failover","title":"app_failover","text":"<p>ScheduleRecoveryCleanupFailed</p> <pre><code>Failed to run cleanup for ${failoverType} job for ${blueprintName}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>ScheduleRecoveryCleanupStarted</p> <pre><code>Starting to schedule cleanup for ${failoverType} job for ${blueprintName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ScheduleRecoveryCleanupSucceeded</p> <pre><code>Successfully completed cleanup for ${failoverType} job for ${blueprintName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ScheduleRecoveryCompleted</p> <pre><code>Scheduled recovery completed for ${blueprintName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ScheduleRecoveryFailed</p> <pre><code>Scheduled recovery failed for ${blueprintName}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ScheduleRecoveryNotifyFailed</p> <pre><code>Failed to notify users for results of scheduled recovery for ${blueprintName}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>ScheduleRecoveryNotifyStarted</p> <pre><code>Starting to notify users for results of scheduled recovery for ${blueprintName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ScheduleRecoveryNotifySucceeded</p> <pre><code>Successfully notified users for results of scheduled recovery for ${blueprintName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ScheduleRecoveryPostcheckFailed</p> <pre><code>Failed to run postchecks for scheduled recovery for ${blueprintName}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>ScheduleRecoveryPostcheckStarted</p> <pre><code>Starting to run postchecks for scheduled recovery for ${blueprintName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ScheduleRecoveryPostcheckSucceeded</p> <pre><code>Successfully completed postchecks for scheduled recovery for ${blueprintName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ScheduleRecoveryPrecheckFailed</p> <pre><code>Failed to run prechecks for scheduled recovery for ${blueprintName}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>ScheduleRecoveryPrecheckNotSatisfied</p> <pre><code>Scheduled recovery for ${blueprintName} doesn't meet all precheck criteria. Skipping recovery plan test. Reason: ${failedPrecheckErr}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>ScheduleRecoveryPrecheckStarted</p> <pre><code>Starting to run prechecks for scheduled recovery for ${blueprintName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ScheduleRecoveryPrecheckSucceeded</p> <pre><code>Successfully completed prechecks for scheduled recovery for ${blueprintName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ScheduleRecoveryReportGenerationFailed</p> <pre><code>Failed to generate report for scheduled recovery for ${blueprintName}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>ScheduleRecoveryReportGenerationStarted</p> <pre><code>Starting to generate report for scheduled recovery for ${blueprintName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ScheduleRecoveryReportGenerationSucceeded</p> <pre><code>Successfully generated report for scheduled recovery for ${blueprintName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ScheduleRecoveryStarted</p> <pre><code>Starting scheduled recovery for ${blueprintName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ScheduleRecoveryTestRecoveryFailed</p> <pre><code>Failed to schedule ${failoverType} job for ${blueprintName}. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>ScheduleRecoveryTestRecoveryStarted</p> <pre><code>Starting to schedule ${failoverType} job for ${blueprintName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ScheduleRecoveryTestRecoverySucceeded</p> <pre><code>Successfully completed ${failoverType} for ${blueprintName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Search/","title":"Search","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Search/#o365","title":"o365","text":"<p>O365Search</p> <pre><code>${userID} performed the following search on ${snappableType} ${snappableName}: ${query}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/SlaAssignment/","title":"SlaAssignment","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/SlaAssignment/#sla","title":"sla","text":"<p>RetentionSLAAssignmentOnClusterObjectsProcessed</p> <pre><code>${userEmail} successfully initiated request to assign retention SLA ${slaName} to objects ${objectNameList} on cluster ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RetentionSLAAssignmentOnClusterSnapshotsProcessed</p> <pre><code>${userEmail} successfully initiated request to assign retention SLA ${slaName} to snapshots ${snapshotIdList} on cluster ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RetentionSLAAssignmentOnPolarisObjectsProcessed</p> <pre><code>${userEmail} successfully assigned retention SLA ${slaName}. to objects ${objectNameList} on RSC\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RetentionSLAAssignmentOnPolarisObjectsQueued</p> <pre><code>${userEmail} successfully initiated request to assign retention SLA Domain ${slaName} to objects ${objectNameList} on RSC\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RetentionSLAAssignmentOnPolarisSnapshotsProcessed</p> <pre><code>${userEmail} successfully assigned retention SLA ${slaName}. to snapshots ${snapshotIdList} on RSC\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SLAAssignmentOnClusterProcessed</p> <pre><code>${userEmail} successfully initiated request to assign SLA Domain ${slaName} to ${objectList} on cluster ${clusterName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SLAAssignmentOnPolarisProcessed</p> <pre><code>${userEmail} successfully assigned SLA ${slaName} to ${objectList} on RSC\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SLAAssignmentOnPolarisQueued</p> <pre><code>${userEmail} successfully initiated request to assign SLA Domain  ${slaName} to ${objectList} on RSC\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/SlaModification/","title":"SlaModification","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/SlaModification/#sla","title":"sla","text":"<p>SLACreationSucceeded</p> <pre><code>${userEmail} successfully created Global SLA ${slaName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SLADeletionSucceeded</p> <pre><code>${userEmail} successfully deleted Global SLA ${slaName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SLAMigrationEnqueueFailure</p> <pre><code>${userEmail} did not succeed in initiating request to upgrade SLA Domain ${slaName} from cluster ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureYes</p> <p>SLAMigrationEnqueueSuccess</p> <pre><code>${userEmail} successfully initiated request to switch SLA ${slaName} from cluster ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SLAModificationSucceeded</p> <pre><code>${userEmail} successfully modified Global SLA ${slaName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>SLAPauseSucceeded</p> <pre><code>${userEmail} successfully ${action} Global SLA ${slaName} on ${clusterName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Sync/","title":"Sync","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Sync/#archival","title":"archival","text":"<p>ArchivalLocationKmsUpdateFailed</p> <pre><code>Failed to update KMS details for Archival Location {locationName}\u2019s on  cluster {clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ArchivalLocationKmsUpdateSucceeded</p> <pre><code>Successfully updated KMS details for Archival Location {locationName}\u2019s on cluster  {clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ArchivalLocationOperationSuccess</p> <pre><code>${type} location '${name}' has been successfully ${operation}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ArchivalLocationUnsyncedDeleteFailed</p> <pre><code>Failed to remove the entry corresponding to the archival location, ${name}, from the UI. The location could not be synced either due to invalid parameters or unrecoverable/ fatal error. Contact Rubrik Support to remove this entry from the UI. Verify the parameters used during creation of the archival location and retry the operation with a new name.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureNo</p> <p>ArchivalLocationUnsyncedDeleteStarted</p> <pre><code>Started removing the entry for archival location ${name} from the UI that could not be synced either due to invalid parameters or unrecoverable/fatal error. Error description: ${description}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>ArchivalLocationUnsyncedDeleteSuccess</p> <pre><code>Archival location ${name} entry was removed from the UI since it could not be synced either due to invalid parameters or unrecoverable/fatal error. Verify and try again. Error description: ${description}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ArchivalLocationUpgradeFailed</p> <pre><code>Unable to upgrade the CDM managed archival location '${name}' on Rubrik cluster '${cluster}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureNo</p> <p>ArchivalLocationUpgradeStarted</p> <pre><code>Started the upgrade of CDM managed archival location '${name}' on Rubrik cluster '${cluster}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>ArchivalLocationUpgradeSuccess</p> <pre><code>Successfully completed the upgrade of CDM managed archival location '${name}' on Rubrik cluster '${cluster}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ReaderArchivalLocationRefreshFailed</p> <pre><code>Failed to refresh reader archival location ${name}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Sync/#encryption","title":"encryption","text":"<p>FederatedLoginCleanupFailure</p> <pre><code>Unable to clean up federated access configuration on Rubrik cluster, '${cluster}.'\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>FederatedLoginCleanupSuccess</p> <pre><code>Successfully cleaned up federated access configuration on Rubrik cluster, '${cluster}.'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>FederatedLoginConfigurationFailure</p> <pre><code>Unable to configure federated access on Rubrik cluster, '${cluster}.'\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>FederatedLoginConfigurationSuccess</p> <pre><code>Successfully configured federated access on Rubrik cluster, '${cluster}.'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>FederatedLoginGenericError</p> <pre><code>Failed to toggle federated login configuration on Rubrik cluster, '${cluster}.'\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Sync/#encryption_keys","title":"encryption_keys","text":"<p>ArchivalRekeyQueued</p> <pre><code>Queued the rekey of ${rekeyJobType} on archival location ${locationName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Sync/#oktaintegration","title":"oktaintegration","text":"<p>OktaIntegrationSendEventFailure</p> <pre><code>RSC failed to send ${failureCount} SSF messages to Okta ITP.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>OktaIntegrationSendEventSuccess</p> <pre><code>RSC succeeded to send SSF messages to Okta ITP.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Sync/#pending_action","title":"pending_action","text":"<p>AppBlueprintChangeSyncFailed</p> <pre><code>Failed to ${operation} Blueprint ${data} on cluster: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>AppBlueprintChangeSyncStarted</p> <pre><code>Started to ${operation} Blueprint ${data} on cluster\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>AppBlueprintChangeSyncSucceed</p> <pre><code>Succeeded to ${operation} Blueprint ${data} on cluster\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ArchivalLocationJobInitiated</p> <pre><code>Job to sync Archival Location was successfully initiated on cluster\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ArchivalLocationSyncFailed</p> <pre><code>Failed to sync Archival Location to the cluster: Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ArchivalLocationSyncStarted</p> <pre><code>Started to sync Archival Location to the cluster.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ArchivalLocationSyncSucceed</p> <pre><code>Succeeded to sync Archival Location to the cluster\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>GlobalSLAAssignFailed</p> <pre><code>Failed to assign RSC SLA Domain '${slaName}' to objects '${objectNames}' on the Rubrik cluster '${clusterName}'. Reason: '${reason}'\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>GlobalSLAAssignStarted</p> <pre><code>Started to assign RSC SLA Domain '${slaName}' to objects '${objectNames}' on cluster '${clusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>GlobalSLAAssignSuccess</p> <pre><code>RSC SLA Domain '${slaName}' is successfully assigned  to objects '${objectNames}' on the Rubrik cluster '${clusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>GlobalSLAAssignSynced</p> <pre><code>Sent request to Rubrik cluster '${clusterName}' to assign  RSC SLA Domain `${slaName}` to objects '${objectNames}'. Update may take a few minutes to complete.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ReplicationLocationEnableFailed</p> <pre><code>Failed to add replication target: ${targetName} on the cluster. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ReplicationLocationEnableStarted</p> <pre><code>Started to add replication target: ${targetName} on the cluster\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ReplicationLocationEnableSucceed</p> <pre><code>Succeeded to add replication target: ${targetName} on cluster\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>RetentionSLAAssignmentToObjectsFailed</p> <pre><code>Failed to assign retention SLA: ${slaName} to objects: ${objects} on cluster. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>RetentionSLAAssignmentToObjectsStarted</p> <pre><code>Started to assign retention SLA: ${slaName} to objects: ${objects} on cluster\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>RetentionSLAAssignmentToObjectsSucceeded</p> <pre><code>Succeeded to assign retention SLA: ${slaName} to objects: ${objects} on cluster\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>RetentionSLAAssignmentToSnapshotsFailed</p> <pre><code>Failed to assign SLA: ${slaName} to snapshot IDs: ${snapshotIDs} on cluster. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>RetentionSLAAssignmentToSnapshotsStarted</p> <pre><code>Started to assign retention SLA: ${slaName} to snapshot IDs: ${snapshotIDs} on cluster\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>RetentionSLAAssignmentToSnapshotsSucceeded</p> <pre><code>Succeeded to assign SLA: ${slaName} to snapshot IDs: ${snapshotIDs} on cluster\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>RetentionSLAAssignmentV2ToSnapshotsFailed</p> <pre><code>Rubrik cluster '${clusterName}' could not assign SLA Domain '${slaName}' to snapshot '${snapshotNames}'. Reason: '${reason}'\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>RetentionSLAAssignmentV2ToSnapshotsStarted</p> <pre><code>Started to assign retention SLA '${slaName}' to snapshot '${snapshotNames}' on cluster\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>RetentionSLAAssignmentV2ToSnapshotsSuccess</p> <pre><code>Rubrik cluster '${clusterName}' successfully assigned SLA Domain '${slaName}' to snapshot '${snapshotNames}'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>RetentionSLAAssignmentV2ToSnapshotsSynced</p> <pre><code>Successfully passed request to Rubrik cluster '${clusterName}' to assign SLA Domain '${slaName}' to snapshot '${snapshotNames}'. Update may take a few minutes to complete\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ServiceAccountSyncFailed</p> <pre><code>Unable to ${operation} RSC service accounts: ${serviceAccountID} on the Rubrik cluster.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>SLAAssignmentFailed</p> <pre><code>Failed to assign SLA: ${slaName} to objects: ${objects} on cluster. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>SLAAssignmentStarted</p> <pre><code>Started to assign SLA: ${slaName} to objects: ${objects} on cluster\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>SLAAssignmentSucceed</p> <pre><code>Succeeded to assign SLA: ${slaName} to objects: ${objects} on cluster\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>SLAChangeSyncFailed</p> <pre><code>Failed to ${operation} SLA Domain ${name} to the cluster. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>SLAChangeSyncFailedWithInvalidRetention</p> <pre><code>Failed to ${operation} SLA Domain ${name} to the cluster. Reason: ${reason}. For more information about failures due to invalid retention, refer to ${articleLink}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>SLAChangeSyncStarted</p> <pre><code>Started to ${operation} SLA Domain ${name} on the cluster\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>SLAChangeSyncSucceeded</p> <pre><code>Successfully synced SLA Domain ${slaDomainName} to the cluster ${clusterName}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>SnapshotDeletionFailed</p> <pre><code>Failed to delete snapshots: ${snapshotIds} of object: ${objectName} on cluster. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>SnapshotDeletionStarted</p> <pre><code>Started to delete snapshots: ${snapshotIds} of object: ${objectName} on cluster\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>SnapshotDeletionSucceeded</p> <pre><code>Succeeded to delete snapshots: ${snapshotIds} of object: ${objectName} on cluster\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>SnapshotsOfObjectDeletionFailed</p> <pre><code>Failed to delete all unprotected snapshots of objects: ${objectNameList} on cluster. Reason: ${reason}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>SnapshotsOfObjectDeletionStarted</p> <pre><code>Started to delete all unprotected snapshots of objects: ${objectNameList} on cluster\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>SnapshotsOfObjectDeletionSucceeded</p> <pre><code>Succeeded to delete all unprotected snapshots of objects: ${objectNameList} on cluster\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Sync/#rcv","title":"rcv","text":"<p>RcvReaderArchivalLocationMasterKeyUpdateFailed</p> <pre><code>Unable to update the master encryption key for reader Rubrik Cloud Vault location ${objectName} on cluster ${clusterName}. Unable to update reader Rubrik Cloud Vault location ${objectName}\u2019s encryption key to the new ${keyType} key.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>RcvReaderArchivalLocationMasterKeyUpdateFailedAkv</p> <pre><code>Unable to update the master encryption key for reader Rubrik Cloud Vault location ${objectName}\u2019s on cluster ${clusterName}. Unable to update reader Rubrik Cloud Vault location ${objectName}\u2019s encryption key to ${keyName} from ${akvName}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>RcvReaderArchivalLocationMasterKeyUpdateSucceeded</p> <pre><code>Successfully updated the master encryption key for reader Rubrik Cloud Vault location ${objectName} on cluster ${clusterName}. Reader Rubrik Cloud Vault location ${objectName}\u2019s encryption key updated to the new ${keyType} key.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>RcvReaderArchivalLocationMasterKeyUpdateSucceededAkv</p> <pre><code>Successfully updated the master encryption key for reader Rubrik Cloud Vault location ${objectName} on cluster ${clusterName}. Reader Rubrik Cloud Vault location ${objectName}\u2019s encryption key updated to ${keyName} from ${akvName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>RCVResourceCreationFailed</p> <pre><code>Unable to allocate required resource '${resourceType}' for the RCV location '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>RCVResourceCreationSuccess</p> <pre><code>The required ${resourceType} resource has been allocated for the RCV location '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Sync/#replication","title":"replication","text":"<p>ReplicationPairingFailed</p> <pre><code>Failed to create a replication pair between the source cluster  '${sourceCluster}' and the target cluster '${targetCluster}'. Create a  replication pair for them. Error: ${errMsg}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Sync/#saasapps","title":"saasapps","text":"<p>SaasAppsRefreshOrgCanceled</p> <pre><code>Canceled ${maintenanceType} metadata refresh for org ${orgName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>SaasAppsRefreshOrgCompleted</p> <pre><code>Completed ${maintenanceType} metadata refresh for org ${orgName}. ${statsMsg}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>SaasAppsRefreshOrgCompletedWithWarnings</p> <pre><code>Completed ${maintenanceType} metadata refresh for org ${orgName} with warnings. ${statsMsg}. ${warningMsg}\n</code></pre> <p>SeverityStatusAudit Event <p>WarningSuccessNo</p> <p>SaasAppsRefreshOrgFailed</p> <pre><code>Failed ${maintenanceType} metadata refresh of ${siteName}: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>SaasAppsRefreshOrgStarted</p> <pre><code>Started ${maintenanceType} metadata refresh for subscription ${orgName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/TENANT_OVERLAP/","title":"TENANT OVERLAP","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/TENANT_OVERLAP/#multitenancy","title":"multitenancy","text":"<p>TenantOverlapDetected</p> <pre><code>Tenant organization ${orgName1}'s permission on ${objectName} has a conflict with  ${conflictObjects}. As a result of this conflict, specific resources are being  assigned to multiple orgs and this is not allowed. Further, this can lead to  unexpected behavior until the conflict is resolved. To resolve this conflict, edit the organizations and reassign the appropriate rules to each org. Note that  all organizations will have access to the same objects until the conflict is resolved.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/TENANT_QUOTA/","title":"TENANT QUOTA","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/TENANT_QUOTA/#multitenancy","title":"multitenancy","text":"<p>TenantQuotaHardLimitExceeded</p> <pre><code>The organization ${orgName} has exceeded its ${hardLimit} disk hard quota on cluster ${clusterName}, curently using ${currentUsage}. Due to this overage, RSC is unable to continue taking snapshots for this organization's objects on the cluster. You should address this overage promptly to ensure continued compliance with your backup service-level agreements. Visit the organization overview page to view ${orgName}'s usage on the affected cluster over time. For questions, contact your Global Account Administrator.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>TenantQuotaHardLimitResolved</p> <pre><code>The disk usage for the organization ${orgName} on cluster ${clusterName} is now within the acceptable limits. The hard quota limit issue has been  successfully resolved. Backup snapshots for objects on this cluster have been resumed and are operating normally as per your service-level agreements.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>TenantQuotaSoftLimitExceeded</p> <pre><code>The organization ${orgName} has exceeded its ${softLimit} disk soft quota on cluster ${clusterName}, currently using ${currentUsage}. This organization is approaching its hard limit of ${hardLimit}. If it exceeds the hard limit of ${hardLimit}, RSC will be unable to perform snapshot backups for this organization's objects on the cluster. Reduce your disk usage to avoid future disruptions.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>TenantQuotaSoftLimitResolved</p> <pre><code>The organization ${orgName} has successfully reduced its disk usage on cluster ${clusterName} to below the soft quota limit.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/THREAT_FEED/","title":"THREAT FEED","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/THREAT_FEED/#orion","title":"orion","text":"<p>OrionThreatFeedEntryDisabled</p> <pre><code>Threat feed entry for ${entryDetails} has been disabled by ${userEmail}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>OrionThreatFeedEntryEnabled</p> <pre><code>Threat feed entry for ${entryDetails} has been enabled by ${userEmail}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/THREAT_FEED/#threat_feed","title":"threat_feed","text":"<p>DownloadThreatFeedFailure</p> <pre><code>Unable to download threat feed version: ${version}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>DownloadThreatFeedSuccess</p> <pre><code>Successfully downloaded threat feed version: ${version}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>NewThreatIntelFailure</p> <pre><code>Failed to ingest intel from ${provider} because of ${failureReason}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureNo</p> <p>NewThreatIntelSuccess</p> <pre><code>New threat intel includes ${iocsAndProviders}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ThreatMonitoringHashCatalogAnalysisFailed</p> <pre><code>Unable to perform full Threat Monitoring hash analysis with Threat Feed  Version ${hashTfVersion}. Found file hash matches for ${numFilesWithMatches} files.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoFailureNo</p> <p>ThreatMonitoringHashCatalogAnalysisMatchesFound</p> <pre><code>Completed full Threat Monitoring hash analysis with Hash Threat Feed  Version ${hashTfVersion}. Found file hash matches for ${numFilesWithMatches} files.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalSuccessNo</p> <p>ThreatMonitoringHashCatalogAnalysisNoMatchesFound</p> <pre><code>Completed full Threat Monitoring hash analysis with Hash Threat Feed  Version ${hashTfVersion}. No matches found.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/THREAT_HUNT/","title":"THREAT HUNT","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/THREAT_HUNT/#radar","title":"radar","text":"<p>RadarThreatHuntCancelled</p> <pre><code>${user} canceled the threat hunt '${huntName}' taken on ${huntDate}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p> <p>RadarThreatHuntStarted</p> <pre><code>${user} started a threat hunt '${huntName}' taken on ${huntDate}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessYes</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/THREAT_MONITORING/","title":"THREAT MONITORING","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/THREAT_MONITORING/#threat_monitoring","title":"threat_monitoring","text":"<p>ThreatMonitoringAnalysisFailed</p> <pre><code>Failed to run Threat Monitoring analysis of snapshot taken on ${snapshotDate} of '${snappableName}': ${failureReason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>ThreatMonitoringAnalysisStarted</p> <pre><code>Started Threat Monitoring analysis of snapshot taken on ${snapshotDate} of '${snappableName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ThreatMonitoringAnalysisSucceeded</p> <pre><code>Completed Threat Monitoring analysis of snapshot taken on ${snapshotDate} of '${snappableName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ThreatMonitoringFullAnalysisFailed</p> <pre><code>Failed to run a full Threat Monitoring analysis on '${snappableName}' using YARA Threat Feed  version ${yaraTfVersion}: ${failureReason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningFailureNo</p> <p>ThreatMonitoringFullAnalysisStarted</p> <pre><code>Started a full Threat Monitoring analysis on ${snappableName}' using YARA Threat Feed version ${yaraTfVersion}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ThreatMonitoringFullAnalysisSucceeded</p> <pre><code>Completed full Threat Monitoring analysis on '${snappableName}' using YARA Threat Feed version ${yaraTfVersion} and  Hash Threat Feed version ${hashTfVersion}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>ThreatMonitoringFullHashAnalysisMatchesFound</p> <pre><code>Completed full Threat Monitoring hash analysis on '${snappableName}' using Hash Threat Feed version ${hashTfVersion}. Found ${numHashMatches} hash matches.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskSuccessNo</p> <p>ThreatMonitoringFullHashAnalysisNoMatchesFound</p> <pre><code>Completed full Threat Monitoring hash analysis on '${snappableName}' using Hash Threat Feed version ${hashTfVersion}. No matches found.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ThreatMonitoringFullYaraAnalysisMatchesFound</p> <pre><code>Completed full Threat Monitoring YARA analysis on  '${snappableName}' using Threat Feed version ${yaraTfVersion}.  Found ${numYaraRuleMatches} YARA rule matches.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskSuccessNo</p> <p>ThreatMonitoringFullYaraAnalysisNoMatchesFound</p> <pre><code>Completed full Threat Monitoring YARA analysis on '${snappableName}' using YARA Threat Feed version ${yaraTfVersion}.  No matches found.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ThreatMonitoringHashMatchesFound</p> <pre><code>Found file hash matches for ${numFilesWithMatches} files.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskSuccessNo</p> <p>ThreatMonitoringNoHashMatchesFound</p> <pre><code>Found no file hash matches.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ThreatMonitoringNoYaraMatchesFound</p> <pre><code>Found no YARA rule matches.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ThreatMonitoringYaraError</p> <pre><code>Error while analyzing YARA rule matches: ${failureReason}.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskFailureNo</p> <p>ThreatMonitoringYaraMatchesFound</p> <pre><code>Found ${numYaraRuleMatches} YARA rule matches.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/TestFailover/","title":"TestFailover","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/TestFailover/#app_failover","title":"app_failover","text":"<p>BlueprintFailoverTestDataIngestionFailed</p> <pre><code>'${dataIngestionOperation}' process for test failover failed for recovery plan '${name}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>BlueprintFailoverTestDataIngestionStarted</p> <pre><code>Starting the '${dataIngestionOperation}' process for test failover for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintFailoverTestDataIngestionSucceed</p> <pre><code>'${dataIngestionOperation}' process for test failover succeeded for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintFailoverTestFinalizeFailed</p> <pre><code>Final failover tasks failed for test failover of recovery plan '${name}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>BlueprintFailoverTestFinalizeStarted</p> <pre><code>Starting the final failover tasks for test failover of recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintFailoverTestFinalizeSucceed</p> <pre><code>Failover succeeded for failover of recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>BlueprintFailoverTestIncrementalDataTransferFailed</p> <pre><code>Incremental data transfer process for test failover failed for recovery plan '${name}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>BlueprintFailoverTestIncrementalDataTransferStarted</p> <pre><code>Starting the incremental data transfer process for test failover for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintFailoverTestIncrementalDataTransferSucceed</p> <pre><code>Incremental data transfer process for test failover succeeded for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintFailoverTestPrepareDataFailed</p> <pre><code>Test failover initialization process failed for recovery plan '${name}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>BlueprintFailoverTestPrepareDataStarted</p> <pre><code>Starting the test failover initialization process for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintFailoverTestPrepareDataSucceed</p> <pre><code>Test failover initialization process succeeded for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintFailoverTestPrepareResourceFailed</p> <pre><code>Test failover resource validation and initialization process failed for recovery plan '${name}'. Reason: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>BlueprintFailoverTestPrepareResourceStarted</p> <pre><code>Starting the test failover resource validation and initialization process for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintFailoverTestPrepareResourceSucceed</p> <pre><code>Test failover resource validation and initialization process succeeded for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintFailoverTestProvisionFailed</p> <pre><code>Unable to set up the target Rubrik cluster '${targetClusterName}' for test failover of recovery plan '${name}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>BlueprintFailoverTestProvisionStarted</p> <pre><code>Setting up the target Rubrik cluster '${targetClusterName}' for test failover of recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintFailoverTestProvisionSucceed</p> <pre><code>Reconfiguration of virtual machines on target Rubrik cluster '${targetClusterName}' succeeded for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintFailoverTestProvisionSucceedWithNetworkReconfigureFailure</p> <pre><code>Reconfiguration of virtual machines on target Rubrik cluster '${targetClusterName}' failed for recovery plan '${name}'. Ignoring and continuing.\n</code></pre> <p>SeverityStatusAudit Event <p>WarningTaskSuccessNo</p> <p>BlueprintTestFailoverCanceled</p> <pre><code>Canceled test failover recovery plan '${name}' to '${location}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>BlueprintTestFailoverCanceling</p> <pre><code>Canceling test failover for recovery plan '${name}' to '${location}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>BlueprintTestFailoverFailed</p> <pre><code>Failed to test failover for recovery plan '${name}' to '${location}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>BlueprintTestFailoverScheduled</p> <pre><code>Scheduled job to test failover recovery plan '${name}' to '${location}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoQueuedNo</p> <p>BlueprintTestFailoverStarted</p> <pre><code>Starting failover for recovery plan '${name}' to '${location}'. Abort and cleanup setting is ${undoOnFailure}. Skipping network reconfiguration errors is ${skipNetworkError}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>BlueprintTestFailoverSuccess</p> <pre><code>Successfully completed the test failover for recovery plan '${name}' to '${location}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CleanupTestFailoverCanceled</p> <pre><code>Canceled the test failover cleanup for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCanceledNo</p> <p>CleanupTestFailoverCanceling</p> <pre><code>Canceling the test failover cleanup for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoCancelingNo</p> <p>CleanupTestFailoverFailed</p> <pre><code>Failed to cleanup test failover for recovery plan '${name}' with ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>CleanupTestFailoverStarted</p> <pre><code>Started cleanup of test failover for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CleanupTestFailoverSuccess</p> <pre><code>Successfully completed the test failover cleanup for recovery plan '${name}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CleanupTestFailoverTaskFailed</p> <pre><code>Failed to cleanup recovery plan ${name}: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>CleanupTestFailoverTaskFailedWithUserComment</p> <pre><code>Failed to cleanup recovery plan ${name}. ${comment}: ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>CleanupTestFailoverTaskStarted</p> <pre><code>Started the cleanup for recovery plan '${name}'\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>CleanupTestFailoverTaskSucceed</p> <pre><code>Successfully completed the cleanup of recovery plan ${name}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CleanupTestFailoverTaskSucceedWithUserComment</p> <pre><code>Successfully completed the cleanup of recovery plan '${name}'. ${comment}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>SyncTestFailbackTaskFailed</p> <pre><code>Test failover failed on cluster '${clusterName}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>SyncTestFailbackTaskSucceed</p> <pre><code>Test failover succeeded on cluster '${clusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>TriggerTestFailbackTaskFailed</p> <pre><code>Failed to trigger test failover for recovery plan to the point in time: ${recoveryPoint} on cluster '${clusterName}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>TriggerTestFailbackTaskFailedWithTimeRange</p> <pre><code>Failed to trigger test failover for recovery plan to the point in time: range from ${startTime} to ${endTime}, on cluster '${clusterName}': ${reason}.\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalTaskFailureNo</p> <p>TriggerTestFailbackTaskStarted</p> <pre><code>Test failover for recovery plan to the point in time: ${recoveryPoint} triggered on cluster '${clusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>TriggerTestFailbackTaskStartedWithTimeRange</p> <pre><code>Test failover for recovery plan to the point in time: range from ${startTime} to ${endTime}, triggered on cluster '${clusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoRunningNo</p> <p>TriggerTestFailbackTaskSucceed</p> <pre><code>Triggered a test failover for recovery plan to the point in time: ${recoveryPoint} on cluster '${clusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>TriggerTestFailbackTaskSucceedWithTimeRange</p> <pre><code>Triggered a test failover for recovery plan to the point in time: range from ${startTime} to ${endTime}, on cluster '${clusterName}'.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p>"},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Upgrade/","title":"Upgrade","text":""},{"location":"Rubrik-Security-Cloud-API/Observability/Event-Reference/Upgrade/#cdm_upgrade","title":"cdm_upgrade","text":"<p>CdmClusterUpgraded</p> <pre><code>Rubrik cluster ${clusterName} upgraded from version ${fromVersion} to ${version}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CdmUpgradeFailed</p> <pre><code>Failed to upgrade ${clusterName} from version ${fromVersion} to ${version}. Error: ${errorMessage}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>CdmUpgradeInitFailed</p> <pre><code>Failed to initiate cluster upgrade for ${clusterName} from version ${fromVersion} to ${version}. Error: ${errorMessage}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>CdmUpgradeInitiated</p> <pre><code>Initiated cluster upgrade for ${clusterName} from version ${fromVersion} to ${version}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CdmUpgradePrechecksFailed</p> <pre><code>Upgrade prechecks failed for ${clusterName} from version ${fromVersion} to ${version}. Error: ${errorMessage}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>CdmUpgradePrechecksSucceeded</p> <pre><code>Successfully completed upgrade prechecks for ${clusterName} from version ${fromVersion} to ${version}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CdmUpgradeRollbackFailed</p> <pre><code>Failed to rollback the upgrade for ${clusterName} from version ${fromVersion} to ${version}. Error: ${errorMessage}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>CdmUpgradeRollbackSucceeded</p> <pre><code>Successfully rolled back the upgrade for ${clusterName} to ${version}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CdmUpgradeStatus</p> <pre><code>Current state name: ${currentStateName} | Pending states: ${pendingStates} | Finished states: ${finishedStates} | Current states: ${currentTaskName} | Overall progress: ${overallProgress}%%\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CdmUpgradeSucceeded</p> <pre><code>Successfully upgraded ${clusterName} from version ${fromVersion} to ${version}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoSuccessNo</p> <p>CdmUpgradeTriggered</p> <pre><code>Triggered cluster upgrade for ${clusterName} with mode ${mode} from version ${fromVersion} to ${version} on node ${nodeId}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>CdmUpgradeTriggerFailed</p> <pre><code>Failed to trigger cluster upgrade for ${clusterName} with mode ${mode} from version ${fromVersion} to ${version} on node ${nodeId}. Error: ${errorMessage}\n</code></pre> <p>SeverityStatusAudit Event <p>CriticalFailureNo</p> <p>ResumeRollbackTriggered</p> <pre><code>Triggered ${action} for upgrade on ${clusterName}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskSuccessNo</p> <p>ResumeRollbackTriggerFailed</p> <pre><code>Failed to trigger ${action} for upgrade on ${clusterName}. Error: ${ErrorMessage}\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskFailureNo</p> <p>UpgradeAlreadyInProgress</p> <pre><code>Could not trigger upgrade as an upgrade is already running for ${clusterName} with mode ${mode} using tarball ${tarball}.\n</code></pre> <p>SeverityStatusAudit Event <p>InfoTaskFailureNo</p>"},{"location":"Rubrik-Security-Cloud-API/System-Settings/Certificate-Management/","title":"Certificate Management","text":""},{"location":"Rubrik-Security-Cloud-API/System-Settings/Certificate-Management/#retrieving-global-certificates","title":"Retrieving Global Certificates","text":"GraphQLPowerShell SDKShell <pre><code>query { \n    globalCertificates {\n    nodes {\n        status\n        certificate\n        certificateFid\n        certificateId\n        description\n        expiringAt\n        hasKey\n        isCaSigned\n        issuedBy\n        issuedOn\n        issuedTo\n        name\n        serialNumber\n        sha1Fingerprint\n        sha256Fingerprint\n        cdmUsages {\n            type\n            clusterName\n            clusterUuid\n        }\n        clusters {\n            cdmCertUuid\n        }\n        org {\n            id\n            name\n        }\n        usages {\n            type\n        }\n    }\n    pageInfo {\n        endCursor\n        hasNextPage\n        hasPreviousPage\n        startCursor\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery globalCertificates\n$query.Var.input = Get-RscType -Name GlobalCertificatesQueryInput\n$query.Field.Nodes = @(Get-RscType -Name GlobalCertificate -InitialProperties `\n    certificate,`\n    certificateId,`\n    certificateFid,`\n    clusters.cdmCertUuid,cluster.clusterUuid,isTrusted,name,`\n    description,`\n    expiringAt,`\n    hasKey,`\n    isCaSigned,`\n    issuedBy,`\n    issuedOn,`\n    issuedTo,`\n    name,`\n    serialNumber,`\n    sha1FingerPrint,`\n    sha256Fingerprint,`\n    status,`\n    cdmUsages.type,cdmUsages.clusterUuid,cdmUsages.clusterName,`\n    usages.type,`\n    org.name,org.id\n)\n$query.Invoke().nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { globalCertificates { nodes { status certificate certificateFid certificateId description expiringAt hasKey isCaSigned issuedBy issuedOn issuedTo name serialNumber sha1Fingerprint sha256Fingerprint cdmUsages { type clusterName clusterUuid } clusters { cdmCertUuid } org { id name } usages { type } } pageInfo { endCursor hasNextPage hasPreviousPage startCursor } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"SDKs-and-Tools/","title":"SDKs and Tools","text":"<ul> <li> <p> Rubrik Security Cloud PowerShell Module</p> <ul> <li>Fully Supported by Rubrik</li> <li>Easy to use cmdlets for many common tasks</li> <li>Full API accessibility through low-level cmdlets</li> </ul> <p> Get Started</p> <p> PowerShell Gallery</p> <p> Github Project</p> </li> <li> <p> Rubrik Security Cloud Postman Collection</p> <ul> <li>Contains all samples from the Rubrik Developer Guide</li> <li>Imports directly into Postman</li> <li>Simply add credentials and instance to collection variables</li> </ul> <p> Download</p> </li> <li> <p> Rubrik Security Cloud Terraform Provider</p> <ul> <li>Simplifies large scale configuration of cloud accounts in Rubrik</li> <li>Automates complex deployment of Rubrik cloud infrastructure</li> </ul> <p> Terraform Registry</p> <p> Github Project</p> </li> </ul>"},{"location":"SDKs-and-Tools/PowerShell/","title":"Rubrik Security Cloud PowerShell Module","text":"<p>The Rubrik Security Cloud PowerShell module extends your PowerShell console to give you full access to the Rubrik Security Cloud API.</p> <ul> <li>Easy to use cmdlets provide maximum efficiency to perform tasks.</li> <li>Advanced cmdlets facilitate advanced access to the Rubrik Security Cloud API, opening up the entire RSC API toautomation through PowerShell.</li> <li>Integrated Help is provided for each cmdlet, and even the API schema.</li> <li>Rubrik supported. Customer support is available for help on individual commands, but not script logic.</li> </ul>"},{"location":"SDKs-and-Tools/PowerShell/#prerequisites","title":"Prerequisites","text":"<ul> <li>PowerShell Recommended Version: <code>7.x</code></li> <li>Rubrik Security Cloud Service Account</li> </ul> <p>Note</p> <p>On Windows machines, The execution policy in PowerShell must be <code>RemoteSigned</code> or less stringent. Rubrik does not recommend bypassing or unrestricting the execution policy.</p> <pre><code>Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy RemoteSigned\n</code></pre>"},{"location":"SDKs-and-Tools/PowerShell/#installation","title":"Installation","text":"<p>Rubrik utilizes the Microsoft PowerShell Gallery for package installation. To install from the PowerShell Gallery, use the <code>Install-Module</code> cmdlet.</p> <pre><code>Install-Module RubrikSecurityCloud -Scope CurrentUser\n</code></pre> <p>To verify installation, use the <code>Get-Module</code> cmdlet.</p> <pre><code>Get-Module -ListAvailable RubrikSecurityCloud\n</code></pre> <pre><code># Example Output\n    Directory: /Users/Joe.Smith/.local/share/powershell/Modules\n\nModuleType Version    PreRelease Name                                PSEdition ExportedCommands\n---------- -------    ---------- ----                                --------- ----------------\nScript     1.12.3                RubrikSecurityCloud                 Desk \n</code></pre> <p>PowerShell should auto-import the module upon use of any cmdlet in the module, but it can also be forced using the <code>Import-Module</code> cmdlet if issues arise. <pre><code>Import-Module RubrikSecurityCloud\n</code></pre></p>"},{"location":"SDKs-and-Tools/PowerShell/#connecting-to-rsc","title":"Connecting to RSC","text":"<p>The RSC PowerShell Module utilizes RSC Service Accounts for authentication. Create a Service Account and download the JSON file. </p> <p>The Service Account JSON file contains unencrypted credentials. The <code>Set-RscRscServiceAccount</code> will created an encrypted credentials file and offer to automatically remove the JSON file from disk.</p> <pre><code>Set-RscServiceAccountFile -InputFilePath /path/to/service_account.json\n</code></pre> <p>Connect to RSC using the <code>Connect-Rsc</code> cmdlet. The RSC instance and credentials are automatically retrieved from the encrypted credentials XML.</p> <pre><code>Connect-Rsc\n</code></pre>"},{"location":"SDKs-and-Tools/PowerShell/#getting-help","title":"Getting Help","text":"<p>To begin running commands, start by listing the commands that are available in the module using the <code>Get-Command</code> cmdlet.</p> <pre><code>Get-Command -Module RubrikSecurityCloud -CommandType Function\n</code></pre> <p>To get help on an individual cmdlet, use the <code>Get-Help</code> cmdlet.</p> <pre><code>Get-Help Get-RscSla -Full\n</code></pre>"},{"location":"SDKs-and-Tools/PowerShell/#updating","title":"Updating","text":"<p>To update to the latest version of the RSC PowerShell module, use the <code>Update-Module</code> cmdlet. Restart the PowerShell terminal session or use <code>Remove-Module RubrikSecurityCloud</code> to unload the old version from memory. Import the new module version using <code>Import-Module RubrikSecurityCloud</code>.</p> <pre><code>Update-Module RubrikSecurityCloud -Scope CurrentUser\n</code></pre> <p>Note</p> <p>PowerShell allows multiple versions of PowerShell modules to be installed, and does not uninstall older versions of modules. This is for script compatibility in the event a module has a breaking change. To uninstall previous versions, you must use the <code>Uninstall-Module</code> cmdlet and specify the versions you want to uninstall.</p> <pre><code>Uninstall-Module RubrikSecurityCloud -RequiredVersion 1.11.2 -Force\n</code></pre>"},{"location":"SDKs-and-Tools/PowerShell/Advanced-Usage/","title":"Advanced Usage","text":"<p>The goal at Rubrik is to have a cmdlet for every useful task that needs to be performed. As we strive toward this goal, there may be times where an easy-to-use cmdlet is not available. This may also be the case for new features, or edge cases that are not yet supported by the cmdlets. For this reason, it may be necessary to interact with the Rubrik Security Cloud API at a lower level.</p> <p>At its heart, The Rubrik Security Cloud PowerShell library is a collection of .NET libraries to provide full access to the API without writing any GraphQL queries. While writing GraphQL directly is not required, it is necessary to understand and utilize the API documentation since they are still GraphQL queries written in .NET/PowerShell.</p>"},{"location":"SDKs-and-Tools/PowerShell/Advanced-Usage/#low-level-cmdlets","title":"'Low-level' cmdlets","text":"<p>The following cmdlets are essential to working with the RSC API through the PowerShell module.</p> <ul> <li> <p><code>New-RscQuery</code>,<code>New-RscMutation</code> queries are split into two categories: Queries(read) and Mutations(writes). These cmdlets will create a query object for either a query or a mutation respectively. Interestingly, queries and mutations are both considered \"queries\" so the word \"query\" will be used generically for either throughout the documentation.</p> </li> <li> <p><code>Invoke-Rsc</code> performs the provided query object against the RSC API. It returns the full HTTP response, including the data provided by the query, converted to .NET/PowerShell objects.</p> </li> <li> <p><code>Get-RscHelp</code> can be used to get information about queries, their inputs, and the object types they return. This is a lightweight version of the API reference, but not a complete substitute.</p> </li> <li> <p><code>Get-RscType</code> instantiates an object of a specific type within RSC. GraphQL is a strongly typed architecture, which means everything has a type and there is no guessing on the structure. This is especially beneficial when working with large, complex objects. The .NET libraries take the types from the GraphQL API and create .NET equivilents.</p> </li> </ul>"},{"location":"SDKs-and-Tools/PowerShell/Advanced-Usage/#constructing-powershell-code-from-a-graphql-query","title":"Constructing PowerShell code from a GraphQL query","text":"<p>The following GraphQL example is a simple query to identify all objects in the Gold SLA that are out of compliance in the last 24 hours. The goal will be to convert this to PowerShell.</p> <pre><code>query example {\n  snappableConnection (filter: {\n    slaDomain: {id: \"00000000-0000-0000-0000-000000000000\"}\n    slaTimeRange: LAST_24_HOURS\n    complianceStatus: OUT_OF_COMPLIANCE\n  }\n  ) {\n    nodes {\n      name\n      id\n      location\n      objectType\n      slaDomain {\n        name\n      }\n      missedSnapshots\n    }\n  }\n}\n</code></pre>"},{"location":"SDKs-and-Tools/PowerShell/Advanced-Usage/#creating-the-query-object","title":"Creating the Query Object","text":"<p>Create a query object using <code>New-RscQuery</code> and select the fields to retrieve using <code>-AddField</code>. Note: Use <code>-FieldProfile EMPTY</code> to deselect any fields that are automatically selected. <pre><code>$query = new-RscQuery -GqlQuery snappableConnection -FieldProfile EMPTY -AddField `\n    Nodes.Name `\n    Nodes.Id `\n    Nodes.Location `\n    Nodes.ObjectType `\n    Nodes.SlaDomain.Id `\n    Nodes.MissedSnapshots\n</code></pre></p> <p><code>$query</code> is an <code>RscQuery</code> object containing variables to pass in, and fields to retrieve. Using the PowerShell <code>Get-Member</code> cmdlet, the type, properties, and methods of the query object are displayed.</p> <pre><code>$query | Get-Member\n\n   TypeName: RubrikSecurityCloud.RscQuery\n\nName           MemberType Definition\n----           ---------- ----------\nAllFields      Method     System.Collections.Generic.List[string] AllFields(int maxDepth = 0)\nEquals         Method     bool Equals(System.Object obj)\nExample        Method     string Example()\nGetHashCode    Method     int GetHashCode()\nGetType        Method     type GetType()\nGqlOperation   Method     RubrikSecurityCloud.RscGqlOperation GqlOperation()\nGqlRequest     Method     RubrikSecurityCloud.RscGqlRequest GqlRequest(bool verifyQuery = True)\nInfo           Method     System.Collections.Generic.List[RubrikSecurityCloud.VarInfo] Info()\nInvoke         Method     System.Object Invoke()\nOpInfo         Method     RubrikSecurityCloud.RscOp OpInfo()\nSelectedFields Method     System.Collections.Generic.List[string] SelectedFields()\nToString       Method     string ToString()\nField          Property   System.Object Field {get;set;}\nOp             Property   string Op {get;set;}\nVar            Property   RubrikSecurityCloud.RscGqlVars Var {get;set;}\n</code></pre>"},{"location":"SDKs-and-Tools/PowerShell/Advanced-Usage/#setting-variables","title":"Setting Variables","text":"<p>The first step will be to set the filter variables for SLA Domain, SLA Time Range, and Compliance. The filter and each of the properties are their own object types. Using <code>Get-RscHelp</code> will show the type name for the filter.</p> <pre><code>Get-RscHelp -Query snappableConnection\n# GraphQL field: snappableConnection\n\nName            Type                 Description\n----            ----                 -----------\nAPI Domain                           Snappable\nAPI Operation                        List\nGQL Field                            snappableConnection\nInvocation                           $query = New-RscQuery -GqlQuery snappableConnection\nVar.first       Int                  Int: Int\nVar.after       String               String: String\nVar.last        Int                  Int: Int\nVar.before      String               String: String\nVar.sortOrder   SortOrder            SortOrder: https://rubrikinc.github.io/rubrik-api-documentation/schema/reference/sortorder.doc.html\nVar.sortBy      SnappableSortByEnum  SnappableSortByEnum: https://rubrikinc.github.io/rubrik-api-documentation/schema/reference/snappablesortbyenum.doc.html\nVar.filter      SnappableFilterInput SnappableFilterInput: https://rubrikinc.github.io/rubrik-api-documentation/schema/reference/snappablefilterinput.doc.html\nField           SnappableConnection  https://rubrikinc.github.io/rubrik-api-documentation/schema/reference/snappableconnection.doc.html\nAll Fields                           $query.AllFields()\nSelected Fields                      $query.SelectedFields()\nExample                              $query.Example()\n</code></pre> <p>The documentation shows <code>Var.filter</code> is a type of <code>SnappableFilterInput</code>. This object can be created using <code>Get-RscType</code> and assigned to <code>$query.Var.filter</code>. Once set, use <code>Get-Member</code> to look at the object types for SlaDomain, slaTimeRange, and complianceStatus. <pre><code>$query.Var.filter = Get-RscType -Name SnappableFilterInput\n\n$query.Var.filter | Get-Member\n\n   TypeName: RubrikSecurityCloud.Types.SnappableFilterInput\n\nName                MemberType Definition\n----                ---------- ----------\nEquals              Method     bool Equals(System.Object obj)\nGetHashCode         Method     int GetHashCode()\nGetInputObject      Method     System.Object GetInputObject(), System.Object IInput.GetInputObject()\nGetType             Method     type GetType()\nToString            Method     string ToString()\nCluster             Property   RubrikSecurityCloud.Types.CommonClusterFilterInput Cluster {get;set;}\nComplianceStatus    Property   System.Collections.Generic.List[RubrikSecurityCloud.Types.ComplianceStatusEnum] ComplianceStatus {get;set;}\nExcludedObjectTypes Property   System.Collections.Generic.List[RubrikSecurityCloud.Types.ObjectTypeEnum] ExcludedObjectTypes {get;set;}\nIsLocal             Property   System.Nullable[bool] IsLocal {get;set;}\nObjectFid           Property   System.Collections.Generic.List[string] ObjectFid {get;set;}\nObjectState         Property   System.Collections.Generic.List[RubrikSecurityCloud.Types.ObjectState] ObjectState {get;set;}\nObjectType          Property   System.Collections.Generic.List[RubrikSecurityCloud.Types.ObjectTypeEnum] ObjectType {get;set;}\nOrgId               Property   System.Collections.Generic.List[string] OrgId {get;set;}\nProtectionStatus    Property   System.Collections.Generic.List[RubrikSecurityCloud.Types.ProtectionStatusEnum] ProtectionStatus {get;set;}\nSearchTerm          Property   string SearchTerm {get;set;}\nSlaDomain           Property   RubrikSecurityCloud.Types.SnappableSlaDomainFilterInput SlaDomain {get;set;}\nSlaTimeRange        Property   System.Nullable[RubrikSecurityCloud.Types.SlaComplianceTimeRange] SlaTimeRange {get;set;}\n</code></pre></p> <p>Properties that are lists mean multiple values can be provided as a PowerShell Array. Properties with Enum in the name indicate they are enumerations, a set of constant values. To set enum variables, use the enum type name shown, followed by <code>::</code> and then the value. The values can be tab completed. Note that <code>ComplianceStatus</code> is an array, so it is encapsulated it with PowerShell array syntax <code>@()</code> and additional values could be added.</p> <pre><code>$query.Var.filter.SlaTimeRange = [RubrikSecurityCloud.Types.SlaComplianceTimeRange]::LAST_24_HOURS\n$query.Var.filter.ComplianceStatus = @([RubrikSecurityCloud.Types.ComplianceStatusEnum]::OUT_OF_COMPLIANCE)\n</code></pre> <p>Setting the <code>SlaDomain</code> variable requires creating the SLA filter object, and setting the ID.</p> <pre><code>$query.Var.filter.SlaDomain = Get-RscType -Name SnappableSlaDomainFilterInput\n# The ID can be added dynamically instead of hardcoding: Get-RscSla -Name \"Gold\"\n$query.Var.filter.SlaDomain.id = \"00000000-0000-0000-0000-000000000000\" \n</code></pre> <p><code>$query.var.filter</code> should now look like this <pre><code>$query.var.filter\n\nProtectionStatus    :\nSlaDomain           : RubrikSecurityCloud.Types.SnappableSlaDomainFilterInput\nComplianceStatus    : {OUT_OF_COMPLIANCE}\nObjectType          :\nExcludedObjectTypes :\nCluster             :\nSearchTerm          :\nSlaTimeRange        : LAST_24_HOURS\nOrgId               :\nObjectState         :\nIsLocal             :\nObjectFid           :\n</code></pre></p>"},{"location":"SDKs-and-Tools/PowerShell/Advanced-Usage/#verifying-fields","title":"Verifying Fields","text":"<p>To verify the fields you've selected, look at <code>$query.field.nodes</code>. Note the placeholder values that were added to the fields that were selected. The placeholder values have no meaning.</p> <pre><code>$query.field.nodes | Format-List *\n</code></pre>"},{"location":"SDKs-and-Tools/PowerShell/Advanced-Usage/#selecting-additional-fields","title":"Selecting Additional Fields","text":"<p>To set additional fields to be retrieved, first use <code>Get-Member</code> on the first element of <code>$query.field.nodes</code>. The nodes property is an array of objects that will be returned. </p> <pre><code>$query.field.nodes[0] | Get-Member\n</code></pre> <p>Warning</p> <p>Always check the type! Some queries with Implementations (sub-types) use different elements for different object types. For instance for the <code>slaDomains</code> query, <code>nodes[0]</code> contains the fiels for the <code>ClusterSlaDomain</code> type, and <code>nodes[1]</code> contains the fields for the <code>GlobalSlaReply</code> type.</p> <p>To add an additional field, create a placeholder value of the object type. For example, <code>UsedBytes</code> is a <code>Long</code>, so a valid placeholder value would be <code>1</code> or <code>100000</code>. <code>PullTime</code> is a <code>DateTime</code>, so a valid placeholder value would be <code>\"1900/01/01\"</code>.</p> <pre><code>$query.field.nodes[0].UsedBytes = 1\n</code></pre>"},{"location":"SDKs-and-Tools/PowerShell/Advanced-Usage/#executing-the-query","title":"Executing the Query","text":"<p>Passing the query into <code>Invoke-Rsc</code> will execute the query against the RSC API.  Store the result in a variable and view the contents. The response will contain the <code>nodes</code> array of objects were requested. Note that not all queries are 'connection' queries with <code>nodes</code>.</p> <pre><code>$result = Invoke-Rsc $query\n$result\n\nCount       : 36\nAggregation :\nEdges       :\nNodes       : {foo, vm123, mailbox\u2026}\nPageInfo    : RubrikSecurityCloud.Types.PageInfo\n</code></pre> <p>Alternatively, you can use the <code>invoke()</code> method on the query object and immediately output the nodes array.</p> <pre><code>$query.invoke().nodes\n</code></pre>"}]}