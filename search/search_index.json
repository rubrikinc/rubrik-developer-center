{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-the-rubrik-developer-guide","title":"Welcome to the Rubrik Developer Guide!","text":"<p>Rubrik's API-First Architecture increases operational efficiency and maximizes the investment and experience of the data security platform.</p> <ul> <li> <p> Rubrik Security Cloud API</p> <ul> <li>SLA Domain Management</li> <li>SLA Assignment</li> <li>On-Demand Backups</li> <li>Recovery Operations</li> <li>Data Security Posture</li> <li>Data Threat Analytics</li> <li>Reporting</li> </ul> <p> Get Started</p> </li> </ul> <ul> <li> <p> Rubrik Cluster API</p> <ul> <li>On-demand backups</li> <li>Recovery operations</li> </ul> <p> Get Started</p> </li> </ul>"},{"location":"Integrations/","title":"Rubrik Security Cloud Integrations","text":"<ul> <li> <p>ServiceNow Self-Service Workflows</p> <ul> <li>Provides lightweight independent discovery outside of CMDB into custom data tables</li> <li>Pre-built dashboards for capacity and job reporting</li> <li>Self-Service workflows for Rubrik admins, including restore and on-demand backups</li> <li>No additional Rubrik licensing required </li> <li>Requires ServiceNow ITSM</li> <li>No custom table fees or licenses for the integration</li> </ul> <p> ServiceNow Store</p> </li> </ul> <ul> <li> <p>ServiceNow Rubrik Service Graph Connector</p> <ul> <li>CMDB discovery for Rubrik assets and protected workloads</li> <li>Fully customizable and extendable to add additional workload types and data mappings</li> <li>No additional Rubrik licensing required</li> <li>Requires ServiceNow ITOM</li> </ul> <p> ServiceNow Store</p> </li> </ul> <ul> <li> <p>ServiceNow Automatic Incident Creation</p> <ul> <li>Send ANY Rubrik events to ServiceNow scripted rest endpoint, or EventManagement endpoint</li> <li>No integration installation required</li> <li>Sending events to ServiceNow Event Management requires ServiceNow ITOM</li> <li>Sending events to ServiceNow scripted REST endpoint has no requirements</li> <li>Incident creation requires ITSM and an incident creation script</li> </ul> <p> RSC Docs</p> </li> </ul> <ul> <li> <p>Rubrik Ticketing Integration</p> <ul> <li>Create ServiceNow incidents with a single click for data access issues in Data Security Posture</li> <li>No integration installation required</li> <li>Requires Rubrik Enterprise Proactive Edition</li> <li>Incident creation requires ITSM and an incident creation script</li> </ul> <p> RSC Docs</p> </li> </ul>"},{"location":"Rubrik-Cluster-API/","title":"Rubrik Cluster API","text":""},{"location":"Rubrik-Cluster-API/#description","title":"Description","text":"<p>The Rubrik Cluster API is REST based, and is located on each physical or virtual (Cloud Cluster). The primary purposes for this API are:</p> <ol> <li>Offline Recovery - In the event that you've gone dark and are unable to access the Internet, You're still able to automate your disaster recovery plan.</li> <li>Air-gapped Automation - Some systems performing backup automation may not have access to the Internet. A common example is a database server that initiates backups at a very specific time. The database server cloud have a script to freeze and write its logs, and needs to tell Rubrik to initiate the backup.</li> </ol> <p>The Rubrik Cluster API documentation can currently be located on any Rubrik node by navigating to:</p> <p><code>https://&lt;cluster_node&gt;/docs/internal/</code> <code>https://&lt;cluster_node&gt;/docs/v1/</code> <code>https://&lt;cluster_node&gt;/docs/v2/</code> <code>https://&lt;cluster_node&gt;/docs/v3/</code></p>"},{"location":"Rubrik-Security-Cloud-API/","title":"Rubrik Security Cloud API","text":""},{"location":"Rubrik-Security-Cloud-API/#getting-started","title":"Getting Started","text":"<p>The Rubrik Security Cloud (RSC) API is GraphQL.</p>"},{"location":"Rubrik-Security-Cloud-API/#graphql-features","title":"GraphQL Features","text":"<ol> <li>Single Endpoint - The RSC API endpoint will always be /api/graphql.</li> <li>Single HTTP method - Everything is an HTTP POST.</li> <li>Introspection - The API documentation is built in to the API itself, providing integrated development help and schema checking.</li> <li>Customized Response - Queries are customized to only return the fields that is needed.</li> </ol>"},{"location":"Rubrik-Security-Cloud-API/#help-im-new-to-graphql","title":"Help! I'm new to GraphQL!","text":"<p>GraphQL is a \"query language,\" comparable to SQL. In SQL, one might say, \"Select name and ID from the VM table.\" GraphQL is similar in this idea. A query which is much like a SQL table. We then select the properties called fields, which are like columns in that table. Unlike SQL, GraphQL fields can be types with their own fields, allowing a deeply nested structure for more complex objects.</p>"},{"location":"Rubrik-Security-Cloud-API/#example","title":"Example","text":"<p>Click on the arrow annotation (1) in the code to see an explanation of that part of the code.</p> <ol> <li>This is an annotation!</li> </ol> <p>Retrieve all MSSQL databases, and return the name, ID, and the name and ID of the Rubrik Cluster that protect's this MSSQL database.</p> <pre><code>query mssqlDatabasesExample { #(1)!\n  mssqlDatabases { # (2)!\n    nodes  { #(3)!\n      name #(4)! \n      id\n      cluster { #(5)!\n        name #(6)!\n        id\n      }\n    }\n  }\n}\n</code></pre> <ol> <li><code>mssqlDatabasesExample</code> is an operation name, You can change this to whatever you want.</li> <li><code>mssqlDatabases</code> is the name of the query in the API.</li> <li><code>nodes</code> is a paginated array of objects, in this case, mssqlDatabases.</li> <li><code>name</code> is a property, known as a <code>field</code> in GraphQL. It has a specific type, in this case <code>name</code> is a <code>String</code>.</li> <li><code>cluster</code> is also a field in the API, but unlike <code>name</code> that is of type <code>String</code>, <code>cluster</code> is a <code>Cluster</code> type, and it has its own fields.</li> <li>This is the cluster <code>name</code> field. It's a field on the <code>Cluster</code> type in the API.</li> </ol> <p>To learn more about the query syntax, check out GraphQL Language Syntax. </p> <p>Next: API Playground</p>"},{"location":"Rubrik-Security-Cloud-API/API-playground/","title":"API playground","text":"<p>The API Playground is an integrated development environment (IDE) that you can use to browse, explore, and run GraphQL APIs offered by Rubrik Security Cloud (RSC). The IDE also provides reference to the Rubrik GraphQL API documentation for your version. Running GraphQL queries and mutations in API Playground validates the GraphQL operations so that you can confirm that your queries or mutations will achieve the desired result when included in automation scripts.</p> <p>Initially, access to the playground uses the currently authenticated user credentials. Running queries as a service account is useful for testing permissions and can be accomplished by clicking the \"Test with Service Account\" button in the upper right of the Playground.</p> <p>The ability to access objects and queries depends on the RBAC roles assigned to the user account or service account. For enhanced security, API Playground does not persist the service account access credentials.</p> <p>Danger</p> <p>The GraphQL mutations that run in API Playground perform actions against this instance of RSC. This can result in data loss.</p>"},{"location":"Rubrik-Security-Cloud-API/API-playground/#accessing-api-playground","title":"Accessing API Playground","text":"<p>Access the API Playground through the RSC Settings menu or directly through the browser's url bar.</p> <ol> <li>Log in to RSC.</li> <li>Open the app tray and select Settings. The Settings menu appears.</li> <li>Click API Playground. The API Playground page appears.</li> <li>Click Open API Playground. API Playground opens in a new browser tab.</li> </ol> <p>Alternatively, The playground can be accessed directly by supplying the url in this format:</p> <pre><code>https://&lt;INSTANCE&gt;.my.rubrik.com/playground/\n</code></pre> <p>Copy and paste the below example query into the playground query pane, and click the execute button.</p> <pre><code>{\n  slaDomains {\n    nodes {\n      name\n      id\n    }\n  }\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/API-playground/#sample-output","title":"Sample output","text":"<pre><code>{\n  \"data\": {\n    \"slaDomains\": {\n      \"nodes\": [\n        {\n          \"name\": \"Bronze\",\n          \"id\": \"00000000-0000-0000-0000-000000000002\"\n        },\n        {\n          \"name\": \"Gold\",\n          \"id\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        {\n          \"name\": \"Silver\",\n          \"id\": \"00000000-0000-0000-0000-000000000001\"\n        }\n      ]\n    }\n  }\n}\n</code></pre> <p>Building on the query for SLA Domains, it may be desirable to search by name. The following will walk through using the API documentation in the playground to identify arguments that can be specified for a particular query, and how to implement the arguments.</p> <ol> <li>Hover the mouse cursor over <code>slaDomains</code> in the query.</li> <li>Click on the <code>slaDomains</code> link when the tooltip appears.</li> </ol> <p>A side pane will appear with the API documentation for <code>slaDomains.</code></p> <p>There are 3 sections in the documentation:</p> <ul> <li><code>Type</code> - The type of object that gets returned.</li> <li><code>Arguments</code> - Variables that can be passed into the query, such as filters or sorting preferences.</li> <li><code>Implementations</code> - Additional object types that have their own properties</li> </ul> <p>The arguments have types specified next to the name. The <code>filter</code> argument is a type of <code>[GlobalSlaFilterInput!]</code></p> <ul> <li><code>[]</code> The square braces indicate that we can pass in multiple<code>GlobalSlaFilterInput</code> objects. This means multiple filter objects can be passed in.</li> <li><code>!</code> The exclamation point means \"Non-Null.\" This symbol is used both in arguments and fields that get returned indicating that the field must be supplied.</li> </ul> <p>Click on the <code>GlobalSlaFilterInput</code> type in the documentation. The documentation will navigate to the documentation for this type.</p> <p>To search by name, set the <code>field</code> to <code>NAME</code>. Clicking on <code>GlobalSlaQueryFilterInputField</code> will display the enum values that are available to filter on.</p> <p>Set <code>text</code> to the name of the SLA domain to search for.</p> <p>Note</p> <p>Some queries will have their own filtering arguments that are unique to the context of that object. The API documentation for each query will specify the filtering syntax and capabilities for each query.</p> <p>Arguments are supplied to a query in parenthesis <code>()</code> after the query name. Create the filter object as an argument to the <code>slaDomains</code> query. Change the <code>text</code> content to an SLA domain name in the currently connected RSC instance.</p> <pre><code>{\n  slaDomains(filter: {field: NAME text: \"bronze\"}) {\n    nodes {\n      name\n      id\n    }\n  }\n}\n</code></pre> <p>The result will be only SLA Domains starting with <code>bronze</code></p> <pre><code>{\n  \"data\": {\n    \"slaDomains\": {\n      \"nodes\": [\n        {\n          \"name\": \"Bronze\",\n          \"id\": \"00000000-0000-0000-0000-000000000002\"\n        }\n      ]\n    }\n  }\n}\n</code></pre> <p>Next: Authentication</p>"},{"location":"Rubrik-Security-Cloud-API/authentication/","title":"Authentication","text":""},{"location":"Rubrik-Security-Cloud-API/authentication/#service-accounts-oauth2-client-credentials-grant","title":"Service Accounts (OAuth2 Client Credentials Grant)","text":"<p>A service account represents an application that needs authentication and authorization to invoke Rubrik APIs, as opposed to a user account that represents an individual user. A client ID and client secret are used to authenticate to an authorization server and obtain an access token to invoke the Rubrik APIs. Similar to user accounts, Rubrik allows assigning roles to the service accounts to enable role-based access control. But contrary to user accounts, service accounts cannot be used to access the Rubrik web UI.</p>"},{"location":"Rubrik-Security-Cloud-API/authentication/#security","title":"Security","text":"<p>Service accounts enable client applications and other services to invoke the Rubrik APIs securely. When creating a service account, the authorization server assigns a unique client ID and client secret to the account. The combination of client ID and client secret is known as client credentials. The client credentials are known only to the client that is represented by the service account and the authorization server that grants the credentials to the service account. The client application authenticates to the authorization server using the client credentials and obtains an access token to authenticate to the Rubrik API server and access the protected resources.</p>"},{"location":"Rubrik-Security-Cloud-API/authentication/#guidelines","title":"Guidelines","text":"<p>Consider the following best practices when using service accounts:</p> <ul> <li>One service account should represent only one client application.</li> <li>The role assigned to the service account should be the one with least number of privileges that would be sufficient for the client application being   -epresented by the service account to access the Rubrik APIs.</li> <li>The client credentials must be saved when they are first created as Rubrik does not provide an option to display them again.</li> <li>The client secret must be treated like a password and stored in a secure location.</li> <li>Service account access tokens should be cached and reused until they are valid.</li> </ul>"},{"location":"Rubrik-Security-Cloud-API/authentication/#usage","title":"Usage","text":""},{"location":"Rubrik-Security-Cloud-API/authentication/#adding-a-service-account","title":"Adding a service account","text":"<p>Refer to the RSC user guide: adding a service account</p>"},{"location":"Rubrik-Security-Cloud-API/authentication/#obtaining-an-access-token","title":"Obtaining an access token","text":"<p>In this example, the service account client ID and secret are exported into environment variables and posted to the RSC client_token endpoint. The response contains the access token needed for authenticated API calls. The <code>jq</code> tool is used to parse the access token from the JSON response and stored in a variable for usage.</p> Shell <pre><code>export RSC_FQDN=\"example.my.rubrik.com\"\nexport RSC_CLIENT_ID=\"client|c9bba9a9-1234-1234-b7c6-123440b4cf64\"\nexport RSC_CLIENT_SECRET=\"ExampleServiceAccountSecret\"\n\nRSC_TOKEN=$(curl --silent --location \"https://$RSC_FQDN/api/client_token\" \\\n  --header \"Content-Type: application/x-www-form-urlencoded\" \\\n  --data \"client_id=$RSC_CLIENT_ID&amp;client_secret=$RSC_CLIENT_SECRET&amp;grant_type=client_credentials\" | jq -r '.access_token')\n\nexport RSC_TOKEN\n</code></pre> <p>An example response from the authorization server shows the access token and the number of seconds when the token will expire. This time is configurable up to 24 hours within the RSC session security settings. </p> <pre><code>{\"client_id\":\"client|c9bba9a9-1234-1234-b7c6-123440b4cf64\",\"access_token\":\"eyJ...\",\"expires_in\":43200}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/authentication/#using-the-access-token","title":"Using the access token","text":"<p>The access token is used as a <code>Bearer</code> token in the <code>Authorization</code> header of all subsequent API calls.</p> Shell <pre><code>curl --location \"https://$RSC_FQDN/api/graphql\" \\\n--header \"Content-Type: application/json\" \\\n--header \"Authorization: Bearer $RSC_TOKEN\" \\\n--data '{\"query\":\"query slaDomains {nodes {name id}}}\",\"variables\":{}}'\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/authentication/#deleting-a-session","title":"Deleting a session","text":"<p>While there is no restriction on the number of active sessions a service account can have, Rubrik provides an API endpoint to delete an existing session.</p> <p>Run the following command to revoke the session established for the service account. Successful revocation will result in an HTTP status code of <code>204</code>.</p> Shell <pre><code>curl -X DELETE --location \"https://$RSC_FQDN/api/graphql\" \\\n--header \"Content-Type: application/json\" \\\n--header \"Authorization: Bearer $RSC_TOKEN\"\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/","title":"Troubleshooting","text":"<p>Note</p> <p>The response code of the HTTP request will be 200, and the body of the response will contain the HTTP error code.</p> <p>Note</p> <p>It can extremely difficult to troubleshoot code logic without much context. If additional help from the Rubrik support team is required, limit the code shared to only the offending query or SDK method. Include literal variable values to verify what is being passed in to the query or SDK method.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#error-code-400","title":"Error code 400","text":""},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#reason","title":"Reason","text":"<p>These occur when the query is incorrect according to the schema.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#solution","title":"Solution","text":"<p>Verify the query and variables supplied to the query are in accordance with the schema. This can be done with any tool that can validate the query against the schema. The RSC API playground is the easiest way to accomplish this.</p> <p>Example Erroneous Query <pre><code>query {\n  slaDomains {\n    nodes {\n      name\n      id\n      description\n    }\n  }\n}\n</code></pre></p> <p>Example Error Response <pre><code>{\n  \"code\": 400,\n  \"uri\": \"/api/graphql\",\n  \"traceSpan\": {\n    \"traceId\": \"yQq0Pl2VftOESD4kCtiFdg==\",\n    \"operation\": \"/api/graphql\",\n    \"spanId\": \"hEMkvglH1gc=\"\n  },\n  \"message\": \"[QueryAnalysisError] [DLC Team] Encountered Client error (400) executing query with operations: [] and variables {}. Error: Query does not pass validation. Violations:\\n\\nCannot query field 'description' on type 'SlaDomain'. Did you mean to use an inline fragment on 'GlobalSlaReply'? (line 6, column 7):\\n      description\\n      ^\"\n}\n</code></pre></p> <p>The error message states the query doesn't pass validation, and describes the violations saying it cannot query the field <code>description</code>. Many times, the API will give suggestions as to what can be done to correct the query such as \"Did you mean to use an inline fragment on 'GlobalSlaReply'?\" This indicates the field <code>description</code> is actually located on an 'implementation' of the <code>SlaDomain</code> type.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#corrected-query","title":"Corrected Query","text":"<pre><code>query {\n  slaDomains {\n    nodes {\n      name\n      id\n      ... on GlobalSlaReply {\n        description\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#error-code-403","title":"Error Code 403","text":""},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#reason_1","title":"Reason","text":"<p>These errors are the result of a permissions issue. While RBAC is a common cause, the other reason could be that the query, or even a field in the query is behind a feature flag that is not enabled. This occurs when a development feature is deployed into the production API schema behind a feature flag, or the query is a part of licensing that has not been purchased or approved.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#solution_1","title":"Solution","text":"<p>Remove the field, find an alternative query, or be sure that the permissions applied to the service account are sufficient to perform this query.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#example-erroneous-query","title":"Example Erroneous Query","text":"<pre><code>query {\n  clusterConnection(filter: {name: \"example\"}) {\n    nodes {\n      name\n      isTprEnabled\n    }\n  }\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#example-error-response","title":"Example Error Response","text":"<pre><code>{\n  \"data\": {\n    \"clusterConnection\": {\n      \"nodes\": [\n        {\n          \"name\": \"example\",\n          \"isTprEnabled\": null\n        }\n      ]\n    }\n  },\n  \"errors\": [\n    {\n      \"message\": \"Account does not have the appropriate features enabled to access the field.\",\n      \"path\": [\n        \"clusterConnection\",\n        \"nodes\",\n        0,\n        \"isTprEnabled\"\n      ],\n      \"locations\": [\n        {\n          \"line\": 5,\n          \"column\": 7\n        }\n      ],\n      \"extensions\": {\n        \"code\": 403,\n        \"trace\": {\n          \"operation\": \"/api/graphql\",\n          \"traceId\": \"9v0wj/Sm9UVOdUFd1ottJQ==\",\n          \"spanId\": \"Jygbg58zl/M=\"\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#corrected-query_1","title":"Corrected Query","text":"<p><pre><code>query {\n  clusterConnection(filter: {name: \"example\"}) {\n    nodes {\n      name\n    }\n  }\n}\n</code></pre> The offending field mentioned in the error has been removed.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#error-code-404","title":"Error Code 404","text":""},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#reason_2","title":"Reason","text":"<p>These errors indicate you've provided an ID that does not exist for an object using the supplied query. </p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#solution_2","title":"Solution","text":"<p>Identify the correct ID or query to be used.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#example-erroneous-query_1","title":"Example Erroneous Query","text":"<pre><code>query {\n  vSphereVmNew(fid: \"7d303326-7c2c-4ea2-b463-dedb8910d98a\") {\n    name\n    id\n  }\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#example-error-response_1","title":"Example Error Response","text":"<pre><code>{\n  \"data\": null,\n  \"errors\": [\n    {\n      \"message\": \"NOT_FOUND: Unable to find managed object for ID or you are not authorized to access it\",\n      \"path\": [\n        \"vSphereVmNew\"\n      ],\n      \"locations\": [\n        {\n          \"line\": 2,\n          \"column\": 3\n        }\n      ],\n      \"extensions\": {\n        \"code\": 404,\n        \"trace\": {\n          \"operation\": \"/api/graphql\",\n          \"traceId\": \"gwzt2HR5GinN4PrhQfJ+Bg==\",\n          \"spanId\": \"/MR1LoaAiD8=\"\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#error-code-500","title":"Error Code 500","text":""},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#reason_3","title":"Reason","text":"<p>These errors are server-side, and a defect should be filed immediately. It could be that the query is not being used as intended, but the API should catch this. This error indicates that the API let the call through to the back-end service and the service is responding with an error. Essentially this is an \u201cuncaught exception.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#solution_3","title":"Solution","text":"<p>File an engineering case with the product team that owns this query. If possible, use a different query.</p>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#example-erroneous-query_2","title":"Example Erroneous Query","text":"<pre><code>mutation {\n  takeOnDemandSnapshot(input: {workloadIds: \"fef3f155-7092-5b19-bcea-fe8021c38dc6\" slaId: \"c2c3823f-d74d-49a1-afbe-8d7e0a4d3b7c\"}) {\n    taskchainUuids {\n      taskchainUuid\n    }\n  }\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#example-error-response_2","title":"Example Error Response","text":"<pre><code>{\n  \"data\": null,\n  \"errors\": [\n    {\n      \"message\": \"The on-demand snapshot is not supported for given workload type: Mssql\",\n      \"path\": [\n        \"takeOnDemandSnapshot\"\n      ],\n      \"locations\": [\n        {\n          \"line\": 2,\n          \"column\": 3\n        }\n      ],\n      \"extensions\": {\n        \"code\": 500,\n        \"trace\": {\n          \"operation\": \"/api/graphql\",\n          \"traceId\": \"7hcbDGDPt7EqAkBQ1vSu/A==\",\n          \"spanId\": \"HrzcWppCISg=\"\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/troubleshooting/#corrected-query_2","title":"Corrected Query","text":"<p><pre><code>mutation {\n createOnDemandMssqlBackup(\n  input: {\n    id: \"fef3f155-7092-5b19-bcea-fe8021c38dc6\" \n    config:{\n      baseOnDemandSnapshotConfig: {\n        slaId: \"c2c3823f-d74d-49a1-afbe-8d7e0a4d3b7c\"\n      }\n    }\n  }) {\n    id\n  }\n}\n</code></pre> The query was updated to utilize the correct mutation for performing an on-demand snapshot of an MSSQL server.</p>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/","title":"Rubrik Annapurna","text":""},{"location":"Rubrik-Security-Cloud-API/Annapurna/#what-is-rubrik-annapurna","title":"What is Rubrik Annapurna?","text":"<p>Rubrik Annapurna turns snapshot data into a secure, central library of knowledge for AI applications.</p> <ul> <li> <p>No Expensive Data Lake Required</p> <p>Rubrik provides a centralized place to create retrievers for a multitude of data sources. This greatly simplifies the process by having a single API and retriever for heterogeneus data.</p> </li> <li> <p>Built-in Data Security Policies</p> <p>Policies applied to a retriever can eliminate the accidental leakage of sensitive data to LLMs. This protects against sensitive data leakage to Large Language Models(LLMs).</p> </li> <li> <p>Pass-Through File Permissions</p> <p>Permissions set on the source file are respected by the retriever. Only users that have access to the file in production will have access from the retriever.</p> </li> </ul>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/#how-annapurna-works","title":"How Annapurna works","text":"<p>Rubrik Annapurna retrievers or \"Chatbots\" are created from protected object data within Rubrik. </p> <p>Sensitive data policies can also be defined for the retriever, blocking access to any data containing data such as social security or credit card numbers.</p> <p>The retriever itself is a vector database with an API, resulting in a data source for Retrieval Augmented Generation (RAG).</p> <p>Large Language Models (LLMs) can use the retrieved data to provide a contextually accurate, human readable response, free of any sensitive data according to the policy, to any question related to the data in the retriever.</p> <pre><code>flowchart TD\n  subgraph B[Annapurna Retriever]\n    direction TB\n    subgraph data\n      direction TB\n      confluence[Confluence Data]\n      onedrive[M365 OneDrive Data]\n      exchange[Exchange Mailbox Data]\n    end\n    subgraph Security\n    direction TB\n      sdd[Sensitive Data Policy]\n      filepermissions[File Permissions]\n      retrieverpermissions[Retriever Permissions]\n    end \n    subgraph vector[Vector Database]\n    end\n    data --&gt; vector\n    Security --&gt; vector\n\n  end\n  A[User submits query] --&gt; B --&gt; C[Relevant Documents] --&gt; D[Language Model] --&gt; E[Generate Final Answer]\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Examples/LangChain/","title":"LangChain","text":"<p>In this end-to-end example, LangChain is used to query a Rubrik Annapurna retriever and pass the relevant documents to Azure OpenAI to provide a relevant response.</p>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Examples/LangChain/#setup-instructions","title":"Setup Instructions","text":""},{"location":"Rubrik-Security-Cloud-API/Annapurna/Examples/LangChain/#create-a-python-environment","title":"Create a Python environment","text":"<pre><code>python3 -m venv venv\nsource venv/bin/activate\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Examples/LangChain/#install-required-python-packages","title":"Install required Python packages","text":"<pre><code>pip install -U langchain langchain-openai requests\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Examples/LangChain/#set-environment-variables","title":"Set environment variables","text":"<pre><code>export AZURE_OPENAI_API_KEY=\"your-azure-openai-api-key\"\nexport AZURE_OPENAI_ENDPOINT=\"https://your-instance.openai.azure.com\"\nexport AZURE_DEPLOYMENT_NAME=\"your-gpt-4o-deployment\"\nexport AZURE_OPENAI_MODEL=\"gpt-4o\"\nexport RSC_FQDN=\"your-instance.my.rubrik.com\"\nexport RSC_TOKEN=\"your-rubrik-api-token\"\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Examples/LangChain/#rubrik-retriever-class","title":"Rubrik Retriever Class","text":"<p>Save the below code in a file called <code>rubrik_retriever.py</code>. This is the Rubrik LangChain <code>BaseRetriever</code> which will fetch documents from the retriever through the Rubrik API.</p> Python rubrik_retriever.py<pre><code>import os\nimport requests\nimport json\nfrom typing import List\nfrom langchain.schema import Document\nfrom langchain.schema.retriever import BaseRetriever\n\nclass RubrikRetriever(BaseRetriever):\n    \"\"\"Custom LangChain retriever for querying the Rubrik vector database via REST API.\"\"\"\n\n    retriever_id: str  # This is the retriever or \"Chatbot\" ID from Rubrik.\n    rsc_fqdn: str = os.getenv(\"RSC_FQDN\")  # This is your RSC instance e.g. example.my.rubrik.com\n    rsc_token: str = os.getenv(\"RSC_TOKEN\")  # RSC API Token\n\n    def _get_relevant_documents(self, query: str) -&gt; List[Document]:\n        \"\"\"Sends a query to the API and retrieves relevant chunks.\"\"\"\n\n        headers = {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": f\"Bearer {self.rsc_token}\"\n        }\n        api_url = f\"https://{self.rsc_fqdn}/api/annapurna/{self.retriever_id}/retrieve\"\n\n        payload = {\"query\": query}\n        response = requests.post(api_url, headers=headers, json=payload)\n\n        if response.status_code != 200:\n            raise Exception(f\"Error from API: {response.status_code} - {response.text}\")\n\n        results = response.json().get(\"results\", [])\n\n        return [\n            Document(page_content=result[\"content\"], metadata={\"source_url\": result[\"sourceUrl\"]})\n            for result in results\n        ]\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Examples/LangChain/#langchain-with-rubrik-and-azure-openai","title":"Langchain with Rubrik and Azure OpenAI","text":"<p>Save the below code in a file called <code>annapurna_query.py</code>. This performs the chain to query the Rubrik retriever, pass the results to Azure OpenAI, and print the response.</p> Python annapurna_query.py<pre><code>import argparse\nimport os\nfrom rubrik_retriever import RubrikRetriever  # Import the retriever class\nfrom langchain.chains import RetrievalQA\nfrom langchain.prompts import PromptTemplate\nfrom langchain_openai import AzureChatOpenAI\n\n# Set up argument parsing\nparser = argparse.ArgumentParser(description=\"Run a query using RubrikRetriever and Azure OpenAI GPT-4o.\")\nparser.add_argument(\"retriever_id\", type=str, help=\"The retriever ID for RubrikRetriever.\")\nparser.add_argument(\"query\", type=str, help=\"The query to be processed by the retriever and LLM.\")\nargs = parser.parse_args()\n\n# Initialize the retriever with the retriever ID\nretriever = RubrikRetriever(retriever_id=args.retriever_id)\n\n# Initialize the Azure OpenAI GPT-4o model\nllm = AzureChatOpenAI(\n    openai_api_version=\"2024-02-15-preview\",\n    azure_endpoint=os.getenv(\"AZURE_OPENAI_ENDPOINT\"),\n    openai_api_key=os.getenv(\"AZURE_OPENAI_API_KEY\"),\n    deployment_name=os.getenv(\"AZURE_DEPLOYMENT_NAME\"),\n    model=os.getenv(\"AZURE_OPENAI_MODEL\", \"gpt-4o\"),\n)\n\n# Define a custom prompt\ncustom_prompt = PromptTemplate(\n    template=\"\"\"You are a helpful assistant. Use the following retrieved documents to answer the question:\n\n    Retrieved Documents:\n    {context}\n\n    Question: {question}\n\n    Answer:\"\"\",\n    input_variables=[\"question\", \"context\"],\n)\n\n# Create the RAG pipeline using LangChain's RetrievalQA\nqa_chain = RetrievalQA.from_chain_type(\n    llm=llm,\n    retriever=retriever,\n    chain_type=\"stuff\",\n    return_source_documents=False,  # Only return the LLM response\n    chain_type_kwargs={\"prompt\": custom_prompt},\n)\n\n# Retrieve the LLM response\nresponse = qa_chain.invoke({\"query\": args.query})\n\n# Extract and print only the LLM-generated response. For full response, change the below to print(response)\nif isinstance(response, dict) and \"result\" in response:\n    print(response[\"result\"])  # Correct way to access the response\nelse:\n    print(\"\u26a0\ufe0f Unexpected response format:\", response)  # Debugging fallback\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Examples/LangChain/#usage","title":"Usage","text":"<p>Run <code>annapurna_query.py</code> by providing the Rubrik retriever ID and a query relevant to the data contained in the Rubrik retriever.</p> <pre><code>python annapurna_query.py &lt;retriever_id&gt; \"Your query here\"\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Retrievers/","title":"Annapurna Retrievers","text":""},{"location":"Rubrik-Security-Cloud-API/Annapurna/Retrievers/#listing-retrievers","title":"Listing Retrievers","text":"GraphQLPythonShell <pre><code>query {\n    chatbots {\n        nodes {\n            name\n            id\n        }\n    }\n}\n</code></pre> <pre><code>import requests\nimport json\nimport os\n\n# Get RSC access token from environment variable\nRSC_TOKEN = os.getenv(\"RSC_TOKEN\")\n\n# Define the GraphQL query\nquery = {\n    \"query\": \"query { chatbots(nameSearchFilter: \\\"exampleRetriever\\\") { nodes { name id } } }\"\n}\n\n# Set headers\nheaders = {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": f\"Bearer {RSC_TOKEN}\"\n}\n\n# Define the GraphQL API endpoint\nurl = \"https://example.my.rubrik.com/api/graphql\"\n\n# Execute the GraphQL query\nresponse = requests.post(url, headers=headers, data=json.dumps(query))\n\n# Print the response\nprint(response.json())\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { chatbots { nodes { name id } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Retrievers/retrieve/","title":"Retrieve","text":""},{"location":"Rubrik-Security-Cloud-API/Annapurna/Retrievers/retrieve/#api-endpoint-post-apiannapurnaidretrieve","title":"API Endpoint: <code>POST /api/annapurna/{id}/retrieve</code>","text":""},{"location":"Rubrik-Security-Cloud-API/Annapurna/Retrievers/retrieve/#summary","title":"Summary","text":"<p>Retrieve relevant chunks with Annapurna retriever.</p>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Retrievers/retrieve/#request-parameters","title":"Request Parameters","text":"Name In Type Required Description <code>id</code> path string Yes ID of the retriever <code>retrieve_request</code> body object Yes Query parameters for retrieval"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Retrievers/retrieve/#request-body","title":"Request Body","text":"<pre><code>{\n  \"query\": \"string\"\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Retrievers/retrieve/#example","title":"Example","text":"PythonShell"},{"location":"Rubrik-Security-Cloud-API/Annapurna/Retrievers/retrieve/#response-200","title":"Response (200)","text":"<pre><code>{\n  \"results\": [\n    {\n      \"content\": \"string\",\n      \"sourceUrl\": \"string\"\n    }\n  ]\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Job-Status/","title":"Job Status","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Job-Status/#retrieving-job-status-of-all-cloud-native-objects-aws-azure-gcp","title":"Retrieving Job Status of all Cloud Native Objects (AWS, Azure, GCP)","text":"GraphQLPowerShell SDKShell <pre><code>query {\n    taskchain(taskchainId: \"019523cf-0ded-7373-9e35-cdddc24e5233\") {\n    state\n    progress\n    error\n    startTime\n    endTime\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { taskchain(taskchainId: \\\\\\\"019523cf-0ded-7373-9e35-cdddc24e5233\\\\\\\") { state progress error startTime endTime } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/On-Demand-Backup/","title":"On Demand Backup","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/On-Demand-Backup/#on-demand-backup-for-cloud-native-objects-aws-azure-gcp","title":"On-Demand Backup for Cloud Native Objects (AWS, Azure, GCP)","text":"GraphQLPowerShell SDKShell <pre><code>mutation {\n  takeOnDemandSnapshot(input: {\n    workloadIds: [\"0966c161-7156-495a-9a9c-73ec08e61e0d\"]\n    slaId: \"603d0b87-966a-4eb7-9705-d29fd45cf663\"\n  }) {\n    taskchainUuids {\n      workloadId\n      taskchainUuid\n    }\n    errors {\n      workloadId\n      error\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { takeOnDemandSnapshot(input: { workloadIds: [\\\\\\\"0966c161-7156-495a-9a9c-73ec08e61e0d\\\\\\\"] slaId: \\\\\\\"603d0b87-966a-4eb7-9705-d29fd45cf663\\\\\\\" }) { taskchainUuids { workloadId taskchainUuid } errors { workloadId error } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/AWS/EBS/","title":"EBS","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/AWS/EBS/#retrieving-aws-ebs-volumes","title":"Retrieving AWS EBS Volumes","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  awsNativeEbsVolumes(ebsVolumeFilters: {\n    #nameOrIdSubstringFilter: {nameOrIdSubstring: \"example\"}\n    #regionFilter: {regions: [US_EAST_1]}\n    #tagFilter: {tagFilterParams: {tagKey: \"foo\" tagValue: \"bar\" filterType: TAG_KEY_VALUE}}\n    #typeFilter: {ebsVolumeTypes: [IO1,IO2]}\n  }) {\n    nodes {\n      name\n      id\n      nativeName\n      cloudNativeId\n      volumeType\n      sizeInGiBs\n      iops\n      region\n      availabilityZone\n      tags {\n        key\n        value\n      }\n      awsAccountRubrikId\n      awsAccount {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery awsNativeEbsVolumes\n$query.Field.Nodes = @(Get-RscType -Name AwsNativeEbsVolume -InitialProperties `\n      name,`\n      idm,`\n      nativeName,`\n      cloudNativeId,`\n      volumeType,`\n      sizeInGiBs,`\n      iops,`\n      region,`\n      availabilityZone,`\n      tags.key, tags.value,`\n      awsAccountRubrikId,`\n      awsAccount.name, awsAccount.id,`\n      effectiveSlaDomain.name, effectiveSlaDomain.id\n)\n$query.invoke().nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { awsNativeEbsVolumes(ebsVolumeFilters: { }) { nodes { name id nativeName cloudNativeId volumeType sizeInGiBs iops region availabilityZone tags { key value } awsAccountRubrikId awsAccount { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/AWS/EC2/","title":"EC2","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/AWS/EC2/#retrieving-aws-ec2-instances","title":"Retrieving AWS EC2 Instances","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  awsNativeEc2Instances(ec2InstanceFilters: {\n    #nameOrIdSubstringFilter: {nameOrIdSubstring: \"example\"}\n    #regionFilter: {regions: [US_EAST_1]}\n    #tagFilter: {tagFilterParams: {tagKey: \"foo\" tagValue: \"bar\" filterType: TAG_KEY_VALUE}}\n    #vpcFilter: {vpcIds: [\"093e5470-22b4-483c-8910-fff0cbb982b1\"]}\n  }) {\n    nodes {\n      name\n      id\n      instanceName\n      instanceNativeId\n      instanceType\n      publicIp\n      privateIp\n      vpcName\n      vpcId\n      region\n      availabilityZone\n      osType\n      attachmentSpecs {\n        awsNativeEbsVolumeId\n        devicePath\n        isRootVolume\n        isExcludedFromSnapshot\n      }\n      tags {\n        key\n        value\n      }\n      awsAccountRubrikId\n      awsAccount {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscAwsNativeEc2Instance\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { awsNativeEc2Instances(ec2InstanceFilters: { }) { nodes { name id instanceName instanceNativeId instanceType publicIp privateIp vpcName vpcId region availabilityZone osType attachmentSpecs { awsNativeEbsVolumeId devicePath isRootVolume isExcludedFromSnapshot } tags { key value } awsAccountRubrikId awsAccount { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/AWS/RDS/","title":"RDS","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/AWS/RDS/#retrieving-aws-rds-instances","title":"Retrieving AWS RDS Instances","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  awsNativeRdsInstances(rdsInstanceFilters: {\n    #nameSubstringFilter: {nameSubstring: \"example\"}\n    #regionFilter: {regions: [US_EAST_1]}\n    #tagFilter: {tagFilterParams: {tagKey: \"foo\" tagValue: \"bar\" filterType: TAG_KEY_VALUE}}\n    #vpcFilter: {vpcIds: [\"093e5470-22b4-483c-8910-fff0cbb982b1\"]}\n  }) {\n    nodes {\n      name\n      id\n      dbInstanceName\n      dbiResourceId\n      dbInstanceClass\n      dbEngine\n      readReplicaSourceName\n      rdsType\n      vpcName\n      vpcId\n      isMultiAz\n      allocatedStorageInGibi\n      region\n      primaryAvailabilityZone\n      tags {\n        key\n        value\n      }\n      awsAccountRubrikId\n      awsAccount {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery awsNativeRdsInstances\n$query.field.Nodes = @(Get-RscType -Name AwsNativeRdsInstance -InitialProperties name,`\n    id,`\n    dbInstanceName,`\n    dbiResourceId,`\n    dbInstanceClass,`\n    dbEngine,`\n    readReplicaSourceName,`\n    rdsType,`\n    vpcName,`\n    vpcId,`\n    isMultiAz,`\n    allocatedStorageInGibi,`\n    region,`\n    primaryAvailabilityZone,`\n    tags.key,tags.value,`\n    awsAccountRubrikId,`\n    awsAccount.name,awsAccount.id,`\n    effectiveSlaDomain.name,effectiveSlaDomain.id)\n$query.invoke().nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { awsNativeRdsInstances(rdsInstanceFilters: { }) { nodes { name id dbInstanceName dbiResourceId dbInstanceClass dbEngine readReplicaSourceName rdsType vpcName vpcId isMultiAz allocatedStorageInGibi region primaryAvailabilityZone tags { key value } awsAccountRubrikId awsAccount { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/AWS/S3/","title":"S3","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/AWS/S3/#retrieving-aws-s3-buckets","title":"Retrieving AWS S3 Buckets","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  awsNativeRoot {\n    objectTypeDescendantConnection(\n      objectTypeFilter: AWS_NATIVE_S3_BUCKET\n      filter: [\n        #{field: NAME_EXACT_MATCH texts: \"example\"}\n        #{field: AWS_TAG tagFilterParams: {tagKey: \"foo\" tagValue: \"bar\" filterType: TAG_KEY_VALUE}}\n      ]\n    ) {\n      nodes {\n        name\n        id\n        nativeName\n        cloudNativeId\n        region\n        tags {\n          key\n          value\n        }\n        ... on AwsNativeS3Bucket {\n          numberOfObjects\n          bucketSizeBytes\n          isOnboarding\n        }\n        effectiveSlaDomain {\n          name\n          id\n        }\n      }\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery awsNativeRoot\n$query.Field.ObjectTypeDescendantConnection = Get-RscType -Name AwsNativeHierarchyObjectConnection\n$query.field.ObjectTypeDescendantConnection.PageInfo = Get-RscType -Name PageInfo -InitialProperties hasNextPage,EndCursor\n$query.field.ObjectTypeDescendantConnection.Nodes = @(Get-RscType -Name AwsNativeS3Bucket -InitialProperties `\n    Name,`\n    id,`\n    nativeName,`\n    cloudNativeId,`\n    region,`\n    tags.key,`\n    tags.value,`\n    numberOfObjects,`\n    bucketSizeBytes,`\n    isOnboarding,`\n    effectiveSladomain.name,`\n    effectiveSladomain.id)\n$query.field.Vars.ObjectTypeDescendantConnection.objectTypeFilter = [RubrikSecurityCloud.Types.HierarchyObjectTypeEnum]::AWS_NATIVE_S3_BUCKET\n$query.invoke().ObjectTypeDescendantConnection.nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { awsNativeRoot { objectTypeDescendantConnection( objectTypeFilter: AWS_NATIVE_S3_BUCKET filter: [ ] ) { nodes { name id nativeName cloudNativeId region tags { key value } ... on AwsNativeS3Bucket { numberOfObjects bucketSizeBytes isOnboarding } effectiveSlaDomain { name id } } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/SQL-Managed-Instances/","title":"SQL Managed Instances","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/SQL-Managed-Instances/#retrieving-managed-instance-sql-databases","title":"Retrieving Managed Instance SQL Databases","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  azureSqlManagedInstanceDatabases( azureSqlManagedInstanceDatabaseFilters: {\n      #nameSubstringFilter: {nameSubstring: \"example\"}\n      #resourceGroupFilter: {resourceGroupNames: [\"example\"]}\n      #serverFilter: {serverNames: [\"example\"]}\n      #subscriptionFilter: {subscriptionIds: [\"7d0d81dc-3323-4f45-bd0b-cc37e5bf9f37\"]}\n      #regionFilter: {regions: [EAST_US, EAST_US2]}\n      #relicFilter: {relic: false}\n  }) {\n    nodes {\n      name\n      id\n      region\n      persistentStorage {\n        name\n        id\n      }\n      azureSqlManagedInstanceServer {\n        name\n        id\n      }\n      persistentStorage {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { azureSqlManagedInstanceDatabases( azureSqlManagedInstanceDatabaseFilters: { }) { nodes { name id region persistentStorage { name id } azureSqlManagedInstanceServer { name id } persistentStorage { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/SQL-Managed-Instances/#retrieving-managed-instance-sql-servers","title":"Retrieving Managed Instance SQL Servers","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  azureSqlManagedInstanceServers( azureSqlManagedInstanceServerFilters: {\n      #nameSubstringFilter: {nameSubstring: \"example\"}\n      #tagFilter: {tagFilterParams: {tagKey: \"foo\", tagValue: \"bar\", filterType: TAG_KEY_VALUE}}\n      #resourceGroupFilter: {resourceGroupNames: [\"example\"]}\n      #subscriptionFilter: {subscriptionIds: [\"7d0d81dc-3323-4f45-bd0b-cc37e5bf9f37\"]}\n      #regionFilter: {regions: [EAST_US, EAST_US2]}\n  }) {\n    nodes {\n      name\n      id\n      region\n      vCoresCount\n      storageSizeGib\n      instancePoolName\n      serviceTier\n      vnetName\n      subnetName\n      azureNativeResourceGroup {\n        name\n        id\n      }\n      tags {\n        key\n        value\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { azureSqlManagedInstanceServers( azureSqlManagedInstanceServerFilters: { }) { nodes { name id region vCoresCount storageSizeGib instancePoolName serviceTier vnetName subnetName azureNativeResourceGroup { name id } tags { key value } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/SQL/","title":"SQL","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/SQL/#retrieving-azure-sql-databases","title":"Retrieving Azure SQL Databases","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  azureSqlDatabases( azureSqlDatabaseFilters: {\n      #nameSubstringFilter: {nameSubstring: \"example\"}\n      #tagFilter: {tagFilterParams: {tagKey: \"foo\", tagValue: \"bar\", filterType: TAG_KEY_VALUE}}\n      #resourceGroupFilter: {resourceGroupNames: [\"example\"]}\n      #subscriptionFilter: {subscriptionIds: [\"7d0d81dc-3323-4f45-bd0b-cc37e5bf9f37\"]}\n      #regionFilter: {regions: [EAST_US, EAST_US2]}\n      #relicFilter: {relic: false}\n  }) {\n    nodes {\n      name\n      id\n      region\n            elasticPoolName\n      backupStorageRedundancy\n      serviceTier\n      maximumSizeInBytes\n      persistentStorage {\n        name\n        id\n      }\n      serviceObjectiveName\n      azureSqlDatabaseServer {\n        name\n        id\n      }\n      tags {\n        key\n        value\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { azureSqlDatabases( azureSqlDatabaseFilters: { }) { nodes { name id region elasticPoolName backupStorageRedundancy serviceTier maximumSizeInBytes persistentStorage { name id } serviceObjectiveName azureSqlDatabaseServer { name id } tags { key value } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/SQL/#retrieving-azure-sql-database-servers","title":"Retrieving Azure SQL Database Servers","text":"GraphQLPowerShell SDKShell <pre><code># https://docs.microsoft.com/en-us/azure/azure-sql/database/logical-servers\nquery {\n  azureSqlDatabaseServers( azureSqlDatabaseServerFilters: {\n      #nameSubstringFilter: {nameSubstring: \"example\"}\n      #resourceGroupFilter: {resourceGroupNames: [\"example\"]}\n      #subscriptionFilter: {subscriptionIds: [\"7d0d81dc-3323-4f45-bd0b-cc37e5bf9f37\"]}\n      #regionFilter: {regions: [EAST_US, EAST_US2]}\n  }) {\n    nodes {\n      name\n      id\n      region\n      tags {\n        key\n        value\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { azureSqlDatabaseServers( azureSqlDatabaseServerFilters: { }) { nodes { name id region tags { key value } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/VM/","title":"VM","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/VM/#azure-virtual-machines","title":"Azure Virtual Machines","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/Azure/VM/#retrieving-azure-virtual-machines","title":"Retrieving Azure Virtual Machines","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  azureNativeVirtualMachines( virtualMachineFilters: {\n      #nameSubstringFilter: {nameSubstring: \"example\"}\n      #tagFilter: {tagFilterParams: {tagKey: \"foo\", tagValue: \"bar\", filterType: TAG_KEY_VALUE}}\n      #resourceGroupFilter: {resourceGroupNames: [\"example\"]}\n      #subscriptionFilter: {subscriptionIds: [\"7d0d81dc-3323-4f45-bd0b-cc37e5bf9f37\"]}\n      #regionFilter: {regions: [EAST_US, EAST_US2]}\n      #relicFilter: {relic: false}\n  }) {\n    nodes {\n      name\n      id\n      nativeName\n      cloudNativeId\n      availabilitySetNativeId\n      resourceGroup {\n        name\n        id\n      }\n      region\n      sizeType\n      osType\n      vnetName\n      subnetName\n      privateIp\n      attachedManagedDisks {\n        name\n        id\n        cloudNativeId\n        diskSizeGib\n      }\n      tags {\n        key\n        value\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { azureNativeVirtualMachines( virtualMachineFilters: { }) { nodes { name id nativeName cloudNativeId availabilitySetNativeId resourceGroup { name id } region sizeType osType vnetName subnetName privateIp attachedManagedDisks { name id cloudNativeId diskSizeGib } tags { key value } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/GCP/Instances/","title":"Instances","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Cloud/GCP/Instances/#retrieving-google-compute-engine-gce-instances","title":"Retrieving Google Compute Engine (GCE) Instances","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  gcpNativeGceInstances( gceInstanceFilters: {\n      #nameOrIdSubstringFilter: {nameOrIdSubstring: \"example\"}\n      #labelFilter: {labelFilterParams: {labelKey: \"foo\", labelValue: \"bar\", filterType: LABEL_KEY_VALUE}}\n      #projectFilter: {projectIds: [\"7d0d81dc-3323-4f45-bd0b-cc37e5bf9f37\"]}\n      #machineTypeFilter: {machineTypes: [\"example\"]}\n      #networkFilter: {networkNames: [\"example\"]}\n      #regionFilter: {regions: [\"example\"]}\n      #relicFilter: {relic: false}\n  }) {\n    nodes {\n      name\n      id\n      nativeName\n            nativeId\n      region\n            zone\n      machineType\n      vpcName\n      attachedDisks {\n        diskName\n        diskId\n        deviceName\n        sizeInGiBs\n        isBootDisk\n        isExcluded\n      }\n      labels {\n        key\n        value\n      }\n      networkHostProjectNativeId\n      gcpNativeProject {\n        name\n        id\n        nativeName\n        nativeId\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { gcpNativeGceInstances( gceInstanceFilters: { }) { nodes { name id nativeName nativeId region zone machineType vpcName attachedDisks { diskName diskId deviceName sizeInGiBs isBootDisk isExcluded } labels { key value } networkHostProjectNativeId gcpNativeProject { name id nativeName nativeId } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Filesets/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Filesets/#retrieving-fileset-templates-and-filesets","title":"Retrieving Fileset Templates and Filesets","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  filesetTemplates( hostRoot: WINDOWS_HOST_ROOT filter: [\n    #{field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      osType\n      exceptions\n      excludes\n      osType\n      preBackupScript\n      postBackupScript\n      allowBackupNetworkMounts\n      allowBackupHiddenFoldersInNetworkMounts\n      shareType\n      descendantConnection {\n        nodes {\n          name\n          id\n          physicalPath {\n            name\n            fid\n          }\n        }\n      }\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { filesetTemplates( hostRoot: WINDOWS_HOST_ROOT filter: [ {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId osType exceptions excludes osType preBackupScript postBackupScript allowBackupNetworkMounts allowBackupHiddenFoldersInNetworkMounts shareType descendantConnection { nodes { name id physicalPath { name fid } } } cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Filesets/Job-Status/","title":"Job Status","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Filesets/Job-Status/#retrieving-job-status-of-fileset-jobs","title":"Retrieving Job Status of Fileset Jobs","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  filesetRequestStatus(input: {\n    id: \"fb5342f3-daf6-475d-8aa7-14f23932c683\"\n    clusterUuid: \"8417a938-96f5-43c6-9905-b36e051c5f98\"\n  }) {\n    startTime\n    endTime\n    error {\n      message\n    }\n    progress\n    status\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { filesetRequestStatus(input: { id: \\\\\\\"fb5342f3-daf6-475d-8aa7-14f23932c683\\\\\\\" clusterUuid: \\\\\\\"8417a938-96f5-43c6-9905-b36e051c5f98\\\\\\\" }) { startTime endTime error { message } progress status } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Filesets/On-Demand-Backup/","title":"On Demand Backup","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Filesets/On-Demand-Backup/#fileset-on-demand-backup","title":"Fileset On-Demand Backup","text":"GraphQLPowerShell SDKShell <pre><code>mutation filesetSnapshot {\n  createFilesetSnapshot(input: {\n    id: \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n    config: {\n      slaId: \"c7bd8eb2-7132-4c8f-8592-682d507520dc\"\n    }\n  }) {\n    id\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation filesetSnapshot { createFilesetSnapshot(input: { id: \\\\\\\"f79b1102-77b5-4434-8400-c2a66c9b2dc1\\\\\\\" config: { slaId: \\\\\\\"c7bd8eb2-7132-4c8f-8592-682d507520dc\\\\\\\" } }) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/IBM-DB2/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/IBM-DB2/#retrieving-db2-instances","title":"Retrieving DB2 instances","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  objects: db2Instances(\n    filter: [\n      {field: NAME texts: \"example\"}\n      {field: IS_RELIC texts: \"false\"}\n      {field: IS_REPLICATED texts: \"false\"}\n    ]\n    ) {\n    nodes {\n      name\n      id\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n      primaryClusterUuid\n      hosts {\n        name\n        id\n      }\n      status\n      statusMessage\n      instanceType\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/IBM-DB2/#retrieving-db2-databases","title":"Retrieving DB2 databases","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  db2Databases(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n      db2DbType\n      db2Instance {\n        name\n        id\n      }\n      status\n      statusMessage\n      backupSessions\n      backupParallelism\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { db2Databases(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId effectiveSlaDomain { name id } cluster { name id } db2DbType db2Instance { name id } status statusMessage backupSessions backupParallelism } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/IBM-DB2/Job-Status/","title":"Job Status","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/IBM-DB2/Job-Status/#retrieving-db2-database-job-status","title":"Retrieving DB2 Database Job Status","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  db2DatabaseJobStatus(input: {\n    id: \"9f706c3c-4678-44e5-99fe-50ebde6b308e\"\n    clusterUuid: \"85e98e61-4c1f-496a-b846-5eb871966025\"\n  }) {\n    progress\n    status\n    result\n    error {\n      message\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { db2DatabaseJobStatus(input: { id: \\\\\\\"9f706c3c-4678-44e5-99fe-50ebde6b308e\\\\\\\" clusterUuid: \\\\\\\"85e98e61-4c1f-496a-b846-5eb871966025\\\\\\\" }) { progress status result error { message } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/IBM-DB2/On-Demand-Backup/","title":"On Demand Backup","text":"GraphQLPowerShell SDKShell <pre><code>mutation db2OnDemandBackup {\n  createOnDemandDb2Backup(input: {\n    id: \"c7bd8eb2-7132-4c8f-8592-682d507520dc\"\n    config: {\n      slaId: \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n      }\n    }) {\n      id\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation db2OnDemandBackup { createOnDemandDb2Backup(input: { id: \\\\\\\"c7bd8eb2-7132-4c8f-8592-682d507520dc\\\\\\\" config: { slaId: \\\\\\\"f79b1102-77b5-4434-8400-c2a66c9b2dc1\\\\\\\" } }) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Managed-Volumes/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Managed-Volumes/#retrieving-sla-managed-volumes","title":"Retrieving SLA Managed Volumes","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  slaManagedVolumes( filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      managedVolumeType\n      provisionedSize\n      numChannels\n      clientNamePatterns\n      host {\n        name\n        osName\n        id\n      }\n      hostDetail {\n        name\n        id\n        status\n      }\n      smbShare {\n        domainName\n        validIps\n        validUsers\n        activeDirectoryGroups\n      }\n      nfsSettings {\n        version\n      }\n      clientConfig {\n        username\n        backupScript {\n          scriptCommand\n        }\n        preBackupScript {\n          scriptCommand\n        }\n        successfulPostBackupScript {\n          scriptCommand\n        }\n        failedPostBackupScript {\n          scriptCommand\n        }\n        channelHostMountPaths\n        hostId\n      }\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { slaManagedVolumes( filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId managedVolumeType provisionedSize numChannels clientNamePatterns host { name osName id } hostDetail { name id status } smbShare { domainName validIps validUsers activeDirectoryGroups } nfsSettings { version } clientConfig { username backupScript { scriptCommand } preBackupScript { scriptCommand } successfulPostBackupScript { scriptCommand } failedPostBackupScript { scriptCommand } channelHostMountPaths hostId } cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Managed-Volumes/#retrieving-managed-volumes","title":"Retrieving Managed Volumes","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  managedVolumes( filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      managedVolumeType\n      provisionedSize\n      numChannels\n      clientNamePatterns\n      host {\n        name\n        osName\n        id\n      }\n      hostDetail {\n        name\n        id\n        status\n      }\n      smbShare {\n        domainName\n        validIps\n        validUsers\n        activeDirectoryGroups\n      }\n      nfsSettings {\n        version\n      }\n      clientConfig {\n        username\n        backupScript {\n          scriptCommand\n        }\n        preBackupScript {\n          scriptCommand\n        }\n        successfulPostBackupScript {\n          scriptCommand\n        }\n        failedPostBackupScript {\n          scriptCommand\n        }\n        channelHostMountPaths\n        hostId\n      }\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { managedVolumes( filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId managedVolumeType provisionedSize numChannels clientNamePatterns host { name osName id } hostDetail { name id status } smbShare { domainName validIps validUsers activeDirectoryGroups } nfsSettings { version } clientConfig { username backupScript { scriptCommand } preBackupScript { scriptCommand } successfulPostBackupScript { scriptCommand } failedPostBackupScript { scriptCommand } channelHostMountPaths hostId } cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Managed-Volumes/Job-Status/","title":"Job Status","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Managed-Volumes/Job-Status/#retrieving-sla-managed-volume-snapshot-job-status","title":"Retrieving SLA Managed Volume Snapshot Job Status","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  jobInfo(input: {\n    requestId: \"c7bd8eb2-7132-4c8f-8592-682d507520dc\"\n    clusterUuid: \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n    type: TAKE_MANAGED_VOLUME_ON_DEMAND_SNAPSHOT\n    additionalInfo: {}\n  }) {\n    status\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { jobInfo(input: { requestId: \\\\\\\"c7bd8eb2-7132-4c8f-8592-682d507520dc\\\\\\\" clusterUuid: \\\\\\\"f79b1102-77b5-4434-8400-c2a66c9b2dc1\\\\\\\" type: TAKE_MANAGED_VOLUME_ON_DEMAND_SNAPSHOT additionalInfo: {} }) { status } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Managed-Volumes/Job-Status/#retrieving-managed-volume-begin-snapshot-job-status","title":"Retrieving Managed Volume Begin Snapshot Job Status","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  jobInfo(input: {\n    requestId: \"c7bd8eb2-7132-4c8f-8592-682d507520dc\"\n    clusterUuid: \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n    type: BEGIN_MANAGED_VOLUME_SNAPSHOT\n    additionalInfo: {}\n  }) {\n    status\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { jobInfo(input: { requestId: \\\\\\\"c7bd8eb2-7132-4c8f-8592-682d507520dc\\\\\\\" clusterUuid: \\\\\\\"f79b1102-77b5-4434-8400-c2a66c9b2dc1\\\\\\\" type: BEGIN_MANAGED_VOLUME_SNAPSHOT additionalInfo: {} }) { status } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Managed-Volumes/Job-Status/#retrieving-managed-volume-end-snapshot-job-status","title":"Retrieving Managed Volume End Snapshot Job Status","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  jobInfo(input: {\n    requestId: \"c7bd8eb2-7132-4c8f-8592-682d507520dc\"\n    clusterUuid: \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n    type: END_MANAGED_VOLUME_SNAPSHOT\n    additionalInfo: {}\n  }) {\n    status\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { jobInfo(input: { requestId: \\\\\\\"c7bd8eb2-7132-4c8f-8592-682d507520dc\\\\\\\" clusterUuid: \\\\\\\"f79b1102-77b5-4434-8400-c2a66c9b2dc1\\\\\\\" type: END_MANAGED_VOLUME_SNAPSHOT additionalInfo: {} }) { status } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Managed-Volumes/On-Demand-Backup/","title":"On Demand Backup","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Managed-Volumes/On-Demand-Backup/#sla-managed-volume-snapshot","title":"SLA Managed Volume Snapshot","text":"GraphQLPowerShell SDKShell <pre><code>mutation slaManagedVolumeSnapshot {\n  takeManagedVolumeOnDemandSnapshot(input: {\n    id: \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n    config: {\n      retentionConfig: {\n        slaId: \"c7bd8eb2-7132-4c8f-8592-682d507520dc\"\n      }\n    }\n  }) {\n    id\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation slaManagedVolumeSnapshot { takeManagedVolumeOnDemandSnapshot(input: { id: \\\\\\\"f79b1102-77b5-4434-8400-c2a66c9b2dc1\\\\\\\" config: { retentionConfig: { slaId: \\\\\\\"c7bd8eb2-7132-4c8f-8592-682d507520dc\\\\\\\" } } }) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Managed-Volumes/On-Demand-Backup/#begin-managed-volume-snapshot","title":"Begin Managed Volume Snapshot","text":"GraphQLPowerShell SDKShell <pre><code>mutation beginManagedVolumeSnapshot {\n  beginManagedVolumeSnapshot(input: {\n    id: \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n  }) {\n    asyncRequestStatus {\n      id\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation beginManagedVolumeSnapshot { beginManagedVolumeSnapshot(input: { id: \\\\\\\"f79b1102-77b5-4434-8400-c2a66c9b2dc1\\\\\\\" }) { asyncRequestStatus { id } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Managed-Volumes/On-Demand-Backup/#end-managed-volume-snapshot","title":"End Managed Volume Snapshot","text":"GraphQLPowerShell SDKShell <pre><code>mutation endManagedVolumeSnapshot {\n  endManagedVolumeSnapshot(input: {\n    id: \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n    params: {\n      retentionConfig: {\n        slaId: \"c7bd8eb2-7132-4c8f-8592-682d507520dc\"\n      }\n    }\n    #endSnapshotDelayInSeconds: 5\n  }) {\n    asyncRequestStatus {\n      id\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation endManagedVolumeSnapshot { endManagedVolumeSnapshot(input: { id: \\\\\\\"f79b1102-77b5-4434-8400-c2a66c9b2dc1\\\\\\\" params: { retentionConfig: { slaId: \\\\\\\"c7bd8eb2-7132-4c8f-8592-682d507520dc\\\\\\\" } } }) { asyncRequestStatus { id } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-AD/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-AD/#retrieving-microsoft-active-directory-domain-controllers","title":"Retrieving Microsoft Active Directory Domain Controllers","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  activeDirectoryDomainControllers(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      domainControllerGuid\n      adServiceStatus {\n        serviceStatus\n      }\n      hostname\n      fsmoRoles\n      serverRoles\n      isGlobalCatalog\n      host {\n        name\n        id\n      }\n      dcLocation\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { activeDirectoryDomainControllers(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id domainControllerGuid adServiceStatus { serviceStatus } hostname fsmoRoles serverRoles isGlobalCatalog host { name id } dcLocation effectiveSlaDomain { name id } cluster { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-AD/#retrieving-microsoft-active-directory-domains","title":"Retrieving Microsoft Active Directory Domains","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  activeDirectoryDomains(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      domainName\n      domainSid\n      registeredDomainControllersCount\n      smbDomain {\n        name\n        domainId\n        accountName\n        status\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { activeDirectoryDomains(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id domainName domainSid registeredDomainControllersCount smbDomain { name domainId accountName status } effectiveSlaDomain { name id } cluster { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-Exchange/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-Exchange/#retrieving-microsoft-exchange-database-availability-groups","title":"Retrieving Microsoft Exchange Database Availability Groups","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  exchangeDags(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      totalHosts\n      backupPreference\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { exchangeDags(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId totalHosts backupPreference cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-Exchange/#retrieving-microsoft-exchange-servers","title":"Retrieving Microsoft Exchange Servers","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  exchangeServers(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      totalDbs\n      version\n      exchangeDag {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { exchangeServers(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId totalDbs version exchangeDag { name id } cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-Exchange/#retrieving-microsoft-exchange-databases","title":"Retrieving Microsoft Exchange Databases","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  exchangeDatabases(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      totalCopies\n      activeCopies\n      exchangeServer {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { exchangeDatabases(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId totalCopies activeCopies exchangeServer { name id } cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-Exchange/On-Demand-Backup/","title":"On Demand Backup","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-Exchange/On-Demand-Backup/#exchange-on-demand-backup","title":"Exchange On-Demand Backup","text":"GraphQL <pre><code>mutation {\n  createOnDemandExchangeBackup(input: {\n    id: \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n    config: {\n      forceFullSnapshot: false\n      baseOnDemandSnapshotConfig: {\n        slaId: \"c7bd8eb2-7132-4c8f-8592-682d507520dc\"\n      }\n    }\n  }) {\n    id\n  }\n}\n</code></pre> PowerShell SDK <pre><code>\n</code></pre> Shell <pre><code>mutation {\n  createOnDemandExchangeBackup(input: {\n    id: \"f79b1102-77b5-4434-8400-c2a66c9b2dc1\"\n    config: {\n      forceFullSnapshot: false\n      baseOnDemandSnapshotConfig: {\n        slaId: \"c7bd8eb2-7132-4c8f-8592-682d507520dc\"\n      }\n    }\n  }) {\n    id\n  }\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-HyperV/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-HyperV/#retrieving-microsoft-hyper-v-system-center-virtual-machine-managers","title":"Retrieving Microsoft Hyper-V System Center Virtual Machine Managers","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  hypervScvmms(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      hostName\n      scvmmInfo {\n        version\n      }\n      connectionStatus\n      status {\n        connectivity\n      }\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { hypervScvmms(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id hostName scvmmInfo { version } connectionStatus status { connectivity } cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-HyperV/#retrieving-microsoft-hyper-v-servers","title":"Retrieving Microsoft Hyper-V Servers","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  hypervServersPaginated(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      connectionStatus\n      status {\n        connectivity\n      }\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { hypervServersPaginated(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id connectionStatus status { connectivity } cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-HyperV/#retrieving-microsoft-hyper-v-virtual-machines","title":"Retrieving Microsoft Hyper-V Virtual Machines","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  hypervVirtualMachines(filter: [\n    #{field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      osType\n      agentStatus {\n        connectionStatus\n        disconnectReason\n      }\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { hypervVirtualMachines(filter: [ {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId osType agentStatus { connectionStatus disconnectReason } cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-SQL/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-SQL/#retrieving-microsoft-sql-instances","title":"Retrieving Microsoft SQL Instances","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  mssqlTopLevelDescendants(filter: [\n    {field: NAME_EXACT_MATCH, texts: \"example\"}\n    {field: IS_RELIC, texts: \"false\"}\n    {field: IS_ARCHIVED, texts: \"false\"}\n    {field: IS_REPLICATED, texts: \"false\"}\n    ]) {\n      nodes {\n        id\n        name\n        numWorkloadDescendants\n        ... on PhysicalHost {\n          id\n          name\n          cbtStatus\n          physicalChildConnection {\n            nodes {\n              ... on MssqlInstance {\n                id\n                name\n                slaAssignment\n                effectiveSlaDomain {\n                  name\n                  id\n                  version\n                }\n              }\n            }\n          }\n        }\n      }\n  }\n}\n</code></pre> <pre><code>Get-RscMssqlInstance -Hostname \"mssql.example.com\" -Relic:$false -Replica:$false\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { mssqlTopLevelDescendants(filter: [ {field: NAME_EXACT_MATCH, texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC, texts: \\\\\\\"false\\\\\\\"} {field: IS_ARCHIVED, texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED, texts: \\\\\\\"false\\\\\\\"} ]) { nodes { id name numWorkloadDescendants ... on PhysicalHost { id name cbtStatus physicalChildConnection { nodes { ... on MssqlInstance { id name slaAssignment effectiveSlaDomain { name id version } } } } } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-SQL/#retrieving-microsoft-sql-databases","title":"Retrieving Microsoft SQL Databases","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  mssqlDatabases(\n    filter: [\n      {field: NAME_EXACT_MATCH, texts: \"example\"}\n      {field: IS_RELIC, texts: \"false\"}\n      #{field: LOCATION, texts: \"hostname\\instancename\"}\n      {field: IS_ARCHIVED, texts: \"false\"}\n      {field: IS_REPLICATED, texts: \"false\"}]\n  ) {\n    nodes {\n      name\n      id\n      logicalPath {\n        name\n        objectType\n      }\n      effectiveSlaDomain {\n        id\n        name\n      }\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscMssqlDatabase -Relic:$false -Replica:$false\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { mssqlDatabases( filter: [ {field: NAME_EXACT_MATCH, texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC, texts: \\\\\\\"false\\\\\\\"} {field: IS_ARCHIVED, texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED, texts: \\\\\\\"false\\\\\\\"}] ) { nodes { name id logicalPath { name objectType } effectiveSlaDomain { id name } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-SQL/Job-Status/","title":"Job Status","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-SQL/Job-Status/#retrieving-job-status-of-microsoft-sql-jobs","title":"Retrieving Job Status of Microsoft SQL Jobs","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  mssqlJobStatus(input: {\n    id: \"fb5342f3-daf6-475d-8aa7-14f23932c683\"\n    clusterUuid: \"8417a938-96f5-43c6-9905-b36e051c5f98\"\n  }) {\n    startTime\n    endTime\n    error {\n      message\n    }\n    progress\n    status\n  }\n}\n</code></pre> <pre><code>$requestId = \"MSSQL_DB_BACKUP_00000000-0000-0000-0000-000000000000_00000000-0000-0000-0000-000000000000:::0\"\n$clusterId = \"00000000-0000-0000-0000-000000000000\"\n$query = New-RscQuery -GqlQuery mssqlJobStatus -FieldProfile FULL\n$query.var.input = New-Object -Typename RubrikSecurityCloud.Types.GetMssqlAsyncRequestStatusInput\n$query.var.input.Id = $requestId\n$query.var.input.ClusterUuid = $clusterId\n$query.invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { mssqlJobStatus(input: { id: \\\\\\\"fb5342f3-daf6-475d-8aa7-14f23932c683\\\\\\\" clusterUuid: \\\\\\\"8417a938-96f5-43c6-9905-b36e051c5f98\\\\\\\" }) { startTime endTime error { message } progress status } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-SQL/On-Demand-Backup/","title":"On Demand Backup","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Microsoft-SQL/On-Demand-Backup/#microsoft-sql-on-demand-backup","title":"Microsoft SQL On-Demand Backup","text":"GraphQLPowerShell SDKShell <pre><code>mutation mssqlDatabaseSnapshot {\n  createOnDemandMssqlBackup(\n    input: {\n      id: \"85e98e61-4c1f-496a-b846-5eb871966025\" \n      config: {\n        baseOnDemandSnapshotConfig: {\n          slaId: \"9f706c3c-4678-44e5-99fe-50ebde6b308e\"\n        }\n      }\n    }) {\n    id\n  }\n}\n</code></pre> <pre><code>$db = Get-RscMssqlDatabase -Name \"example\" -Relic:$false -Replica:$false\n$sla = Get-RscSla -Name \"example\"\n$db | New-RscMssqlSnapshot -RscSlaDomain $sla\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation mssqlDatabaseSnapshot { createOnDemandMssqlBackup( input: { id: \\\\\\\"85e98e61-4c1f-496a-b846-5eb871966025\\\\\\\" config: { baseOnDemandSnapshotConfig: { slaId: \\\\\\\"9f706c3c-4678-44e5-99fe-50ebde6b308e\\\\\\\" } } }) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/MongoDB/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/MongoDB/#retrieving-mongo-collections","title":"Retrieving Mongo Collections","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  mongoCollections(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      source {\n        name\n        id\n      }\n      database {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { mongoCollections(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId source { name id } database { name id } cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/MongoDB/#retrieving-mongo-databases","title":"Retrieving Mongo Databases","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  mongoDatabases(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      source {\n        name\n        id\n      }\n      activeCollectionCount\n      protectedCollectionCount\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { mongoDatabases(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId source { name id } activeCollectionCount protectedCollectionCount cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/MongoDB/#retrieving-mongo-sources","title":"Retrieving Mongo Sources","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  mongoSources(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      sourceType\n      status\n      discoveryStatus\n      hostDetails {\n        name\n        id\n        connectionStatus\n      }\n      managementType\n      activeCollectionCount\n      protectedCollectionCount\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { mongoSources(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId sourceType status discoveryStatus hostDetails { name id connectionStatus } managementType activeCollectionCount protectedCollectionCount cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/NAS-Unstructured-Data/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/NAS-Unstructured-Data/#retrieving-nas-shares","title":"Retrieving NAS Shares","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nasShares(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      shareType\n      exportPoint\n      isChangelistEnabled\n      isStale\n      nasSystem {\n        name\n        id\n      }\n      nasVolume {\n        name\n        id\n        nasNamespace {\n          name\n          id\n        }\n      }\n      primaryFileset {\n        name\n        id\n      }\n      connectedThrough\n      hostAddress\n      hostIdForRestore\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/NAS-Unstructured-Data/#retrieving-nas-systems","title":"Retrieving NAS Systems","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nasSystems(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      osVersion\n      lastRefreshTime\n      vendorType\n      isSmbSupported\n      isNfsSupported\n      lastStatus\n      volumeCount\n      shareCount\n      namespaceCount\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { nasSystems(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId osVersion lastRefreshTime vendorType isSmbSupported isNfsSupported lastStatus volumeCount shareCount namespaceCount cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/NAS-Unstructured-Data/#retrieving-nas-namespaces","title":"Retrieving NAS Namespaces","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nasNamespaces(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      vendorType\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { nasNamespaces(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId vendorType cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/NAS-Unstructured-Data/#retrieving-cloud-direct-nas-shares","title":"Retrieving Cloud Direct NAS Shares","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  cloudDirectNasShares(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      protocol\n      ncdPolicyName\n      systemId\n      namespaceId\n      cloudDirectId\n      cloudDirectNasSystem {\n        name\n        id\n      }\n      cloudDirectNasNamespace {\n        name\n        id\n      }\n      excludes {\n        path\n        pattern\n      }\n\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { cloudDirectNasShares(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id protocol ncdPolicyName systemId namespaceId cloudDirectId cloudDirectNasSystem { name id } cloudDirectNasNamespace { name id } excludes { path pattern } cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/NAS-Unstructured-Data/#retrieving-cloud-direct-nas-systems","title":"Retrieving Cloud Direct NAS Systems","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nasSystems(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      osVersion\n      lastRefreshTime\n      vendorType\n      isSmbSupported\n      isNfsSupported\n      lastStatus\n      volumeCount\n      shareCount\n      namespaceCount\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { nasSystems(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId osVersion lastRefreshTime vendorType isSmbSupported isNfsSupported lastStatus volumeCount shareCount namespaceCount cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/NAS-Unstructured-Data/#retrieving-cloud-direct-nas-namespaces","title":"Retrieving Cloud Direct NAS Namespaces","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  cloudDirectNasNamespaces(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cloudDirectId\n      cloudDirectNasSystem {\n        name\n        id\n      }\n      shareCount\n      cluster {\n        name\n        id\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { cloudDirectNasNamespaces(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cloudDirectId cloudDirectNasSystem { name id } shareCount cluster { name id } effectiveSlaDomain { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Nutanix-AHV/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Nutanix-AHV/#retrieving-nutanix-vms","title":"Retrieving Nutanix VMs","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nutanixVms(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      vmUuid\n      osType\n      vmDisks {\n        label\n        uuid\n        vmDiskUuid\n        sizeInBytes\n        isSnapshottable\n        storageContainerName\n        storageContainerId\n      }\n      preBackupScript {\n        scriptPath\n      }\n      postSnapScript {\n        scriptPath\n      }\n      postBackupScript {\n        scriptPath\n      }\n      snapshotConsistencyMandate\n      agentStatus {\n        connectionStatus\n        disconnectReason\n      }\n      isAgentRegistered\n      hypervisorType\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { nutanixVms(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId vmUuid osType vmDisks { label uuid vmDiskUuid sizeInBytes isSnapshottable storageContainerName storageContainerId } preBackupScript { scriptPath } postSnapScript { scriptPath } postBackupScript { scriptPath } snapshotConsistencyMandate agentStatus { connectionStatus disconnectReason } isAgentRegistered hypervisorType effectiveSlaDomain { name id } cluster { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Nutanix-AHV/#retrieving-nutanix-clusters","title":"Retrieving Nutanix Clusters","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nutanixClusters(filter: [\n    #{field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      hostName\n      naturalId\n      nosVersion\n      connectionStatus {\n        message\n        status\n      }\n      clusterNetworks {\n        name\n        uuid\n      }\n      storageContainers {\n        name\n        uuid\n        freeBytes\n        usedBytes\n        totalBytes\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { nutanixClusters(filter: [ {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId hostName naturalId nosVersion connectionStatus { message status } clusterNetworks { name uuid } storageContainers { name uuid freeBytes usedBytes totalBytes } effectiveSlaDomain { name id } cluster { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Nutanix-AHV/#retreiving-nutanix-prism-central-servers","title":"Retreiving Nutanix Prism Central Servers","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nutanixPrismCentrals(filter: [\n    #{field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      hostName\n      naturalId\n      nosVersion\n      nutanixClusters {\n        nodes {\n          name\n          id\n        }\n      }\n      isDrEnabled\n      connectionStatus {\n        message\n        status\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { nutanixPrismCentrals(filter: [ {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId hostName naturalId nosVersion nutanixClusters { nodes { name id } } isDrEnabled connectionStatus { message status } effectiveSlaDomain { name id } cluster { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Nutanix-AHV/Job-Status/","title":"Job Status","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Nutanix-AHV/Job-Status/#retrieving-job-status-of-nutanix-vm-jobs","title":"Retrieving Job Status of Nutanix VM Jobs","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nutanixVmAsyncRequestStatus(input: {\n    id: \"9f706c3c-4678-44e5-99fe-50ebde6b308e\"\n    clusterUuid: \"85e98e61-4c1f-496a-b846-5eb871966025\"\n  }) {\n    progress\n    status\n    result\n    error {\n      message\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { nutanixVmAsyncRequestStatus(input: { id: \\\\\\\"9f706c3c-4678-44e5-99fe-50ebde6b308e\\\\\\\" clusterUuid: \\\\\\\"85e98e61-4c1f-496a-b846-5eb871966025\\\\\\\" }) { progress status result error { message } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Nutanix-AHV/Job-Status/#retrieving-job-status-of-nutanix-cluster-jobs","title":"Retrieving Job Status of Nutanix Cluster Jobs","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  nutanixClusterAsyncRequestStatus(input: {\n    id: \"9f706c3c-4678-44e5-99fe-50ebde6b308e\"\n    clusterUuid: \"85e98e61-4c1f-496a-b846-5eb871966025\"\n  }) {\n    progress\n    status\n    result\n    error {\n      message\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { nutanixClusterAsyncRequestStatus(input: { id: \\\\\\\"9f706c3c-4678-44e5-99fe-50ebde6b308e\\\\\\\" clusterUuid: \\\\\\\"85e98e61-4c1f-496a-b846-5eb871966025\\\\\\\" }) { progress status result error { message } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Nutanix-AHV/On-Demand-Backup/","title":"On Demand Backup","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Nutanix-AHV/On-Demand-Backup/#nutanix-vm-on-demand-backup","title":"Nutanix VM On-Demand Backup","text":"GraphQLPowerShell SDKShell"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Oracle/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Oracle/#retrieving-oracle-databases","title":"Retrieving Oracle Databases","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  oracleDatabases(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      cdmId\n      dbUniqueName\n      numTablespaces\n      numInstances\n      numChannels\n      logRetentionHours\n      hostLogRetentionHours\n      useSecureThrift\n      osType\n      osNames\n      tablespaces\n      numLogSnapshots\n      pdbs {\n        name\n        dbId\n        openMode\n        isApplicationPdb\n        isApplicationRoot\n        applicationRootContainerId\n      }\n      dbRole\n      dataGuardType\n      dataGuardGroup {\n        name\n        id\n      }\n      lastValidationResult {\n        isSuccess\n        snapshotId\n      }\n      instances {\n        instanceName\n        hostId\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { oracleDatabases(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id cdmId dbUniqueName numTablespaces numInstances numChannels logRetentionHours hostLogRetentionHours useSecureThrift osType osNames tablespaces numLogSnapshots pdbs { name dbId openMode isApplicationPdb isApplicationRoot applicationRootContainerId } dbRole dataGuardType dataGuardGroup { name id } lastValidationResult { isSuccess snapshotId } instances { instanceName hostId } effectiveSlaDomain { name id } cluster { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Oracle/#retrieving-oracle-hosts-and-clusters","title":"Retrieving Oracle Hosts and Clusters","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  oracleTopLevelDescendants(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      objectType\n      ... on OracleHost {\n        descendantConnection {\n          nodes {\n            name\n            id\n            objectType\n          }\n        }\n      }\n      ... on OracleRac {\n        descendantConnection {\n          nodes {\n            name\n            id\n            objectType\n          }\n        }\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { oracleTopLevelDescendants(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id objectType ... on OracleHost { descendantConnection { nodes { name id objectType } } } ... on OracleRac { descendantConnection { nodes { name id objectType } } } effectiveSlaDomain { name id } cluster { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Oracle/Job-Status/","title":"Job Status","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Oracle/Job-Status/#retrieving-job-status-of-oracle-database-jobs","title":"Retrieving Job Status of Oracle Database Jobs","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  oracleDatabaseAsyncRequestDetails(input: {\n    id: \"9f706c3c-4678-44e5-99fe-50ebde6b308e\"\n    clusterUuid: \"85e98e61-4c1f-496a-b846-5eb871966025\"\n  }) {\n    progress\n    status\n    result\n    error {\n      message\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { oracleDatabaseAsyncRequestDetails(input: { id: \\\\\\\"9f706c3c-4678-44e5-99fe-50ebde6b308e\\\\\\\" clusterUuid: \\\\\\\"85e98e61-4c1f-496a-b846-5eb871966025\\\\\\\" }) { progress status result error { message } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Oracle/On-Demand-Backup/","title":"On Demand Backup","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Oracle/On-Demand-Backup/#oracle-database-on-demand-backup","title":"Oracle Database On-Demand Backup","text":"GraphQLPowerShell SDKShell <pre><code>mutation {\n  takeOnDemandOracleDatabaseSnapshot(input: {\n    id: \"40bac7c1-87ad-4ac0-b4a6-34ac592d8e77\"\n    config: {\n      forceFullSnapshot: false\n      baseOnDemandSnapshotConfig: {\n        slaId: \"7d40e858-b8ec-4096-8112-cab8eff1a4e2\"\n      }\n    }\n  }) {\n    id\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { takeOnDemandOracleDatabaseSnapshot(input: { id: \\\\\\\"40bac7c1-87ad-4ac0-b4a6-34ac592d8e77\\\\\\\" config: { forceFullSnapshot: false baseOnDemandSnapshotConfig: { slaId: \\\\\\\"7d40e858-b8ec-4096-8112-cab8eff1a4e2\\\\\\\" } } }) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/Oracle/On-Demand-Backup/#oracle-database-on-demand-log-backup","title":"Oracle Database On-Demand Log Backup","text":"GraphQLPowerShell SDKShell <pre><code>mutation {\n  takeOnDemandOracleLogSnapshot(input: {\n    id: \"40bac7c1-87ad-4ac0-b4a6-34ac592d8e77\"\n  }) {\n    id\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { takeOnDemandOracleLogSnapshot(input: { id: \\\\\\\"40bac7c1-87ad-4ac0-b4a6-34ac592d8e77\\\\\\\" }) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/SAP-HANA/","title":"Index","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/SAP-HANA/#retrieving-sap-hana-databases","title":"Retrieving SAP HANA Databases","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  sapHanaDatabases(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      info {\n        databaseType\n        status\n        backintPath\n        paramFilePath\n        numChannels\n        approxDbSizeInMb\n        logBackupIntervalSecs\n        restoreConfiguredSrcDatabaseId\n        logMode\n      }\n      dataPathType\n      dataPathSpec {\n        name\n      }\n      sapHanaSystem {\n        name\n        id\n      }\n      forceFull\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { sapHanaDatabases(filter: [ {field: NAME_EXACT_MATCH texts: \\\\\\\"example\\\\\\\"} {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"} {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ]) { nodes { name id info { databaseType status backintPath paramFilePath numChannels approxDbSizeInMb logBackupIntervalSecs restoreConfiguredSrcDatabaseId logMode } dataPathType dataPathSpec { name } sapHanaSystem { name id } forceFull effectiveSlaDomain { name id } cluster { name id } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/SAP-HANA/#retrieving-sap-hana-systems","title":"Retrieving SAP HANA Systems","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  sapHanaSystems(filter: [\n    {field: NAME_EXACT_MATCH texts: \"example\"}\n    {field: IS_RELIC texts: \"false\"}\n    {field: IS_REPLICATED texts: \"false\"}\n  ]) {\n    nodes {\n      name\n      id\n      objectType\n      sid\n      instanceNumber\n      status\n      statusMessage\n      systemInfo {\n        hanaVersion\n        isDtEnabled\n        authType\n      }\n      hosts {\n        hostName\n        hostUuid\n        hostType\n        status\n        systemHost {\n          name\n          id\n        }\n      }\n            descendantConnection {\n        nodes {\n          name\n          id\n          objectType\n        }\n      }\n      effectiveSlaDomain {\n        name\n        id\n      }\n      cluster {\n        name\n        id\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/SAP-HANA/Job-Status/","title":"Job Status","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/SAP-HANA/Job-Status/#retrieving-sap-hana-database-job-status","title":"Retrieving SAP HANA Database Job Status","text":"GraphQLPowerShell SDKShell <pre><code>query {\n    jobInfo(input: {\n    requestId: \"9f706c3c-4678-44e5-99fe-50ebde6b308e\"\n    clusterUuid: \"85e98e61-4c1f-496a-b846-5eb871966025\"\n    type: SAP_HANA_DATABASE\n  }) {\n    status\n  }\n}\n</code></pre> <pre><code>query {\n    jobInfo(input: {\n    requestId: \"9f706c3c-4678-44e5-99fe-50ebde6b308e\"\n    clusterUuid: \"85e98e61-4c1f-496a-b846-5eb871966025\"\n    type: SAP_HANA_DATABASE\n  }) {\n    status\n  }\n}\n</code></pre> <pre><code>query {\n    jobInfo(input: {\n    requestId: \"9f706c3c-4678-44e5-99fe-50ebde6b308e\"\n    clusterUuid: \"85e98e61-4c1f-496a-b846-5eb871966025\"\n    type: SAP_HANA_DATABASE\n  }) {\n    status\n  }\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/SAP-HANA/On-Demand-Backup/","title":"On Demand Backup","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/SAP-HANA/On-Demand-Backup/#sap-hana-database-on-demand-backup","title":"SAP HANA Database On-Demand Backup","text":"GraphQLPowerShell SDKShell <pre><code>mutation {\n  createOnDemandSapHanaBackup(input: {\n    id: \"40bac7c1-87ad-4ac0-b4a6-34ac592d8e77\"\n    config: {\n      slaId: \"7d40e858-b8ec-4096-8112-cab8eff1a4e2\"\n    }\n  }) {\n    id\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { createOnDemandSapHanaBackup(input: { id: \\\\\\\"40bac7c1-87ad-4ac0-b4a6-34ac592d8e77\\\\\\\" config: { slaId: \\\\\\\"7d40e858-b8ec-4096-8112-cab8eff1a4e2\\\\\\\" } }) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/","title":"VMware vSphere Virtual Machines","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/#description","title":"Description","text":"<p>For information on protection capabilities, see the Rubrik Security Cloud documentation</p>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/#retrieving-vsphere-virtual-machine-information","title":"Retrieving vSphere Virtual Machine Information","text":"<p>To list virtual machines known by Rubrik, you can perform the following. There are various filters to search by name, MOID, cluster, organization, and more.</p> GraphQLPowerShell SDKShell <pre><code>query {\n  vSphereVmNewConnection(\n    filter: [\n      # {field: NAME_EXACT_MATCH texts: \"foo\"}\n      {field: IS_RELIC texts: \"false\"},\n      {field: IS_REPLICATED texts: \"false\"}\n    ]\n  ) {\n    nodes {\n      name\n      id\n      cdmId\n      effectiveSlaDomain {\n        name\n        id\n      }\n      guestCredentialAuthorizationStatus\n      objectType\n      powerStatus\n      slaAssignment\n      snapshotConsistencyMandate\n      blueprintId\n      guestCredentialId\n      guestOsName\n      isActive\n      isArrayIntegrationPossible\n      isBlueprintChild\n      isRelic\n      numWorkloadDescendants\n      slaPauseStatus\n      agentStatus {\n        agentStatus\n      }\n      allOrgs {\n        id\n        name\n      }\n      cluster {\n        id\n        name\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscVmwareVm -Name \"Foo\" -Relic:$false -Replica:$false\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { vSphereVmNewConnection( filter: [ {field: IS_RELIC texts: \\\\\\\"false\\\\\\\"}, {field: IS_REPLICATED texts: \\\\\\\"false\\\\\\\"} ] ) { nodes { name id cdmId effectiveSlaDomain { name id } guestCredentialAuthorizationStatus objectType powerStatus slaAssignment snapshotConsistencyMandate blueprintId guestCredentialId guestOsName isActive isArrayIntegrationPossible isBlueprintChild isRelic numWorkloadDescendants slaPauseStatus agentStatus { agentStatus } allOrgs { id name } cluster { id name } } pageInfo { endCursor hasNextPage } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/#retrieving-vmware-vsphere-compute-clusters","title":"Retrieving VMware vSphere Compute Clusters","text":"<p>Querying for vSphere Compute Clusters is the easiest way to get the IDs for all recovery destinations.</p> GraphQLPowerShell SDKShell <pre><code>query {\n  vSphereComputeClusters(filter: {\n    field: NAME_EXACT_MATCH texts: \"foo\"\n    }) {\n    nodes {\n      name\n      id\n      logicalPath {\n        name\n        fid\n        objectType\n      }\n      descendantConnection(typeFilter: [VSphereHost,VSphereNetwork,VSphereDatastore,VSphereResourcePool]) {\n        nodes {\n          name\n          id\n          objectType\n        }\n      }\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery vSphereComputeClusters\n$query.var.filter = @(Get-RscType -Name Filter)\n$query.var.filter[0].Texts = \"example\"\n$query.var.filter[0].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::NAME_EXACT_MATCH\n$query.var.filter += Get-RscType -Name Filter\n$query.var.filter[1].field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_RELIC\n$query.var.filter[1].Texts = \"false\"\n$query.var.filter += Get-RscType -Name Filter\n$query.var.filter[2].Field = [RubrikSecurityCloud.Types.HierarchyFilterField]::IS_REPLICATED\n$query.var.filter[2].Texts = \"false\"\n$query.field.Nodes[0].descendantConnection = Get-RscType -Name VsphereComputeClusterDescendantTypeConnection\n$query.field.nodes[0].Vars.DescendantConnection.typeFilter = @(\n    [RubrikSecurityCloud.Types.HierarchyObjectTypeEnum]::VSPHERE_HOST\n    [RubrikSecurityCloud.Types.HierarchyObjectTypeEnum]::VSPHERE_NETWORK\n    [RubrikSecurityCloud.Types.HierarchyObjectTypeEnum]::VSPHERE_DATASTORE\n    [RubrikSecurityCloud.Types.HierarchyObjectTypeEnum]::VSPHERE_RESOURCE_POOL\n)\n$query.field.nodes[0].DescendantConnection.Nodes = @(\n    (Get-RscType -Name VsphereHost -InitialProperties name,id,objectType)\n    (Get-RscType -Name VsphereNetwork -InitialProperties name,id,objectType)\n    (Get-RscType -Name VsphereDatastore -InitialProperties name,id,objectType)\n    (Get-RscType -Name VsphereResourcePool -InitialProperties name,id,objectType)\n)\n\n$query.invoke().nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { vSphereComputeClusters(filter: { field: NAME_EXACT_MATCH texts: \\\\\\\"foo\\\\\\\" }) { nodes { name id logicalPath { name fid objectType } descendantConnection(typeFilter: [VSphereHost,VSphereNetwork,VSphereDatastore,VSphereResourcePool]) { nodes { name id objectType } } } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/#retrieving-vcenter-servers","title":"Retrieving vCenter Servers","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  vSphereVCenterConnection {\n    nodes {\n      objectType\n      slaAssignment\n      effectiveSlaDomain {\n        ... on GlobalSlaReply {\n          clusterUuid\n          description\n          id\n          isArchived\n          isDefault\n          isReadOnly\n          isRetentionLockedSla\n          name\n          stateVersion\n          version\n        }\n      }\n      id\n      isHotAddEnabledForOnPremVcenter\n      isStandaloneHost\n      isVmc\n      name\n      numWorkloadDescendants\n      slaPauseStatus\n      username\n      vcenterId\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n      hasPreviousPage\n      startCursor\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-RscQuery -GqlQuery vSphereVCenterConnection\n$query.invoke().nodes\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { vSphereVCenterConnection { nodes { objectType slaAssignment effectiveSlaDomain { ... on GlobalSlaReply { clusterUuid description id isArchived isDefault isReadOnly isRetentionLockedSla name stateVersion version } } id isHotAddEnabledForOnPremVcenter isStandaloneHost isVmc name numWorkloadDescendants slaPauseStatus username vcenterId } pageInfo { endCursor hasNextPage hasPreviousPage startCursor } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Job-Status/","title":"Job Status","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Job-Status/#description","title":"Description","text":"<p>Tasks such as on-demand backups and recoveries are asynchronous requests and return an AsynRequestStatus which can be monitored for progress and completion.</p> <p>To monitor the asynchronous request status for VMware vSphere, provide the ID of the cluster and the ID of the job. You can query the request status periodically until a terminal state (<code>SUCCEEDED</code>, <code>FAILED</code>, <code>CANCELLED</code>) is set given in the status field.</p>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Job-Status/#code-samples","title":"Code Samples","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  vSphereVMAsyncRequestStatus(\n    id: \"d4822e3d-c6e3-4bbe-950e-3e63c4770a78\"\n    clusterUuid: \"e4e7d2a2-c58b-4bc2-b11e-d6f9102e6fc8\"\n  ) {\n    id\n    status\n    startTime\n    progress\n    endTime\n    error {\n      message\n    }\n  }\n}\n</code></pre> <pre><code>$statusQuery = New-RscQuery -GqlQuery vSphereVMAsyncRequestStatus\n$statusQuery.var.id = $request.Id\n$statusQuery.var.clusterUuid = $my_vm.cluster.Id\n$status = Invoke-Rsc $statusQuery\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { vSphereVMAsyncRequestStatus( id: \\\\\\\"d4822e3d-c6e3-4bbe-950e-3e63c4770a78\\\\\\\" clusterUuid: \\\\\\\"e4e7d2a2-c58b-4bc2-b11e-d6f9102e6fc8\\\\\\\" ) { id status startTime progress endTime error { message } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/On-Demand-Backup/","title":"On Demand Backup","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/On-Demand-Backup/#vmware-vm-on-demand-backup","title":"VMware VM On-Demand Backup","text":"<p>To Perform an On-Demand Backup, you will need the Virtual Machine <code>ID</code> and SLA <code>ID</code>.</p> GraphQLPowerShell SDKShell <pre><code>mutation {\n  vsphereBulkOnDemandSnapshot(\n    input: {\n      config: {\n        vms: [\"EC6A4D79-8F6F-4105-9DD6-11F4875C7A8B\"]\n        slaId: \"def96ac0-be74-5e59-87e2-5af73b65ac1e\"\n        }\n      }\n    ) {\n    responses {\n      id\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-Rscmutation -GqlMutation vsphereBulkOnDemandSnapshot -FieldProfile FULL\n$query.var.input = Get-RscType -Name vsphereBulkOnDemandSnapshotInput\n$query.var.input.config = Get-RscType -Name BulkOnDemandSnapshotJobConfigInput\n$query.var.input.config.Vms = @($vm.id)\n$query.var.input.config.SlaId = $vm.EffectiveSlaDomain.Id\ninvoke-rsc $query\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { vsphereBulkOnDemandSnapshot( input: { config: { vms: [\\\\\\\"EC6A4D79-8F6F-4105-9DD6-11F4875C7A8B\\\\\\\"] slaId: \\\\\\\"def96ac0-be74-5e59-87e2-5af73b65ac1e\\\\\\\" } } ) { responses { id } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre> <p>To monitor the status of the on-demand backup, see job status</p>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Recovery/","title":"Recovery","text":"<p>Recoveries have many configuration options. The below examples demonstrate one way of configuring recoveries. For all possible recovery options refer to the API reference for the corresponding mutation.</p>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Recovery/#export","title":"Export","text":"<p>Creates a new virtual machine from a snapshot</p> GraphQLPowerShell SDKShell <pre><code>mutation {\n  vsphereVmExportSnapshotV3(\n    input: {\n    id: \"e776b2f3-8ea6-47aa-8ea4-ad0029cbc451\"\n    config: {\n      clusterId: \"82a56e23-96b2-460d-8020-a859dd285690\"\n      hostId: \"3bb4e1cc-fb27-426f-ad78-2d8a469c0a4a\"\n      storageLocationId: \"b0ec695f-d97d-44ba-882a-b4a17c4274a9\"\n      shouldRecoverTags: true\n    }\n    }) {\n    id\n  }\n}\n</code></pre> <pre><code>$vm = Get-RscVmwareVm -Name \"example\" -Relic:$false -Replica: $false\n$snapshot = $vm | Get-RscSnapshot -BeforeTime \"1900/01/01\" -AfterTime \"1900/01/01\" | Select-Object -First 1\n$vsphereClusterId = \"00000000-0000-0000-0000-000000000000\"\n$vsphereDatastoreId = \"00000000-0000-0000-0000-000000000000\"\n\n$query = New-RscMutation -GqlMutation vsphereVmExportSnapshotV3\n$query.Var.Input = Get-RscType -Name VsphereVmExportSnapshotV3Input -InitialProperties config.clusterId, `\n    config.hostId, `\n    config.storageLocationId, `\n    config.requiredRecoveryParameters.snapshotId\n\n$query.Var.Input.Id = $vm.id\n$query.Var.Input.config.clusterId = $vsphereClusterId\n$query.Var.Input.config.storageLocationId = $vsphereDatastoreId\n$query.Var.Input.config.requiredRecoveryParameters.snapshotId = $snapshot.Id\n\n$query.invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { vsphereVmExportSnapshotV3( input: { id: \\\\\\\"e776b2f3-8ea6-47aa-8ea4-ad0029cbc451\\\\\\\" config: { clusterId: \\\\\\\"82a56e23-96b2-460d-8020-a859dd285690\\\\\\\" hostId: \\\\\\\"3bb4e1cc-fb27-426f-ad78-2d8a469c0a4a\\\\\\\" storageLocationId: \\\\\\\"b0ec695f-d97d-44ba-882a-b4a17c4274a9\\\\\\\" shouldRecoverTags: true } }) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Recovery/#recover-files","title":"Recover Files","text":"<p>Restore files and folders from a snapshot</p> GraphQLPowerShell SDKShell <pre><code>mutation {\n  vsphereVmRecoverFilesNew(input: {\n    id: \"4d94175e-9fd4-5198-8c46-64c2ce3559a2\"\n    clusterUuid: \"6a271636-9392-4cba-90c5-bdbe227854ab\"\n    config: {\n      destObjectId: \"a8fd8809-bbdb-5a03-8663-1c1feb19791c\"\n      shouldUseAgent: true\n      restoreConfig: {\n        restorePathPair: {\n          path: \"C:\\\\foo\\\\bar\\\\example.txt\"\n          restorePath: \"C:\\\\foo\\\\bar\"\n        }\n      }\n    }\n  }) {\n    id\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { vsphereVmRecoverFilesNew(input: { id: \\\\\\\"4d94175e-9fd4-5198-8c46-64c2ce3559a2\\\\\\\" clusterUuid: \\\\\\\"6a271636-9392-4cba-90c5-bdbe227854ab\\\\\\\" config: { destObjectId: \\\\\\\"a8fd8809-bbdb-5a03-8663-1c1feb19791c\\\\\\\" shouldUseAgent: true restoreConfig: { restorePathPair: { path: \\\\\\\"C:\\\\foo\\\\bar\\\\example.txt\\\\\\\" restorePath: \\\\\\\"C:\\\\foo\\\\bar\\\\\\\" } } } }) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Recovery/#in-place-recovery","title":"In-Place Recovery","text":"<p>Update the source virtual machine with data from a snapshot using only changed blocks.</p> GraphQLPowerShell SDKShell <pre><code>mutation {\n  vsphereVmInitiateInPlaceRecovery(\n    input: {\n      id: \"d2d9ed9f-bb52-4ae8-a50e-9692e8bf8dff\"\n      config: {\n        requiredRecoveryParameters: {\n          snapshotId: \"072ab1cd-ea3f-4dd2-8b63-49f24a5f87a2\"\n        }\n      }\n    }\n    ) {\n    id\n    status\n    startTime\n    endTime\n    progress\n    error {\n      message\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { vsphereVmInitiateInPlaceRecovery( input: { id: \\\\\\\"d2d9ed9f-bb52-4ae8-a50e-9692e8bf8dff\\\\\\\" config: { requiredRecoveryParameters: { snapshotId: \\\\\\\"072ab1cd-ea3f-4dd2-8b63-49f24a5f87a2\\\\\\\" } } } ) { id status startTime endTime progress error { message } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Recovery/#live-mount","title":"Live Mount","text":"<p>Create a new virtual machine from a snapshot. The recovered virtual machine uses the Rubrik cluster as its datastore.</p> GraphQLPowerShell SDKShell <pre><code>mutation {\n  vsphereVmInitiateLiveMountV2(\n    input: {\n      id: \"a8fd8809-bbdb-5a03-8663-1c1feb19791c\"\n      config: {\n        clusterId: \"e90741cc-4360-54b8-9ad3-84db4727c62e\" \n        requiredRecoveryParameters: {\n          snapshotId: \"823cd454-7349-5a2c-a055-a936faf04c73\" \n            }, \n        mountExportSnapshotJobCommonOptionsV2: {\n          powerOn: true \n          disableNetwork: true \n          vmName: \"livemountExample\"\n        }\n      }\n    }\n  ) {\n    id\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { vsphereVmInitiateLiveMountV2( input: { id: \\\\\\\"a8fd8809-bbdb-5a03-8663-1c1feb19791c\\\\\\\" config: { clusterId: \\\\\\\"e90741cc-4360-54b8-9ad3-84db4727c62e\\\\\\\" requiredRecoveryParameters: { snapshotId: \\\\\\\"823cd454-7349-5a2c-a055-a936faf04c73\\\\\\\" }, mountExportSnapshotJobCommonOptionsV2: { powerOn: true disableNetwork: true vmName: \\\\\\\"livemountExample\\\\\\\" } } } ) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Recovery/#instant-recovery","title":"Instant Recovery","text":"<p>Replace the source virtual machine with a virtual machine recovered from a snapshot. The recovered virtual machine uses the Rubrik cluster as the datastore.</p> GraphQLPowerShell SDKShell <pre><code>mutation {\n  vsphereVmInitiateInstantRecoveryV2(\n    input: {\n      id: \"a8fd8809-bbdb-5a03-8663-1c1feb19791c\"\n      config: {\n        preserveMoid: true\n        shouldRecoverTags: true\n        clusterId: \"e90741cc-4360-54b8-9ad3-84db4727c62e\" \n        requiredRecoveryParameters: {\n          snapshotId: \"823cd454-7349-5a2c-a055-a936faf04c73\" \n            }, \n        mountExportSnapshotJobCommonOptionsV2: {\n          powerOn: true \n          keepMacAddresses: true\n          disableNetwork: false\n        }\n      }\n    }\n  ) {\n    id\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { vsphereVmInitiateInstantRecoveryV2( input: { id: \\\\\\\"a8fd8809-bbdb-5a03-8663-1c1feb19791c\\\\\\\" config: { preserveMoid: true shouldRecoverTags: true clusterId: \\\\\\\"e90741cc-4360-54b8-9ad3-84db4727c62e\\\\\\\" requiredRecoveryParameters: { snapshotId: \\\\\\\"823cd454-7349-5a2c-a055-a936faf04c73\\\\\\\" }, mountExportSnapshotJobCommonOptionsV2: { powerOn: true keepMacAddresses: true disableNetwork: false } } } ) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Recovery/#mount-virtual-disks","title":"Mount Virtual Disks","text":"<p>Create new virtual disks from a snapshot, using the Rubrik cluster as the datastore. Mount these disks to another virtual machine.</p> GraphQLPowerShell SDKShell <pre><code>mutation {\n  vsphereVmInitiateDiskMount(input: {\n    id: \"0c716834-1440-4c0e-bffd-c375b39309cb\" # snapshot ID\n    config: {\n      targetVmId: \"49ccc234-3fc5-4aab-9fec-eb8de56d29bf\" \n      vmdkIds: [\"b94a692e-2f07-44c6-8186-17e0075341d9\"] # removing this will mount all VMDKs\n    }\n  }) {\n    id\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation { vsphereVmInitiateDiskMount(input: { id: \\\\\\\"0c716834-1440-4c0e-bffd-c375b39309cb\\\\\\\" config: { targetVmId: \\\\\\\"49ccc234-3fc5-4aab-9fec-eb8de56d29bf\\\\\\\" vmdkIds: [\\\\\\\"b94a692e-2f07-44c6-8186-17e0075341d9\\\\\\\"] } }) { id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Script-Examples/Restore-VM-File/","title":"Restore File or Folder","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Script-Examples/Restore-VM-File/#description","title":"Description","text":"<p>This full working example performs a restore of the file or folder specified in the script.  </p>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/Data-Center/VMware-vSphere/Script-Examples/Restore-VM-File/#code","title":"Code","text":"<pre><code>$snapshot = Get-RscSnapshot -id \"123\"\n$SourceFilePath = \"C:\\\\foo\\\\bar.txt\"\n$DestinationFilePath = \"C:\\\\restore\"\n\n# Optional\n# $DestinationVm = Get-RscVmwareVm -id \"123\"\n\n$query = New-RscMutation -GqlMutation vsphereVmRecoverFilesNew -FieldProfile FULL\n\n$query.var.input = New-Object -Typename RubrikSecurityCloud.Types.VsphereVmRecoverFilesNewInput\n$query.var.input.Config = New-Object RubrikSecurityCloud.Types.RestoreFilesJobConfigInput\n$query.var.input.Config.RestoreConfig = New-Object -TypeName RubrikSecurityCloud.Types.VmRestorePathPairInput\n$query.var.input.Config.RestoreConfig[0].RestorePathPair = New-Object RubrikSecurityCloud.Types.RestorePathPairInput\n\n$query.var.input.id = $snapshot.id\n$query.var.input.clusterUuid = $snapshot.Cluster.id\n\nif ($DestinationVm) {\n    $query.var.input.config.destinationObjectId = $DestinationVm.id\n}\nelse {\n    $query.var.input.config.destinationObjectId = $snapshot.SnappableNew.Id\n}\n\n$query.var.input.config.restoreConfig[0].RestorePathPair.path = $SourceFilePath\n$query.var.input.config.restoreConfig[0].RestorePathPair.restorePath = $DestinationFilePath\n\n$result = Invoke-Rsc -Query $query\n$result\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/","title":"SLA Domains","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/#what-are-sla-domains","title":"What are SLA Domains?","text":"<p>Rubrik SLA Domains are data protection policies that define:</p> <ul> <li>The object types for which the policy can be applied</li> <li>The frequency of the backups</li> <li>The retention of the backups</li> <li>The replication destination of the backups</li> <li>The archival location of the backups</li> <li>Object specific settings based on the type (e.g. MSSQL Database)</li> </ul>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/#retrieve-all-slas","title":"Retrieve All SLAs","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  slaDomains {\n    nodes {\n      id\n      name\n      ... on GlobalSlaReply {\n        isDefault\n        description\n        snapshotSchedule {\n          minute {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          hourly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          daily {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          weekly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfWeek\n          }\n          monthly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfMonth\n          }\n          quarterly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfQuarter\n            quarterStartMonth\n          }\n          yearly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfYear\n            yearStartMonth\n          }\n        }\n        archivalSpecs {\n          threshold\n          thresholdUnit\n          storageSetting {\n            id\n            name\n            groupType\n          }\n          archivalTieringSpec {\n            coldStorageClass\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n        }\n        backupWindows {\n          durationInHours\n          startTimeAttributes {\n            hour\n            minute\n          }\n        }\n        firstFullBackupWindows {\n          durationInHours\n          startTimeAttributes {\n            dayOfWeek {\n              day\n            }\n            hour\n            minute\n          }\n        }\n        replicationSpecsV2 {\n          replicationLocalRetentionDuration {\n            duration\n            unit\n          }\n          cascadingArchivalSpecs {\n            archivalTieringSpec {\n              coldStorageClass\n              shouldTierExistingSnapshots\n              minAccessibleDurationInSeconds\n              isInstantTieringEnabled\n            }\n            archivalLocation {\n              id\n              name\n              targetType\n              ... on RubrikManagedAwsTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedNfsTarget {\n                host\n              }\n              ... on CdmManagedAwsTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on CdmManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n            }\n            frequency\n            archivalThreshold {\n              duration\n              unit\n            }\n          }\n          retentionDuration {\n            duration\n            unit\n          }\n          cluster {\n            id\n            name\n          }\n          targetMapping {\n            id\n            name\n          }\n          awsTarget {\n            accountId\n            accountName\n            region\n          }\n          azureTarget {\n            region\n          }\n        }\n        localRetentionLimit {\n          duration\n          unit\n        }\n        objectSpecificConfigs {\n          sapHanaConfig {\n            incrementalFrequency {\n              duration\n              unit\n            }\n            differentialFrequency {\n              duration\n              unit\n            }\n            logRetention {\n              duration\n              unit\n            }\n          }\n          awsRdsConfig {\n            logRetention {\n              duration\n            }\n          }\n          vmwareVmConfig {\n            logRetentionSeconds\n          }\n        }\n        clusterToSyncStatusMap {\n          clusterUuid\n          slaSyncStatus\n        }\n        objectTypes\n        upgradeInfo {\n          eligibility {\n            isEligible\n            ineligibilityReason\n          }\n          latestUpgrade {\n            status\n            msg\n          }\n        }\n        allOrgsHavingAccess {\n          id\n          name\n        }\n        ownerOrg {\n          id\n          name\n        }\n        isRetentionLockedSla\n      }\n      ... on ClusterSlaDomain {\n        cdmId\n        name\n        cluster {\n          name\n          version\n        }\n        snapshotSchedule {\n          minute {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          hourly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          daily {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          weekly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfWeek\n          }\n          monthly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfMonth\n          }\n          quarterly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfQuarter\n            quarterStartMonth\n          }\n          yearly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfYear\n            yearStartMonth\n          }\n        }\n        backupWindows {\n          durationInHours\n          startTimeAttributes {\n            hour\n            minute\n          }\n        }\n        firstFullBackupWindows {\n          durationInHours\n          startTimeAttributes {\n            dayOfWeek {\n              day\n            }\n            hour\n            minute\n          }\n        }\n        archivalSpec {\n          threshold\n          thresholdUnit\n          archivalLocationName\n          archivalLocationId\n          archivalTieringSpec {\n            coldStorageClass\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n        }\n        replicationSpecsV2 {\n          retentionDuration {\n            duration\n            unit\n          }\n          cluster {\n            id\n            name\n          }\n          targetMapping {\n            id\n            name\n          }\n          awsTarget {\n            accountId\n            accountName\n            region\n          }\n          azureTarget {\n            region\n          }\n        }\n        localRetentionLimit {\n          duration\n          unit\n        }\n        upgradeInfo {\n          eligibility {\n            isEligible\n            ineligibilityReason\n          }\n          latestUpgrade {\n            status\n            msg\n          }\n        }\n        ownerOrg {\n          id\n          name\n        }\n        isRetentionLockedSla\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscSla\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { slaDomains { nodes { id name ... on GlobalSlaReply { isDefault description snapshotSchedule { minute { basicSchedule { frequency retention retentionUnit } } hourly { basicSchedule { frequency retention retentionUnit } } daily { basicSchedule { frequency retention retentionUnit } } weekly { basicSchedule { frequency retention retentionUnit } dayOfWeek } monthly { basicSchedule { frequency retention retentionUnit } dayOfMonth } quarterly { basicSchedule { frequency retention retentionUnit } dayOfQuarter quarterStartMonth } yearly { basicSchedule { frequency retention retentionUnit } dayOfYear yearStartMonth } } archivalSpecs { threshold thresholdUnit storageSetting { id name groupType } archivalTieringSpec { coldStorageClass minAccessibleDurationInSeconds isInstantTieringEnabled } } backupWindows { durationInHours startTimeAttributes { hour minute } } firstFullBackupWindows { durationInHours startTimeAttributes { dayOfWeek { day } hour minute } } replicationSpecsV2 { replicationLocalRetentionDuration { duration unit } cascadingArchivalSpecs { archivalTieringSpec { coldStorageClass shouldTierExistingSnapshots minAccessibleDurationInSeconds isInstantTieringEnabled } archivalLocation { id name targetType ... on RubrikManagedAwsTarget { immutabilitySettings { lockDurationDays } } ... on RubrikManagedAzureTarget { immutabilitySettings { lockDurationDays } } ... on RubrikManagedNfsTarget { host } ... on CdmManagedAwsTarget { immutabilitySettings { lockDurationDays } } ... on CdmManagedAzureTarget { immutabilitySettings { lockDurationDays } } } frequency archivalThreshold { duration unit } } retentionDuration { duration unit } cluster { id name } targetMapping { id name } awsTarget { accountId accountName region } azureTarget { region } } localRetentionLimit { duration unit } objectSpecificConfigs { sapHanaConfig { incrementalFrequency { duration unit } differentialFrequency { duration unit } logRetention { duration unit } } awsRdsConfig { logRetention { duration } } vmwareVmConfig { logRetentionSeconds } } clusterToSyncStatusMap { clusterUuid slaSyncStatus } objectTypes upgradeInfo { eligibility { isEligible ineligibilityReason } latestUpgrade { status msg } } allOrgsHavingAccess { id name } ownerOrg { id name } isRetentionLockedSla } ... on ClusterSlaDomain { cdmId name cluster { name version } snapshotSchedule { minute { basicSchedule { frequency retention retentionUnit } } hourly { basicSchedule { frequency retention retentionUnit } } daily { basicSchedule { frequency retention retentionUnit } } weekly { basicSchedule { frequency retention retentionUnit } dayOfWeek } monthly { basicSchedule { frequency retention retentionUnit } dayOfMonth } quarterly { basicSchedule { frequency retention retentionUnit } dayOfQuarter quarterStartMonth } yearly { basicSchedule { frequency retention retentionUnit } dayOfYear yearStartMonth } } backupWindows { durationInHours startTimeAttributes { hour minute } } firstFullBackupWindows { durationInHours startTimeAttributes { dayOfWeek { day } hour minute } } archivalSpec { threshold thresholdUnit archivalLocationName archivalLocationId archivalTieringSpec { coldStorageClass minAccessibleDurationInSeconds isInstantTieringEnabled } } replicationSpecsV2 { retentionDuration { duration unit } cluster { id name } targetMapping { id name } awsTarget { accountId accountName region } azureTarget { region } } localRetentionLimit { duration unit } upgradeInfo { eligibility { isEligible ineligibilityReason } latestUpgrade { status msg } } ownerOrg { id name } isRetentionLockedSla } } pageInfo { endCursor hasNextPage } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/#retrieve-an-sla-by-name","title":"Retrieve an SLA by Name","text":"<p>Generally, the name of the SLA may be known, but not the ID. The <code>slaDomains</code> query allows filtering on several fields, including <code>NAME</code>.</p> GraphQLPowerShell SDKShell <pre><code>query {\n  slaDomains(filter: {field: NAME text: \"foo\"}) {\n    nodes {\n      id\n      name\n      ... on GlobalSlaReply {\n        isDefault\n        description\n        snapshotSchedule {\n          minute {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          hourly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          daily {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          weekly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfWeek\n          }\n          monthly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfMonth\n          }\n          quarterly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfQuarter\n            quarterStartMonth\n          }\n          yearly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfYear\n            yearStartMonth\n          }\n        }\n        archivalSpecs {\n          threshold\n          thresholdUnit\n          storageSetting {\n            id\n            name\n            groupType\n          }\n          archivalTieringSpec {\n            coldStorageClass\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n        }\n        backupWindows {\n          durationInHours\n          startTimeAttributes {\n            hour\n            minute\n          }\n        }\n        firstFullBackupWindows {\n          durationInHours\n          startTimeAttributes {\n            dayOfWeek {\n              day\n            }\n            hour\n            minute\n          }\n        }\n        replicationSpecsV2 {\n          replicationLocalRetentionDuration {\n            duration\n            unit\n          }\n          cascadingArchivalSpecs {\n            archivalTieringSpec {\n              coldStorageClass\n              shouldTierExistingSnapshots\n              minAccessibleDurationInSeconds\n              isInstantTieringEnabled\n            }\n            archivalLocation {\n              id\n              name\n              targetType\n              ... on RubrikManagedAwsTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedNfsTarget {\n                host\n              }\n              ... on CdmManagedAwsTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on CdmManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n            }\n            frequency\n            archivalThreshold {\n              duration\n              unit\n            }\n          }\n          retentionDuration {\n            duration\n            unit\n          }\n          cluster {\n            id\n            name\n          }\n          targetMapping {\n            id\n            name\n          }\n          awsTarget {\n            accountId\n            accountName\n            region\n          }\n          azureTarget {\n            region\n          }\n        }\n        localRetentionLimit {\n          duration\n          unit\n        }\n        objectSpecificConfigs {\n          sapHanaConfig {\n            incrementalFrequency {\n              duration\n              unit\n            }\n            differentialFrequency {\n              duration\n              unit\n            }\n            logRetention {\n              duration\n              unit\n            }\n          }\n          awsRdsConfig {\n            logRetention {\n              duration\n            }\n          }\n          vmwareVmConfig {\n            logRetentionSeconds\n          }\n        }\n        clusterToSyncStatusMap {\n          clusterUuid\n          slaSyncStatus\n        }\n        objectTypes\n        upgradeInfo {\n          eligibility {\n            isEligible\n            ineligibilityReason\n          }\n          latestUpgrade {\n            status\n            msg\n          }\n        }\n        allOrgsHavingAccess {\n          id\n          name\n        }\n        ownerOrg {\n          id\n          name\n        }\n        isRetentionLockedSla\n      }\n      ... on ClusterSlaDomain {\n        cdmId\n        name\n        cluster {\n          name\n          version\n        }\n        snapshotSchedule {\n          minute {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          hourly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          daily {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          weekly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfWeek\n          }\n          monthly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfMonth\n          }\n          quarterly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfQuarter\n            quarterStartMonth\n          }\n          yearly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfYear\n            yearStartMonth\n          }\n        }\n        backupWindows {\n          durationInHours\n          startTimeAttributes {\n            hour\n            minute\n          }\n        }\n        firstFullBackupWindows {\n          durationInHours\n          startTimeAttributes {\n            dayOfWeek {\n              day\n            }\n            hour\n            minute\n          }\n        }\n        archivalSpec {\n          threshold\n          thresholdUnit\n          archivalLocationName\n          archivalLocationId\n          archivalTieringSpec {\n            coldStorageClass\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n        }\n        replicationSpecsV2 {\n          retentionDuration {\n            duration\n            unit\n          }\n          cluster {\n            id\n            name\n          }\n          targetMapping {\n            id\n            name\n          }\n          awsTarget {\n            accountId\n            accountName\n            region\n          }\n          azureTarget {\n            region\n          }\n        }\n        localRetentionLimit {\n          duration\n          unit\n        }\n        upgradeInfo {\n          eligibility {\n            isEligible\n            ineligibilityReason\n          }\n          latestUpgrade {\n            status\n            msg\n          }\n        }\n        ownerOrg {\n          id\n          name\n        }\n        isRetentionLockedSla\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscSla -Name \"Foo\"\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { slaDomains(filter: {field: NAME text: \\\\\\\"foo\\\\\\\"}) { nodes { id name ... on GlobalSlaReply { isDefault description snapshotSchedule { minute { basicSchedule { frequency retention retentionUnit } } hourly { basicSchedule { frequency retention retentionUnit } } daily { basicSchedule { frequency retention retentionUnit } } weekly { basicSchedule { frequency retention retentionUnit } dayOfWeek } monthly { basicSchedule { frequency retention retentionUnit } dayOfMonth } quarterly { basicSchedule { frequency retention retentionUnit } dayOfQuarter quarterStartMonth } yearly { basicSchedule { frequency retention retentionUnit } dayOfYear yearStartMonth } } archivalSpecs { threshold thresholdUnit storageSetting { id name groupType } archivalTieringSpec { coldStorageClass minAccessibleDurationInSeconds isInstantTieringEnabled } } backupWindows { durationInHours startTimeAttributes { hour minute } } firstFullBackupWindows { durationInHours startTimeAttributes { dayOfWeek { day } hour minute } } replicationSpecsV2 { replicationLocalRetentionDuration { duration unit } cascadingArchivalSpecs { archivalTieringSpec { coldStorageClass shouldTierExistingSnapshots minAccessibleDurationInSeconds isInstantTieringEnabled } archivalLocation { id name targetType ... on RubrikManagedAwsTarget { immutabilitySettings { lockDurationDays } } ... on RubrikManagedAzureTarget { immutabilitySettings { lockDurationDays } } ... on RubrikManagedNfsTarget { host } ... on CdmManagedAwsTarget { immutabilitySettings { lockDurationDays } } ... on CdmManagedAzureTarget { immutabilitySettings { lockDurationDays } } } frequency archivalThreshold { duration unit } } retentionDuration { duration unit } cluster { id name } targetMapping { id name } awsTarget { accountId accountName region } azureTarget { region } } localRetentionLimit { duration unit } objectSpecificConfigs { sapHanaConfig { incrementalFrequency { duration unit } differentialFrequency { duration unit } logRetention { duration unit } } awsRdsConfig { logRetention { duration } } vmwareVmConfig { logRetentionSeconds } } clusterToSyncStatusMap { clusterUuid slaSyncStatus } objectTypes upgradeInfo { eligibility { isEligible ineligibilityReason } latestUpgrade { status msg } } allOrgsHavingAccess { id name } ownerOrg { id name } isRetentionLockedSla } ... on ClusterSlaDomain { cdmId name cluster { name version } snapshotSchedule { minute { basicSchedule { frequency retention retentionUnit } } hourly { basicSchedule { frequency retention retentionUnit } } daily { basicSchedule { frequency retention retentionUnit } } weekly { basicSchedule { frequency retention retentionUnit } dayOfWeek } monthly { basicSchedule { frequency retention retentionUnit } dayOfMonth } quarterly { basicSchedule { frequency retention retentionUnit } dayOfQuarter quarterStartMonth } yearly { basicSchedule { frequency retention retentionUnit } dayOfYear yearStartMonth } } backupWindows { durationInHours startTimeAttributes { hour minute } } firstFullBackupWindows { durationInHours startTimeAttributes { dayOfWeek { day } hour minute } } archivalSpec { threshold thresholdUnit archivalLocationName archivalLocationId archivalTieringSpec { coldStorageClass minAccessibleDurationInSeconds isInstantTieringEnabled } } replicationSpecsV2 { retentionDuration { duration unit } cluster { id name } targetMapping { id name } awsTarget { accountId accountName region } azureTarget { region } } localRetentionLimit { duration unit } upgradeInfo { eligibility { isEligible ineligibilityReason } latestUpgrade { status msg } } ownerOrg { id name } isRetentionLockedSla } } pageInfo { endCursor hasNextPage } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre> <p>Note</p> <p>Name filtering in <code>slaDomains</code> is partial matching. If you provide the name \"bronze\", it will also return any other SLA domain with that name (e.g. \"super-bronze\").</p>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/#retrieve-an-individual-sla","title":"Retrieve an Individual SLA","text":"GraphQLPowerShell SDKShell <pre><code>query {\n  slaDomain(id: \"0CC22D1B-B761-4EF3-BC5B-82706D97FB05\") {\n    id\n    name\n    ... on GlobalSlaReply {\n      isDefault\n      description\n      snapshotSchedule {\n        minute {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n        }\n        hourly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n        }\n        daily {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n        }\n        weekly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n          dayOfWeek\n        }\n        monthly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n          dayOfMonth\n        }\n        quarterly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n          dayOfQuarter\n          quarterStartMonth\n        }\n        yearly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n          dayOfYear\n          yearStartMonth\n        }\n      }\n      archivalSpecs {\n        threshold\n        thresholdUnit\n        archivalLocationToClusterMapping {\n          cluster {\n            id\n            name\n          }\n          location {\n            id\n            name\n            targetType\n          }\n        }\n        storageSetting {\n          id\n          name\n          groupType\n        }\n        archivalTieringSpec {\n          coldStorageClass\n          minAccessibleDurationInSeconds\n          isInstantTieringEnabled\n        }\n        frequencies\n      }\n      archivalLocationsUpgradeInfo {\n        locationId\n        upgradeStatus\n        upgradeUnsupportedReason\n      }\n      backupWindows {\n        durationInHours\n        startTimeAttributes {\n          hour\n          minute\n        }\n      }\n      firstFullBackupWindows {\n        durationInHours\n        startTimeAttributes {\n          dayOfWeek {\n            day\n          }\n          hour\n          minute\n        }\n      }\n      replicationSpecsV2 {\n        replicationPairs {\n          sourceCluster {\n            id\n            name\n          }\n          targetCluster {\n            id\n            name\n            version\n            clusterInfo {\n              ... on LocalClusterInfo {\n                isIsolated: isAirGapped\n                isConnected\n              }\n              ... on CrossAccountClusterInfo {\n                originAccount\n                isConnected\n              }\n            }\n          }\n        }\n        replicationLocalRetentionDuration {\n          duration\n          unit\n        }\n        cascadingArchivalSpecs {\n          archivalTieringSpec {\n            coldStorageClass\n            shouldTierExistingSnapshots\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n          archivalLocationToClusterMapping {\n            cluster {\n              id\n              name\n              version\n              clusterInfo {\n                ... on LocalClusterInfo {\n                  isIsolated: isAirGapped\n                  isConnected\n                }\n                ... on CrossAccountClusterInfo {\n                  originAccount\n                  isConnected\n                }\n              }\n            }\n            location {\n              id\n              name\n              targetType\n              ... on RubrikManagedAwsTarget {\n                storageClass\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on CdmManagedAwsTarget {\n                storageClass\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on CdmManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedRcsTarget {\n                immutabilityPeriodDays\n                syncStatus\n                tier\n              }\n              ... on RubrikManagedS3CompatibleTarget {\n                immutabilitySetting {\n                  bucketLockDurationDays\n                }\n              }\n            }\n          }\n          archivalLocation {\n            id\n            name\n            targetType\n            ... on RubrikManagedAwsTarget {\n              storageClass\n              immutabilitySettings {\n                lockDurationDays\n              }\n            }\n            ... on RubrikManagedAzureTarget {\n              immutabilitySettings {\n                lockDurationDays\n              }\n            }\n            ... on CdmManagedAwsTarget {\n              storageClass\n              immutabilitySettings {\n                lockDurationDays\n              }\n            }\n            ... on CdmManagedAzureTarget {\n              immutabilitySettings {\n                lockDurationDays\n              }\n            }\n            ... on RubrikManagedRcsTarget {\n              immutabilityPeriodDays\n              syncStatus\n              tier\n            }\n            ... on RubrikManagedS3CompatibleTarget {\n              immutabilitySetting {\n                bucketLockDurationDays\n              }\n            }\n          }\n          frequency\n          archivalThreshold {\n            duration\n            unit\n          }\n        }\n        retentionDuration {\n          duration\n          unit\n        }\n        cluster {\n          id\n          name\n          version\n          clusterInfo {\n            ... on LocalClusterInfo {\n              isIsolated: isAirGapped\n              isConnected\n            }\n            ... on CrossAccountClusterInfo {\n              originAccount\n              isConnected\n            }\n          }\n        }\n        targetMapping {\n          id\n          name\n          targets {\n            id\n            name\n            cluster {\n              id\n              name\n            }\n          }\n        }\n        awsTarget {\n          accountId\n          accountName\n          region\n        }\n        azureTarget {\n          region\n        }\n      }\n      localRetentionLimit {\n        duration\n        unit\n      }\n      objectSpecificConfigs {\n        awsRdsConfig {\n          logRetention {\n            duration\n            unit\n          }\n        }\n        sapHanaConfig {\n          incrementalFrequency {\n            duration\n            unit\n          }\n          differentialFrequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n        }\n        db2Config {\n          incrementalFrequency {\n            duration\n            unit\n          }\n          differentialFrequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n        }\n        mongoConfig {\n          logFrequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n        }\n        mssqlConfig {\n          frequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n        }\n        oracleConfig {\n          frequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n          hostLogRetention {\n            duration\n            unit\n          }\n        }\n        vmwareVmConfig {\n          logRetentionSeconds\n        }\n        azureSqlDatabaseDbConfig {\n          logRetentionInDays\n        }\n        azureSqlManagedInstanceDbConfig {\n          logRetentionInDays\n        }\n      }\n      clusterToSyncStatusMap {\n        clusterUuid\n        slaSyncStatus\n      }\n      objectTypes\n      upgradeInfo {\n        eligibility {\n          isEligible\n          ineligibilityReason\n        }\n        latestUpgrade {\n          status\n          msg\n        }\n      }\n      allOrgsHavingAccess {\n        id\n        name\n      }\n      isRetentionLockedSla\n      retentionLockMode\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscSla -Id \"0CC22D1B-B761-4EF3-BC5B-82706D97FB05\"\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"query { slaDomain(id: \\\\\\\"0CC22D1B-B761-4EF3-BC5B-82706D97FB05\\\\\\\") { id name ... on GlobalSlaReply { isDefault description snapshotSchedule { minute { basicSchedule { frequency retention retentionUnit } } hourly { basicSchedule { frequency retention retentionUnit } } daily { basicSchedule { frequency retention retentionUnit } } weekly { basicSchedule { frequency retention retentionUnit } dayOfWeek } monthly { basicSchedule { frequency retention retentionUnit } dayOfMonth } quarterly { basicSchedule { frequency retention retentionUnit } dayOfQuarter quarterStartMonth } yearly { basicSchedule { frequency retention retentionUnit } dayOfYear yearStartMonth } } archivalSpecs { threshold thresholdUnit archivalLocationToClusterMapping { cluster { id name } location { id name targetType } } storageSetting { id name groupType } archivalTieringSpec { coldStorageClass minAccessibleDurationInSeconds isInstantTieringEnabled } frequencies } archivalLocationsUpgradeInfo { locationId upgradeStatus upgradeUnsupportedReason } backupWindows { durationInHours startTimeAttributes { hour minute } } firstFullBackupWindows { durationInHours startTimeAttributes { dayOfWeek { day } hour minute } } replicationSpecsV2 { replicationPairs { sourceCluster { id name } targetCluster { id name version clusterInfo { ... on LocalClusterInfo { isIsolated: isAirGapped isConnected } ... on CrossAccountClusterInfo { originAccount isConnected } } } } replicationLocalRetentionDuration { duration unit } cascadingArchivalSpecs { archivalTieringSpec { coldStorageClass shouldTierExistingSnapshots minAccessibleDurationInSeconds isInstantTieringEnabled } archivalLocationToClusterMapping { cluster { id name version clusterInfo { ... on LocalClusterInfo { isIsolated: isAirGapped isConnected } ... on CrossAccountClusterInfo { originAccount isConnected } } } location { id name targetType ... on RubrikManagedAwsTarget { storageClass immutabilitySettings { lockDurationDays } } ... on RubrikManagedAzureTarget { immutabilitySettings { lockDurationDays } } ... on CdmManagedAwsTarget { storageClass immutabilitySettings { lockDurationDays } } ... on CdmManagedAzureTarget { immutabilitySettings { lockDurationDays } } ... on RubrikManagedRcsTarget { immutabilityPeriodDays syncStatus tier } ... on RubrikManagedS3CompatibleTarget { immutabilitySetting { bucketLockDurationDays } } } } archivalLocation { id name targetType ... on RubrikManagedAwsTarget { storageClass immutabilitySettings { lockDurationDays } } ... on RubrikManagedAzureTarget { immutabilitySettings { lockDurationDays } } ... on CdmManagedAwsTarget { storageClass immutabilitySettings { lockDurationDays } } ... on CdmManagedAzureTarget { immutabilitySettings { lockDurationDays } } ... on RubrikManagedRcsTarget { immutabilityPeriodDays syncStatus tier } ... on RubrikManagedS3CompatibleTarget { immutabilitySetting { bucketLockDurationDays } } } frequency archivalThreshold { duration unit } } retentionDuration { duration unit } cluster { id name version clusterInfo { ... on LocalClusterInfo { isIsolated: isAirGapped isConnected } ... on CrossAccountClusterInfo { originAccount isConnected } } } targetMapping { id name targets { id name cluster { id name } } } awsTarget { accountId accountName region } azureTarget { region } } localRetentionLimit { duration unit } objectSpecificConfigs { awsRdsConfig { logRetention { duration unit } } sapHanaConfig { incrementalFrequency { duration unit } differentialFrequency { duration unit } logRetention { duration unit } } db2Config { incrementalFrequency { duration unit } differentialFrequency { duration unit } logRetention { duration unit } } mongoConfig { logFrequency { duration unit } logRetention { duration unit } } mssqlConfig { frequency { duration unit } logRetention { duration unit } } oracleConfig { frequency { duration unit } logRetention { duration unit } hostLogRetention { duration unit } } vmwareVmConfig { logRetentionSeconds } azureSqlDatabaseDbConfig { logRetentionInDays } azureSqlManagedInstanceDbConfig { logRetentionInDays } } clusterToSyncStatusMap { clusterUuid slaSyncStatus } objectTypes upgradeInfo { eligibility { isEligible ineligibilityReason } latestUpgrade { status msg } } allOrgsHavingAccess { id name } isRetentionLockedSla retentionLockMode } } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/Assignment/","title":"Assignment","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/Assignment/#assigning-an-sla-to-a-workload","title":"Assigning an SLA to a workload","text":"GraphQLPowerShell SDKShell <pre><code>mutation assignSla {\n  assignSla(input: {\n    slaDomainAssignType: protectWithSlaId\n    slaOptionalId: \"CC4AFC96-A8DD-401F-A618-1C03742D21AA\"\n    objectIds: [\"DEF42837-C14D-45E2-8F11-F1BE9ED50F4E\"]\n    # shouldApplyToExistingSnapshots: true # optional. if you want existing snaps applied to new SLA assignment\n    # existingSnapshotRetention: RETAIN_SNAPSHOTS # optional. What do you want to do with the old snaps if you change to DONOTPROTECT?\n  }) {\n    success\n  }\n}\n</code></pre> <pre><code>$vm = Get-RscVmwareVm -Name \"foo\"\n$sla = Get-RscSla -Name \"Bar\"\n$vm | Protect-RscWorkload -Sla $sla\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation assignSla { assignSla(input: { slaDomainAssignType: protectWithSlaId slaOptionalId: \\\\\\\"CC4AFC96-A8DD-401F-A618-1C03742D21AA\\\\\\\" objectIds: [\\\\\\\"DEF42837-C14D-45E2-8F11-F1BE9ED50F4E\\\\\\\"] }) { success } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/Assignment/#assigning-an-sla-to-a-snapshot","title":"Assigning an SLA to a snapshot","text":"GraphQLPowerShell SDKShell <pre><code>mutation AssignSlaToSnapshot {\n  assignRetentionSLAToSnapshots(\n    snapshotFids: [\"b77f85ae-62d1-435b-9abf-2a1d97c6802f\"]\n    globalSlaAssignType: protectWithSlaId\n    globalSlaOptionalFid: \"5b6e44ca-9a0d-42e8-a6ba-952159c69bab\"\n  ) {\n    success\n  }\n}\n</code></pre> <pre><code>$query = New-RscMutation -GqlMutation assignRetentionSLAToSnapshots\n$query.Var.snapshotFids = @(\"124a67b6-be5a-5181-9447-fac686bc9949\")\n$query.Var.globalSlaAssignType = [RubrikSecurityCloud.Types.SlaAssignTypeEnum]::PROTECT_WITH_SLA_ID\n$query.Var.globalSlaOptionalFid = \"5b6e44ca-9a0d-42e8-a6ba-952159c69bab\"\n$query.invoke()\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation AssignSlaToSnapshot { assignRetentionSLAToSnapshots( snapshotFids: [\\\\\\\"b77f85ae-62d1-435b-9abf-2a1d97c6802f\\\\\\\"] globalSlaAssignType: protectWithSlaId globalSlaOptionalFid: \\\\\\\"5b6e44ca-9a0d-42e8-a6ba-952159c69bab\\\\\\\" ) { success } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/Creating-And-Modifying/","title":"Creating And Modifying","text":""},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/Creating-And-Modifying/#creating-an-sla-domain","title":"Creating an SLA Domain","text":"<p>SLA domains can range from simple to very complex policy definitions.</p> GraphQLPowerShell SDKShell <pre><code>mutation createSla {\n  createGlobalSla(input: {\n    name: \"foo\"\n    objectTypes: [VSPHERE_OBJECT_TYPE MSSQL_OBJECT_TYPE]\n    snapshotSchedule: {\n      daily: {\n        basicSchedule: {\n          frequency: 1\n          retention: 7\n          retentionUnit: DAYS\n        }\n      }\n    }\n  }) {\n    name\n    id\n  }\n}\n</code></pre> <pre><code>$dailySchedule = New-RscSlaSnapshotSchedule -Type daily -Frequency 1 -Retention 2 -RetentionUnit DAYS\nNew-RscSla -name \"foo\" -DailySchedule $dailySchedule -ObjectType VSPHERE_OBJECT_TYPE,MSSQL_OBJECT_TYPE\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation createSla { createGlobalSla(input: { name: \\\\\\\"foo\\\\\\\" objectTypes: [VSPHERE_OBJECT_TYPE MSSQL_OBJECT_TYPE] snapshotSchedule: { daily: { basicSchedule: { frequency: 1 retention: 7 retentionUnit: DAYS } } } }) { name id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/Data-Protection/SLA-Domains/Creating-And-Modifying/#modifying-an-sla-domain","title":"Modifying an SLA Domain","text":"<p>Modification of an SLA requires the entire SLA object to be passed in to the mutation. If every property is not passed in, the SLA update will either fail, or will be updated with only the portions of the object that were passed in to the update arguments.</p> GraphQLPowerShell SDKShell <pre><code>mutation createSla {\n  updateGlobalSla(input: {\n    id: \"2794261b-0e3b-4eab-8a32-f1ce4579e8c7\"\n    name: \"foo\"\n    objectTypes: [VSPHERE_OBJECT_TYPE MSSQL_OBJECT_TYPE]\n    description: \"This is my foo SLA Domain\"\n    snapshotSchedule: {\n      daily: {\n        basicSchedule: {\n          frequency: 1\n          retention: 7\n          retentionUnit: DAYS\n        }\n      }\n    }\n  }) {\n    name\n    id\n  }\n}\n</code></pre> <pre><code>$sla = Get-RscSla \"foo\"\n$sla | Set-RscSla -Description \"This is my foo SLA\"\n</code></pre> <pre><code>#!/bin/bash\n\n# RSC_TOKEN=\"YOUR_RSC_ACCESS_TOKEN\"\nquery=\"mutation createSla { updateGlobalSla(input: { id: \\\\\\\"2794261b-0e3b-4eab-8a32-f1ce4579e8c7\\\\\\\" name: \\\\\\\"foo\\\\\\\" objectTypes: [VSPHERE_OBJECT_TYPE MSSQL_OBJECT_TYPE] description: \\\\\\\"This is my foo SLA Domain\\\\\\\" snapshotSchedule: { daily: { basicSchedule: { frequency: 1 retention: 7 retentionUnit: DAYS } } } }) { name id } }\"\n\n# Execute the GraphQL query with curl\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $RSC_TOKEN\" \\\n  -d \"{\\\"query\\\": \\\"$query\\\"}\" \\\n  https://example.my.rubrik.com/api/graphql\n</code></pre>"},{"location":"SDKs-and-Tools/","title":"SDKs and Tools","text":"<ul> <li> <p> Rubrik Security Cloud PowerShell Module</p> <ul> <li>Fully Supported by Rubrik</li> <li>Easy to use cmdlets for many common tasks</li> <li>Full API accessibility through low-level cmdlets</li> </ul> <p> Get Started</p> <p> PowerShell Gallery</p> <p> Github Project</p> </li> <li> <p> Rubrik Security Cloud Postman Collection</p> <ul> <li>Contains all samples from the Rubrik Developer Guide</li> <li>Imports directly into Postman</li> <li>Simply add credentials and instance to collection variables</li> </ul> <p> Download</p> </li> <li> <p> Rubrik Security Cloud Terraform Provider</p> <ul> <li>Simplifies large scale configuration of cloud accounts in Rubrik</li> <li>Automates complex deployment of Rubrik cloud infrastructure</li> </ul> <p> Terraform Registry</p> <p> Github Project</p> </li> </ul>"},{"location":"SDKs-and-Tools/PowerShell/","title":"Rubrik Security Cloud PowerShell Module","text":"<p>The Rubrik Security Cloud PowerShell module extends your PowerShell console to give you full access to the Rubrik Security Cloud API.</p> <ul> <li>Easy to use cmdlets provide maximum efficiency to perform tasks.</li> <li>Advanced cmdlets facilitate advanced access to the Rubrik Security Cloud API, opening up the entire RSC API toautomation through PowerShell.</li> <li>Integrated Help is provided for each cmdlet, and even the API schema.</li> <li>Rubrik supported. Customer support is available for help on individual commands, but not script logic.</li> </ul>"},{"location":"SDKs-and-Tools/PowerShell/#prerequisites","title":"Prerequisites","text":"<ul> <li>PowerShell Recommended Version: <code>7.x</code></li> <li>Rubrik Security Cloud Service Account</li> </ul> <p>Note</p> <p>On Windows machines, The execution policy in PowerShell must be <code>RemoteSigned</code> or less stringent. Rubrik does not recommend bypassing or unrestricting the execution policy.</p> <pre><code>Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy RemoteSigned\n</code></pre>"},{"location":"SDKs-and-Tools/PowerShell/#installation","title":"Installation","text":"<p>Rubrik utilizes the Microsoft PowerShell Gallery for package installation. To install from the PowerShell Gallery, use the <code>Install-Module</code> cmdlet.</p> <pre><code>Install-Module RubrikSecurityCloud -Scope CurrentUser\n</code></pre> <p>To verify installation, use the <code>Get-Module</code> cmdlet.</p> <pre><code>Get-Module -ListAvailable RubrikSecurityCloud\n</code></pre> <pre><code># Example Output\n    Directory: /Users/Joe.Smith/.local/share/powershell/Modules\n\nModuleType Version    PreRelease Name                                PSEdition ExportedCommands\n---------- -------    ---------- ----                                --------- ----------------\nScript     1.12.3                RubrikSecurityCloud                 Desk \n</code></pre> <p>PowerShell should auto-import the module upon use of any cmdlet in the module, but it can also be forced using the <code>Import-Module</code> cmdlet if issues arise. <pre><code>Import-Module RubrikSecurityCloud\n</code></pre></p>"},{"location":"SDKs-and-Tools/PowerShell/#connecting-to-rsc","title":"Connecting to RSC","text":"<p>The RSC PowerShell Module utilizes RSC Service Accounts for authentication. Create a Service Account and download the JSON file. </p> <p>The Service Account JSON file contains unencrypted credentials. The <code>Set-RscRscServiceAccount</code> will created an encrypted credentials file and offer to automatically remove the JSON file from disk.</p> <pre><code>Set-RscServiceAccountFile -InputFilePath /path/to/service_account.json\n</code></pre> <p>Connect to RSC using the <code>Connect-Rsc</code> cmdlet. The RSC instance and credentials are automatically retrieved from the encrypted credentials XML.</p> <pre><code>Connect-Rsc\n</code></pre>"},{"location":"SDKs-and-Tools/PowerShell/#getting-help","title":"Getting Help","text":"<p>To begin running commands, start by listing the commands that are available in the module using the <code>Get-Command</code> cmdlet.</p> <pre><code>Get-Command -Module RubrikSecurityCloud -CommandType Function\n</code></pre> <p>To get help on an individual cmdlet, use the <code>Get-Help</code> cmdlet.</p> <pre><code>Get-Help Get-RscSla -Full\n</code></pre>"},{"location":"SDKs-and-Tools/PowerShell/#updating","title":"Updating","text":"<p>To update to the latest version of the RSC PowerShell module, use the <code>Update-Module</code> cmdlet. Restart the PowerShell terminal session or use <code>Remove-Module RubrikSecurityCloud</code> to unload the old version from memory. Import the new module version using <code>Import-Module RubrikSecurityCloud</code>.</p> <pre><code>Update-Module RubrikSecurityCloud -Scope CurrentUser\n</code></pre> <p>Note</p> <p>PowerShell allows multiple versions of PowerShell modules to be installed, and does not uninstall older versions of modules. This is for script compatibility in the event a module has a breaking change. To uninstall previous versions, you must use the <code>Uninstall-Module</code> cmdlet and specify the versions you want to uninstall.</p> <pre><code>Uninstall-Module RubrikSecurityCloud -RequiredVersion 1.11.2 -Force\n</code></pre>"},{"location":"SDKs-and-Tools/PowerShell/Advanced-Usage/","title":"Advanced Usage","text":"<p>The goal at Rubrik is to have a cmdlet for every useful task that needs to be performed. As we strive toward this goal, there may be times where an easy-to-use cmdlet is not available. This may also be the case for new features, or edge cases that are not yet supported by the cmdlets. For this reason, it may be necessary to interact with the Rubrik Security Cloud API at a lower level.</p> <p>At its heart, The Rubrik Security Cloud PowerShell library is a collection of .NET libraries to provide full access to the API without writing any GraphQL queries. While writing GraphQL directly is not required, it is necessary to understand and utilize the API documentation since they are still GraphQL queries written in .NET/PowerShell.</p>"},{"location":"SDKs-and-Tools/PowerShell/Advanced-Usage/#low-level-cmdlets","title":"'Low-level' cmdlets","text":"<p>The following cmdlets are essential to working with the RSC API through the PowerShell module.</p> <ul> <li> <p><code>New-RscQuery</code>,<code>New-RscMutation</code> queries are split into two categories: Queries(read) and Mutations(writes). These cmdlets will create a query object for either a query or a mutation respectively. Interestingly, queries and mutations are both considered \"queries\" so the word \"query\" will be used generically for either throughout the documentation.</p> </li> <li> <p><code>Invoke-Rsc</code> performs the provided query object against the RSC API. It returns the full HTTP response, including the data provided by the query, converted to .NET/PowerShell objects.</p> </li> <li> <p><code>Get-RscHelp</code> can be used to get information about queries, their inputs, and the object types they return. This is a lightweight version of the API reference, but not a complete substitute.</p> </li> <li> <p><code>Get-RscType</code> instantiates an object of a specific type within RSC. GraphQL is a strongly typed architecture, which means everything has a type and there is no guessing on the structure. This is especially beneficial when working with large, complex objects. The .NET libraries take the types from the GraphQL API and create .NET equivilents.</p> </li> </ul>"},{"location":"SDKs-and-Tools/PowerShell/Advanced-Usage/#constructing-powershell-code-from-a-graphql-query","title":"Constructing PowerShell code from a GraphQL query","text":"<p>The following GraphQL example is a simple query to identify all objects in the Gold SLA that are out of compliance in the last 24 hours. The goal will be to convert this to PowerShell.</p> <pre><code>query example {\n  snappableConnection (filter: {\n    slaDomain: {id: \"00000000-0000-0000-0000-000000000000\"}\n    slaTimeRange: LAST_24_HOURS\n    complianceStatus: OUT_OF_COMPLIANCE\n  }\n  ) {\n    nodes {\n      name\n      id\n      location\n      objectType\n      slaDomain {\n        name\n      }\n      missedSnapshots\n    }\n  }\n}\n</code></pre>"},{"location":"SDKs-and-Tools/PowerShell/Advanced-Usage/#creating-the-query-object","title":"Creating the Query Object","text":"<p>Create a query object using <code>New-RscQuery</code> and select the fields to retrieve using <code>-AddField</code>. Note: Use <code>-FieldProfile EMPTY</code> to deselect any fields that are automatically selected. <pre><code>$query = new-RscQuery -GqlQuery snappableConnection -FieldProfile EMPTY -AddField `\n    Nodes.Name `\n    Nodes.Id `\n    Nodes.Location `\n    Nodes.ObjectType `\n    Nodes.SlaDomain.Id `\n    Nodes.MissedSnapshots\n</code></pre></p> <p><code>$query</code> is an <code>RscQuery</code> object containing variables to pass in, and fields to retrieve. Using the PowerShell <code>Get-Member</code> cmdlet, the type, properties, and methods of the query object are displayed.</p> <pre><code>$query | Get-Member\n\n   TypeName: RubrikSecurityCloud.RscQuery\n\nName           MemberType Definition\n----           ---------- ----------\nAllFields      Method     System.Collections.Generic.List[string] AllFields(int maxDepth = 0)\nEquals         Method     bool Equals(System.Object obj)\nExample        Method     string Example()\nGetHashCode    Method     int GetHashCode()\nGetType        Method     type GetType()\nGqlOperation   Method     RubrikSecurityCloud.RscGqlOperation GqlOperation()\nGqlRequest     Method     RubrikSecurityCloud.RscGqlRequest GqlRequest(bool verifyQuery = True)\nInfo           Method     System.Collections.Generic.List[RubrikSecurityCloud.VarInfo] Info()\nInvoke         Method     System.Object Invoke()\nOpInfo         Method     RubrikSecurityCloud.RscOp OpInfo()\nSelectedFields Method     System.Collections.Generic.List[string] SelectedFields()\nToString       Method     string ToString()\nField          Property   System.Object Field {get;set;}\nOp             Property   string Op {get;set;}\nVar            Property   RubrikSecurityCloud.RscGqlVars Var {get;set;}\n</code></pre>"},{"location":"SDKs-and-Tools/PowerShell/Advanced-Usage/#setting-variables","title":"Setting Variables","text":"<p>The first step will be to set the filter variables for SLA Domain, SLA Time Range, and Compliance. The filter and each of the properties are their own object types. Using <code>Get-RscHelp</code> will show the type name for the filter.</p> <pre><code>Get-RscHelp -Query snappableConnection\n# GraphQL field: snappableConnection\n\nName            Type                 Description\n----            ----                 -----------\nAPI Domain                           Snappable\nAPI Operation                        List\nGQL Field                            snappableConnection\nInvocation                           $query = New-RscQuery -GqlQuery snappableConnection\nVar.first       Int                  Int: Int\nVar.after       String               String: String\nVar.last        Int                  Int: Int\nVar.before      String               String: String\nVar.sortOrder   SortOrder            SortOrder: https://rubrikinc.github.io/rubrik-api-documentation/schema/reference/sortorder.doc.html\nVar.sortBy      SnappableSortByEnum  SnappableSortByEnum: https://rubrikinc.github.io/rubrik-api-documentation/schema/reference/snappablesortbyenum.doc.html\nVar.filter      SnappableFilterInput SnappableFilterInput: https://rubrikinc.github.io/rubrik-api-documentation/schema/reference/snappablefilterinput.doc.html\nField           SnappableConnection  https://rubrikinc.github.io/rubrik-api-documentation/schema/reference/snappableconnection.doc.html\nAll Fields                           $query.AllFields()\nSelected Fields                      $query.SelectedFields()\nExample                              $query.Example()\n</code></pre> <p>The documentation shows <code>Var.filter</code> is a type of <code>SnappableFilterInput</code>. This object can be created using <code>Get-RscType</code> and assigned to <code>$query.Var.filter</code>. Once set, use <code>Get-Member</code> to look at the object types for SlaDomain, slaTimeRange, and complianceStatus. <pre><code>$query.Var.filter = Get-RscType -Name SnappableFilterInput\n\n$query.Var.filter | Get-Member\n\n   TypeName: RubrikSecurityCloud.Types.SnappableFilterInput\n\nName                MemberType Definition\n----                ---------- ----------\nEquals              Method     bool Equals(System.Object obj)\nGetHashCode         Method     int GetHashCode()\nGetInputObject      Method     System.Object GetInputObject(), System.Object IInput.GetInputObject()\nGetType             Method     type GetType()\nToString            Method     string ToString()\nCluster             Property   RubrikSecurityCloud.Types.CommonClusterFilterInput Cluster {get;set;}\nComplianceStatus    Property   System.Collections.Generic.List[RubrikSecurityCloud.Types.ComplianceStatusEnum] ComplianceStatus {get;set;}\nExcludedObjectTypes Property   System.Collections.Generic.List[RubrikSecurityCloud.Types.ObjectTypeEnum] ExcludedObjectTypes {get;set;}\nIsLocal             Property   System.Nullable[bool] IsLocal {get;set;}\nObjectFid           Property   System.Collections.Generic.List[string] ObjectFid {get;set;}\nObjectState         Property   System.Collections.Generic.List[RubrikSecurityCloud.Types.ObjectState] ObjectState {get;set;}\nObjectType          Property   System.Collections.Generic.List[RubrikSecurityCloud.Types.ObjectTypeEnum] ObjectType {get;set;}\nOrgId               Property   System.Collections.Generic.List[string] OrgId {get;set;}\nProtectionStatus    Property   System.Collections.Generic.List[RubrikSecurityCloud.Types.ProtectionStatusEnum] ProtectionStatus {get;set;}\nSearchTerm          Property   string SearchTerm {get;set;}\nSlaDomain           Property   RubrikSecurityCloud.Types.SnappableSlaDomainFilterInput SlaDomain {get;set;}\nSlaTimeRange        Property   System.Nullable[RubrikSecurityCloud.Types.SlaComplianceTimeRange] SlaTimeRange {get;set;}\n</code></pre></p> <p>Properties that are lists mean multiple values can be provided as a PowerShell Array. Properties with Enum in the name indicate they are enumerations, a set of constant values. To set enum variables, use the enum type name shown, followed by <code>::</code> and then the value. The values can be tab completed. Note that <code>ComplianceStatus</code> is an array, so it is encapsulated it with PowerShell array syntax <code>@()</code> and additional values could be added.</p> <pre><code>$query.Var.filter.SlaTimeRange = [RubrikSecurityCloud.Types.SlaComplianceTimeRange]::LAST_24_HOURS\n$query.Var.filter.ComplianceStatus = @([RubrikSecurityCloud.Types.ComplianceStatusEnum]::OUT_OF_COMPLIANCE)\n</code></pre> <p>Setting the <code>SlaDomain</code> variable requires creating the SLA filter object, and setting the ID.</p> <pre><code>$query.Var.filter.SlaDomain = Get-RscType -Name SnappableSlaDomainFilterInput\n# The ID can be added dynamically instead of hardcoding: Get-RscSla -Name \"Gold\"\n$query.Var.filter.SlaDomain.id = \"00000000-0000-0000-0000-000000000000\" \n</code></pre> <p><code>$query.var.filter</code> should now look like this <pre><code>$query.var.filter\n\nProtectionStatus    :\nSlaDomain           : RubrikSecurityCloud.Types.SnappableSlaDomainFilterInput\nComplianceStatus    : {OUT_OF_COMPLIANCE}\nObjectType          :\nExcludedObjectTypes :\nCluster             :\nSearchTerm          :\nSlaTimeRange        : LAST_24_HOURS\nOrgId               :\nObjectState         :\nIsLocal             :\nObjectFid           :\n</code></pre></p>"},{"location":"SDKs-and-Tools/PowerShell/Advanced-Usage/#verifying-fields","title":"Verifying Fields","text":"<p>To verify the fields you've selected, look at <code>$query.field.nodes</code>. Note the placeholder values that were added to the fields that were selected. The placeholder values have no meaning.</p> <pre><code>$query.field.nodes | Format-List *\n</code></pre>"},{"location":"SDKs-and-Tools/PowerShell/Advanced-Usage/#selecting-additional-fields","title":"Selecting Additional Fields","text":"<p>To set additional fields to be retrieved, first use <code>Get-Member</code> on the first element of <code>$query.field.nodes</code>. The nodes property is an array of objects that will be returned. </p> <pre><code>$query.field.nodes[0] | Get-Member\n</code></pre> <p>Warning</p> <p>Always check the type! Some queries with Implementations (sub-types) use different elements for different object types. For instance for the <code>slaDomains</code> query, <code>nodes[0]</code> contains the fiels for the <code>ClusterSlaDomain</code> type, and <code>nodes[1]</code> contains the fields for the <code>GlobalSlaReply</code> type.</p> <p>To add an additional field, create a placeholder value of the object type. For example, <code>UsedBytes</code> is a <code>Long</code>, so a valid placeholder value would be <code>1</code> or <code>100000</code>. <code>PullTime</code> is a <code>DateTime</code>, so a valid placeholder value would be <code>\"1900/01/01\"</code>.</p> <pre><code>$query.field.nodes[0].UsedBytes = 1\n</code></pre>"},{"location":"SDKs-and-Tools/PowerShell/Advanced-Usage/#executing-the-query","title":"Executing the Query","text":"<p>Passing the query into <code>Invoke-Rsc</code> will execute the query against the RSC API.  Store the result in a variable and view the contents. The response will contain the <code>nodes</code> array of objects were requested. Note that not all queries are 'connection' queries with <code>nodes</code>.</p> <pre><code>$result = Invoke-Rsc $query\n$result\n\nCount       : 36\nAggregation :\nEdges       :\nNodes       : {foo, vm123, mailbox\u2026}\nPageInfo    : RubrikSecurityCloud.Types.PageInfo\n</code></pre> <p>Alternatively, you can use the <code>invoke()</code> method on the query object and immediately output the nodes array.</p> <pre><code>$query.invoke().nodes\n</code></pre>"}]}