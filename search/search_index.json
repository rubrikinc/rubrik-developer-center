{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-the-rubrik-developer-guide","title":"Welcome to the Rubrik Developer Guide!","text":"<p>Rubrik's APIs provide an extremely flexible interface to automate and integrate with customer and partner systems. To get started, here are the APIs Rubrik currently offers.</p>"},{"location":"#rubrik-security-cloudrsc-api","title":"Rubrik Security Cloud(RSC) API","text":"<p>The Rubrik Security Cloud API provides 100% of the capabilities Rubrik has to offer.</p> <ul> <li>SLA Domain management and assignment</li> <li>Data protection tasks</li> <li>Recovery tasks</li> <li>Data Security Posture</li> <li>Data Threat Analytics</li> </ul>"},{"location":"#rubrik-cluster-api","title":"Rubrik Cluster API","text":"<p>The Rubrik Cluster API provides offline and airgapped operations in the event that you cannot access Rubrik Security Cloud</p> <ul> <li>On-demand backups</li> <li>Recovery tasks</li> </ul>"},{"location":"Rubrik-Cluster-API/","title":"Rubrik Cluster API","text":""},{"location":"Rubrik-Cluster-API/#description","title":"Description","text":"<p>The Rubrik Cluster API is REST based, and is located on each physical or virtual (Cloud Cluster). The primary purposes for this API are:</p> <ol> <li>Offline Recovery - In the event that you've gone dark and are unable to access the Internet, You're still able to automate your disaster recovery plan.</li> <li>Air-gapped Automation - Some systems performing backup automation may not have access to the Internet. A common example is a database server that initiates backups at a very specific time. The database server cloud have a script to freeze and write its logs, and needs to tell Rubrik to initiate the backup.</li> </ol>"},{"location":"Rubrik-Security-Cloud-API/","title":"Rubrik Security Cloud API","text":""},{"location":"Rubrik-Security-Cloud-API/#getting-started","title":"Getting Started","text":"<p>The Rubrik Security Cloud(RSC) API is GraphQL.</p>"},{"location":"Rubrik-Security-Cloud-API/#graphql-features","title":"GraphQL Features","text":"<ol> <li>Single Endpoint - The RSC API endpoint will always be /api/graphql.</li> <li>Single HTTP method - Everything is an HTTP POST.</li> <li>Introspection - The API documentation is built in to the API itself, providing integrated development help and schema checking.</li> <li>Customized Response - Queries are customized to only return the fields that is needed.</li> </ol>"},{"location":"Rubrik-Security-Cloud-API/#help-im-new-to-graphql","title":"Help! I'm new to GraphQL!","text":"<p>GraphQL is a \"query language,\" comparable to SQL. In SQL, one might say, \"Select name and ID from the VM table.\" GraphQL is similar in this idea. A query which is much like a SQL table. We then select the properties called fields, which are like columns in that table. Unlike SQL, GraphQL fields can be types with their own fields, allowing a deeply nested structure for more complex objects.</p>"},{"location":"Rubrik-Security-Cloud-API/#example","title":"Example","text":"<p>Click on the arrow annotation (1) in the code to see an explanation of that part of the code.</p> <ol> <li>This is an annotation!</li> </ol> <p>Retrieve all MSSQL databases, and return the name, ID, and the name and ID of the Rubrik Cluster that protect's this MSSQL database.</p> <pre><code>query mssqlDatabasesExample { #(1)!\n  mssqlDatabases { # (2)!\n    nodes  { #(3)!\n      name #(4)! \n      id\n      cluster { #(5)!\n        name #(6)!\n        id\n      }\n    }\n  }\n}\n</code></pre> <ol> <li><code>mssqlDatabasesExample</code> is an operation name, You can change this to whatever you want.</li> <li><code>mssqlDatabases</code> is the name of the query in the API.</li> <li><code>nodes</code> is a paginated array of objects, in this case, mssqlDatabases.</li> <li><code>name</code> is a property, known as a <code>field</code> in GraphQL. It has a specific type, in this case <code>name</code> is a <code>String</code>.</li> <li><code>cluster</code> is also a field in the API, but unlike <code>name</code> that is of type <code>String</code>, <code>cluster</code> is a <code>Cluster</code> type, and it has its own fields.</li> <li>This is the cluster <code>name</code> field. It's a field on the <code>Cluster</code> type in the API.</li> </ol> <p>To learn more about the query syntax, check out GraphQL Language Syntax. </p> <p>Next: API Playground</p>"},{"location":"Rubrik-Security-Cloud-API/API-playground/","title":"API playground","text":"<p>The API Playground is an integrated development environment (IDE) that you can use to browse, explore, and run GraphQL APIs offered by Rubrik Security Cloud (RSC). The IDE also provides reference to the Rubrik GraphQL API documentation for your version. Running GraphQL queries and mutations in API Playground validates the GraphQL operations so that you can confirm that your queries or mutations will achieve the desired result when included in automation scripts.</p> <p>Initially, access to the playground uses the currently authenticated user credentials. Running queries as a service account is useful for testing permissions and can be accomplished by clicking the \"Test with Service Account\" button in the upper right of the Playground.</p> <p>The ability to access objects and queries depends on the RBAC roles assigned to the user account or service account. For enhanced security, API Playground does not persist the service account access credentials.</p> <p>Danger</p> <p>The GraphQL mutations that run in API Playground perform actions against this instance of RSC. This can result in data loss.</p>"},{"location":"Rubrik-Security-Cloud-API/API-playground/#accessing-api-playground","title":"Accessing API Playground","text":"<p>Access the API Playground through the RSC Settings menu or directly through the browser's url bar.</p> <ol> <li>Log in to RSC.</li> <li>Open the app tray and select Settings. The Settings menu appears.</li> <li>Click API Playground. The API Playground page appears.</li> <li>Click Open API Playground. API Playground opens in a new browser tab.</li> </ol> <p>Alternatively, The playground can be accessed directly by supplying the url in this format:</p> <pre><code>https://&lt;INSTANCE&gt;.my.rubrik.com/playground/\n</code></pre> <p>Copy and paste the below example query into the playground query pane, and click the execute button.</p> <pre><code>{\n  slaDomains {\n    nodes {\n      name\n      id\n    }\n  }\n}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/API-playground/#sample-output","title":"Sample output","text":"<pre><code>{\n  \"data\": {\n    \"slaDomains\": {\n      \"nodes\": [\n        {\n          \"name\": \"Bronze\",\n          \"id\": \"00000000-0000-0000-0000-000000000002\"\n        },\n        {\n          \"name\": \"Gold\",\n          \"id\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        {\n          \"name\": \"Silver\",\n          \"id\": \"00000000-0000-0000-0000-000000000001\"\n        }\n      ]\n    }\n  }\n}\n</code></pre> <p>Building on the query for SLA Domains, it may be desirable to search by name. The following will walk through using the API documentation in the playground to identify arguments that can be specified for a particular query, and how to implement the arguments.</p> <ol> <li>Hover the mouse cursor over <code>slaDomains</code> in the query.</li> <li>Click on the <code>slaDomains</code> link when the tooltip appears.</li> </ol> <p>A side pane will appear with the API documentation for <code>slaDomains.</code></p> <p>There are 3 sections in the documentation:</p> <ul> <li><code>Type</code> - The type of object that gets returned.</li> <li><code>Arguments</code> - Variables that can be passed into the query, such as filters or sorting preferences.</li> <li><code>Implementations</code> - Additional object types that have their own properties</li> </ul> <p>The arguments have types specified next to the name. The <code>filter</code> argument is a type of <code>[GlobalSlaFilterInput!]</code></p> <ul> <li><code>[]</code> The square braces indicate that we can pass in multiple<code>GlobalSlaFilterInput</code> objects. This means multiple filter objects can be passed in.</li> <li><code>!</code> The exclamation point means \"Non-Null.\" This symbol is used both in arguments and fields that get returned indicating that the field must be supplied.</li> </ul> <p>Click on the <code>GlobalSlaFilterInput</code> type in the documentation. The documentation will navigate to the documentation for this type.</p> <p>To search by name, set the <code>field</code> to <code>NAME</code>. Clicking on <code>GlobalSlaQueryFilterInputField</code> will display the enum values that are available to filter on.</p> <p>Set <code>text</code> to the name of the SLA domain to search for.</p> <p>Note</p> <p>Some queries will have their own filtering arguments that are unique to the context of that object. The API documentation for each query will specify the filtering syntax and capabilities for each query.</p> <p>Arguments are supplied to a query in parenthesis <code>()</code> after the query name. Create the filter object as an argument to the <code>slaDomains</code> query. Change the <code>text</code> content to an SLA domain name in the currently connected RSC instance.</p> <pre><code>{\n  slaDomains(filter: {field: NAME text: \"bronze\"}) {\n    nodes {\n      name\n      id\n    }\n  }\n}\n</code></pre> <p>The result will be only SLA Domains starting with <code>bronze</code></p> <pre><code>{\n  \"data\": {\n    \"slaDomains\": {\n      \"nodes\": [\n        {\n          \"name\": \"Bronze\",\n          \"id\": \"00000000-0000-0000-0000-000000000002\"\n        }\n      ]\n    }\n  }\n}\n</code></pre> <p>Next: Authentication</p>"},{"location":"Rubrik-Security-Cloud-API/authentication/","title":"Authentication","text":""},{"location":"Rubrik-Security-Cloud-API/authentication/#service-accounts","title":"Service Accounts","text":"<p>A service account represents an application that needs authentication and authorization to invoke Rubrik APIs, as opposed to a user account that represents an individual user. Service accounts are OAuth2 client credentials grants. A client ID and client secret are used to authenticate to an authorization server and obtain an access token to invoke the Rubrik APIs. Similar to user accounts, Rubrik allows assigning roles to the service accounts to enable role-based access control. But contrary to user accounts, service accounts cannot be used to access the Rubrik web UI.</p>"},{"location":"Rubrik-Security-Cloud-API/authentication/#security","title":"Security","text":"<p>Service accounts enable client applications and other services to invoke the Rubrik APIs securely. When creating a service account, the authorization server assigns a unique client ID and client secret to the account. The combination of client ID and client secret is known as client credentials. The client credentials are known only to the client that is represented by the service account and the authorization server that grants the credentials to the service account. The client application authenticates to the authorization server using the client credentials and obtains an access token to authenticate to the Rubrik API server and access the protected resources.</p>"},{"location":"Rubrik-Security-Cloud-API/authentication/#guidelines","title":"Guidelines","text":"<p>Consider the following best practices when using service accounts:</p> <ul> <li>One service account should represent only one client application.</li> <li>The role assigned to the service account should be the one with least number of privileges that would be sufficient for the client application being   -epresented by the service account to access the Rubrik APIs.</li> <li>The client credentials must be saved when they are first created as Rubrik does not provide an option to display them again.</li> <li>The client secret must be treated like a password and stored in a secure location.</li> <li>Service account access tokens should be cached and reused until they are valid.</li> </ul>"},{"location":"Rubrik-Security-Cloud-API/authentication/#usage","title":"Usage","text":""},{"location":"Rubrik-Security-Cloud-API/authentication/#adding-a-service-account","title":"Adding a service account","text":"<p>Refer to the RSC userguide: adding a service account</p>"},{"location":"Rubrik-Security-Cloud-API/authentication/#obtaining-an-access-token","title":"Obtaining an access token","text":"Shell <pre><code>export RSC_CLIENT_ID=\"your-client-id\"\nexport RSC_CLIENT_SECRET=\"your-client-secret\"\nexport RSC_CLIENT_TOKEN_URI=\"your-token-uri\"\n\ncurl -X POST $RSC_CLIENT_TOKEN_URI \\\n     -H \"Content-Type: application/x-www-form-urlencoded\" \\\n     -d \"client_id=$RSC_CLIENT_ID\" \\\n     -d \"client_secret=$RSC_CLIENT_SECRET\"\n</code></pre> <p>The authorization server responds with an encoded access token. Client applications use the access token to invoke Rubrik APIs.</p> <pre><code>{\"client_id\":\"client|c9bba9a9-1234-1234-b7c6-123440b4cf64\",\"access_token\":\"eyJ...\",\"expires_in\":43200}\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/authentication/#using-the-access-token","title":"Using the access token","text":"<p>The access token is used as a <code>Bearer</code> token in the <code>Authorization</code> header of all subsequent API calls.</p> Shell <pre><code>curl -X POST \"https://INSTANCE_NAME.my.rubrik.com/api/graphql\" \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Bearer $ACCESS_TOKEN\" \\\n     -d '{\"query\": \"{ slaDomains { nodes { name id }}}\"}'\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/authentication/#deleting-a-session","title":"Deleting a session","text":"<p>While there is no restriction on the number of active sessions a service account can have, Rubrik provides an API endpoint to delete an existing session.</p> <p>Run the following command to revoke the session established for the service account. Successful revocation will result in an HTTP status code of <code>204</code>.</p> Shell <pre><code>curl -o /dev/null -s -w \"%{http_code}\\n\" -X DELETE https://INSTANCE_NAME.my.rubrik.com/api/session \\\n     --header \"Authorization: Bearer $ACCESS_TOKEN\"\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/data-protection/SLA-domains/","title":"SLA Domains","text":""},{"location":"Rubrik-Security-Cloud-API/data-protection/SLA-domains/#what-are-sla-domains","title":"What are SLA Domains?","text":"<p>Rubrik SLA Domains are data protection policies that define:</p> <ul> <li>The object types for which the policy can be applied</li> <li>The frequency of the backups</li> <li>The retention of the backups</li> <li>The replication destination of the backups</li> <li>The archival location of the backups</li> <li>Object specific settings based on the type (e.g. MSSQL Database)</li> </ul>"},{"location":"Rubrik-Security-Cloud-API/data-protection/SLA-domains/#retrieve-all-slas","title":"Retrieve All SLAs","text":"GraphQLPowerShell SDK <pre><code>query slaDomains {\n  slaDomains {\n    nodes {\n      id\n      name\n      ... on GlobalSlaReply {\n        isDefault\n        description\n        snapshotSchedule {\n          minute {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          hourly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          daily {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          weekly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfWeek\n          }\n          monthly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfMonth\n          }\n          quarterly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfQuarter\n            quarterStartMonth\n          }\n          yearly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfYear\n            yearStartMonth\n          }\n        }\n        archivalSpecs {\n          threshold\n          thresholdUnit\n          storageSetting {\n            id\n            name\n            groupType\n          }\n          archivalTieringSpec {\n            coldStorageClass\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n        }\n        backupWindows {\n          durationInHours\n          startTimeAttributes {\n            hour\n            minute\n          }\n        }\n        firstFullBackupWindows {\n          durationInHours\n          startTimeAttributes {\n            dayOfWeek {\n              day\n            }\n            hour\n            minute\n          }\n        }\n        replicationSpecsV2 {\n          replicationLocalRetentionDuration {\n            duration\n            unit\n          }\n          cascadingArchivalSpecs {\n            archivalTieringSpec {\n              coldStorageClass\n              shouldTierExistingSnapshots\n              minAccessibleDurationInSeconds\n              isInstantTieringEnabled\n            }\n            archivalLocation {\n              id\n              name\n              targetType\n              ... on RubrikManagedAwsTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedNfsTarget {\n                host\n              }\n              ... on CdmManagedAwsTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on CdmManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n            }\n            frequency\n            archivalThreshold {\n              duration\n              unit\n            }\n          }\n          retentionDuration {\n            duration\n            unit\n          }\n          cluster {\n            id\n            name\n          }\n          targetMapping {\n            id\n            name\n          }\n          awsTarget {\n            accountId\n            accountName\n            region\n          }\n          azureTarget {\n            region\n          }\n        }\n        localRetentionLimit {\n          duration\n          unit\n        }\n        objectSpecificConfigs {\n          sapHanaConfig {\n            incrementalFrequency {\n              duration\n              unit\n            }\n            differentialFrequency {\n              duration\n              unit\n            }\n            logRetention {\n              duration\n              unit\n            }\n          }\n          awsRdsConfig {\n            logRetention {\n              duration\n            }\n          }\n          vmwareVmConfig {\n            logRetentionSeconds\n          }\n        }\n        clusterToSyncStatusMap {\n          clusterUuid\n          slaSyncStatus\n        }\n        objectTypes\n        upgradeInfo {\n          eligibility {\n            isEligible\n            ineligibilityReason\n          }\n          latestUpgrade {\n            status\n            msg\n          }\n        }\n        allOrgsHavingAccess {\n          id\n          name\n        }\n        ownerOrg {\n          id\n          name\n        }\n        isRetentionLockedSla\n      }\n      ... on ClusterSlaDomain {\n        cdmId\n        name\n        cluster {\n          name\n          version\n        }\n        snapshotSchedule {\n          minute {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          hourly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          daily {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          weekly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfWeek\n          }\n          monthly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfMonth\n          }\n          quarterly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfQuarter\n            quarterStartMonth\n          }\n          yearly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfYear\n            yearStartMonth\n          }\n        }\n        backupWindows {\n          durationInHours\n          startTimeAttributes {\n            hour\n            minute\n          }\n        }\n        firstFullBackupWindows {\n          durationInHours\n          startTimeAttributes {\n            dayOfWeek {\n              day\n            }\n            hour\n            minute\n          }\n        }\n        archivalSpec {\n          threshold\n          thresholdUnit\n          archivalLocationName\n          archivalLocationId\n          archivalTieringSpec {\n            coldStorageClass\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n        }\n        replicationSpecsV2 {\n          retentionDuration {\n            duration\n            unit\n          }\n          cluster {\n            id\n            name\n          }\n          targetMapping {\n            id\n            name\n          }\n          awsTarget {\n            accountId\n            accountName\n            region\n          }\n          azureTarget {\n            region\n          }\n        }\n        localRetentionLimit {\n          duration\n          unit\n        }\n        upgradeInfo {\n          eligibility {\n            isEligible\n            ineligibilityReason\n          }\n          latestUpgrade {\n            status\n            msg\n          }\n        }\n        ownerOrg {\n          id\n          name\n        }\n        isRetentionLockedSla\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscSla\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/data-protection/SLA-domains/#retrieve-an-sla-by-name","title":"Retrieve an SLA by Name","text":"<p>Generally, the name of the SLA may be known, but not the ID. The <code>slaDomains</code> query allows filtering on several fields, including <code>NAME</code>.</p> GraphQLPowerShell SDK <pre><code>query slaDomains {\n  slaDomains(filter: {field: NAME text: \"foo\"}) {\n    nodes {\n      id\n      name\n      ... on GlobalSlaReply {\n        isDefault\n        description\n        snapshotSchedule {\n          minute {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          hourly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          daily {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          weekly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfWeek\n          }\n          monthly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfMonth\n          }\n          quarterly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfQuarter\n            quarterStartMonth\n          }\n          yearly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfYear\n            yearStartMonth\n          }\n        }\n        archivalSpecs {\n          threshold\n          thresholdUnit\n          storageSetting {\n            id\n            name\n            groupType\n          }\n          archivalTieringSpec {\n            coldStorageClass\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n        }\n        backupWindows {\n          durationInHours\n          startTimeAttributes {\n            hour\n            minute\n          }\n        }\n        firstFullBackupWindows {\n          durationInHours\n          startTimeAttributes {\n            dayOfWeek {\n              day\n            }\n            hour\n            minute\n          }\n        }\n        replicationSpecsV2 {\n          replicationLocalRetentionDuration {\n            duration\n            unit\n          }\n          cascadingArchivalSpecs {\n            archivalTieringSpec {\n              coldStorageClass\n              shouldTierExistingSnapshots\n              minAccessibleDurationInSeconds\n              isInstantTieringEnabled\n            }\n            archivalLocation {\n              id\n              name\n              targetType\n              ... on RubrikManagedAwsTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedNfsTarget {\n                host\n              }\n              ... on CdmManagedAwsTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on CdmManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n            }\n            frequency\n            archivalThreshold {\n              duration\n              unit\n            }\n          }\n          retentionDuration {\n            duration\n            unit\n          }\n          cluster {\n            id\n            name\n          }\n          targetMapping {\n            id\n            name\n          }\n          awsTarget {\n            accountId\n            accountName\n            region\n          }\n          azureTarget {\n            region\n          }\n        }\n        localRetentionLimit {\n          duration\n          unit\n        }\n        objectSpecificConfigs {\n          sapHanaConfig {\n            incrementalFrequency {\n              duration\n              unit\n            }\n            differentialFrequency {\n              duration\n              unit\n            }\n            logRetention {\n              duration\n              unit\n            }\n          }\n          awsRdsConfig {\n            logRetention {\n              duration\n            }\n          }\n          vmwareVmConfig {\n            logRetentionSeconds\n          }\n        }\n        clusterToSyncStatusMap {\n          clusterUuid\n          slaSyncStatus\n        }\n        objectTypes\n        upgradeInfo {\n          eligibility {\n            isEligible\n            ineligibilityReason\n          }\n          latestUpgrade {\n            status\n            msg\n          }\n        }\n        allOrgsHavingAccess {\n          id\n          name\n        }\n        ownerOrg {\n          id\n          name\n        }\n        isRetentionLockedSla\n      }\n      ... on ClusterSlaDomain {\n        cdmId\n        name\n        cluster {\n          name\n          version\n        }\n        snapshotSchedule {\n          minute {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          hourly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          daily {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n          }\n          weekly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfWeek\n          }\n          monthly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfMonth\n          }\n          quarterly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfQuarter\n            quarterStartMonth\n          }\n          yearly {\n            basicSchedule {\n              frequency\n              retention\n              retentionUnit\n            }\n            dayOfYear\n            yearStartMonth\n          }\n        }\n        backupWindows {\n          durationInHours\n          startTimeAttributes {\n            hour\n            minute\n          }\n        }\n        firstFullBackupWindows {\n          durationInHours\n          startTimeAttributes {\n            dayOfWeek {\n              day\n            }\n            hour\n            minute\n          }\n        }\n        archivalSpec {\n          threshold\n          thresholdUnit\n          archivalLocationName\n          archivalLocationId\n          archivalTieringSpec {\n            coldStorageClass\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n        }\n        replicationSpecsV2 {\n          retentionDuration {\n            duration\n            unit\n          }\n          cluster {\n            id\n            name\n          }\n          targetMapping {\n            id\n            name\n          }\n          awsTarget {\n            accountId\n            accountName\n            region\n          }\n          azureTarget {\n            region\n          }\n        }\n        localRetentionLimit {\n          duration\n          unit\n        }\n        upgradeInfo {\n          eligibility {\n            isEligible\n            ineligibilityReason\n          }\n          latestUpgrade {\n            status\n            msg\n          }\n        }\n        ownerOrg {\n          id\n          name\n        }\n        isRetentionLockedSla\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscSla -Name \"Foo\"\n</code></pre> <p>Note</p> <p>Name filtering in <code>slaDomains</code> is partial matching. If you provide the name \"bronze\", it will also return any other SLA domain with that name (e.g. \"super-bronze\").</p>"},{"location":"Rubrik-Security-Cloud-API/data-protection/SLA-domains/#retrieve-an-individual-sla","title":"Retrieve an Individual SLA","text":"GraphQLPowerShell SDK <pre><code>query slaDomain {\n  slaDomain(id: \"0CC22D1B-B761-4EF3-BC5B-82706D97FB05\") {\n    id\n    name\n    ... on GlobalSlaReply {\n      isDefault\n      description\n      snapshotSchedule {\n        minute {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n        }\n        hourly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n        }\n        daily {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n        }\n        weekly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n          dayOfWeek\n        }\n        monthly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n          dayOfMonth\n        }\n        quarterly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n          dayOfQuarter\n          quarterStartMonth\n        }\n        yearly {\n          basicSchedule {\n            frequency\n            retention\n            retentionUnit\n          }\n          dayOfYear\n          yearStartMonth\n        }\n      }\n      archivalSpecs {\n        threshold\n        thresholdUnit\n        archivalLocationToClusterMapping {\n          cluster {\n            id\n            name\n          }\n          location {\n            id\n            name\n            targetType\n          }\n        }\n        storageSetting {\n          id\n          name\n          groupType\n        }\n        archivalTieringSpec {\n          coldStorageClass\n          minAccessibleDurationInSeconds\n          isInstantTieringEnabled\n        }\n        frequencies\n      }\n      archivalLocationsUpgradeInfo {\n        locationId\n        upgradeStatus\n        upgradeUnsupportedReason\n      }\n      backupWindows {\n        durationInHours\n        startTimeAttributes {\n          hour\n          minute\n        }\n      }\n      firstFullBackupWindows {\n        durationInHours\n        startTimeAttributes {\n          dayOfWeek {\n            day\n          }\n          hour\n          minute\n        }\n      }\n      replicationSpecsV2 {\n        replicationPairs {\n          sourceCluster {\n            id\n            name\n          }\n          targetCluster {\n            id\n            name\n            version\n            clusterInfo {\n              ... on LocalClusterInfo {\n                isIsolated: isAirGapped\n                isConnected\n              }\n              ... on CrossAccountClusterInfo {\n                originAccount\n                isConnected\n              }\n            }\n          }\n        }\n        replicationLocalRetentionDuration {\n          duration\n          unit\n        }\n        cascadingArchivalSpecs {\n          archivalTieringSpec {\n            coldStorageClass\n            shouldTierExistingSnapshots\n            minAccessibleDurationInSeconds\n            isInstantTieringEnabled\n          }\n          archivalLocationToClusterMapping {\n            cluster {\n              id\n              name\n              version\n              clusterInfo {\n                ... on LocalClusterInfo {\n                  isIsolated: isAirGapped\n                  isConnected\n                }\n                ... on CrossAccountClusterInfo {\n                  originAccount\n                  isConnected\n                }\n              }\n            }\n            location {\n              id\n              name\n              targetType\n              ... on RubrikManagedAwsTarget {\n                storageClass\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on CdmManagedAwsTarget {\n                storageClass\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on CdmManagedAzureTarget {\n                immutabilitySettings {\n                  lockDurationDays\n                }\n              }\n              ... on RubrikManagedRcsTarget {\n                immutabilityPeriodDays\n                syncStatus\n                tier\n              }\n              ... on RubrikManagedS3CompatibleTarget {\n                immutabilitySetting {\n                  bucketLockDurationDays\n                }\n              }\n            }\n          }\n          archivalLocation {\n            id\n            name\n            targetType\n            ... on RubrikManagedAwsTarget {\n              storageClass\n              immutabilitySettings {\n                lockDurationDays\n              }\n            }\n            ... on RubrikManagedAzureTarget {\n              immutabilitySettings {\n                lockDurationDays\n              }\n            }\n            ... on CdmManagedAwsTarget {\n              storageClass\n              immutabilitySettings {\n                lockDurationDays\n              }\n            }\n            ... on CdmManagedAzureTarget {\n              immutabilitySettings {\n                lockDurationDays\n              }\n            }\n            ... on RubrikManagedRcsTarget {\n              immutabilityPeriodDays\n              syncStatus\n              tier\n            }\n            ... on RubrikManagedS3CompatibleTarget {\n              immutabilitySetting {\n                bucketLockDurationDays\n              }\n            }\n          }\n          frequency\n          archivalThreshold {\n            duration\n            unit\n          }\n        }\n        retentionDuration {\n          duration\n          unit\n        }\n        cluster {\n          id\n          name\n          version\n          clusterInfo {\n            ... on LocalClusterInfo {\n              isIsolated: isAirGapped\n              isConnected\n            }\n            ... on CrossAccountClusterInfo {\n              originAccount\n              isConnected\n            }\n          }\n        }\n        targetMapping {\n          id\n          name\n          targets {\n            id\n            name\n            cluster {\n              id\n              name\n            }\n          }\n        }\n        awsTarget {\n          accountId\n          accountName\n          region\n        }\n        azureTarget {\n          region\n        }\n      }\n      localRetentionLimit {\n        duration\n        unit\n      }\n      objectSpecificConfigs {\n        awsRdsConfig {\n          logRetention {\n            duration\n            unit\n          }\n        }\n        sapHanaConfig {\n          incrementalFrequency {\n            duration\n            unit\n          }\n          differentialFrequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n        }\n        db2Config {\n          incrementalFrequency {\n            duration\n            unit\n          }\n          differentialFrequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n        }\n        mongoConfig {\n          logFrequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n        }\n        mssqlConfig {\n          frequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n        }\n        oracleConfig {\n          frequency {\n            duration\n            unit\n          }\n          logRetention {\n            duration\n            unit\n          }\n          hostLogRetention {\n            duration\n            unit\n          }\n        }\n        vmwareVmConfig {\n          logRetentionSeconds\n        }\n        azureSqlDatabaseDbConfig {\n          logRetentionInDays\n        }\n        azureSqlManagedInstanceDbConfig {\n          logRetentionInDays\n        }\n      }\n      clusterToSyncStatusMap {\n        clusterUuid\n        slaSyncStatus\n      }\n      objectTypes\n      upgradeInfo {\n        eligibility {\n          isEligible\n          ineligibilityReason\n        }\n        latestUpgrade {\n          status\n          msg\n        }\n      }\n      allOrgsHavingAccess {\n        id\n        name\n      }\n      isRetentionLockedSla\n      retentionLockMode\n    }\n  }\n}\n</code></pre> <pre><code>Get-RscSla -Id \"0CC22D1B-B761-4EF3-BC5B-82706D97FB05\"\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/data-protection/SLA-domains/assignment/","title":"Assignment","text":""},{"location":"Rubrik-Security-Cloud-API/data-protection/SLA-domains/assignment/#assigning-an-sla-to-a-workload","title":"Assigning an SLA to a workload","text":"GraphQLPowerShell SDK <pre><code>mutation {\n  assignSla(input: {\n    slaDomainAssignType: protectWithSlaId\n    slaOptionalId: \"CC4AFC96-A8DD-401F-A618-1C03742D21AA\"\n    objectIds: [\"DEF42837-C14D-45E2-8F11-F1BE9ED50F4E\"]\n    # shouldApplyToExistingSnapshots: true # optional. if you want existing snaps applied to new SLA assignment\n    # existingSnapshotRetention: RETAIN_SNAPSHOTS # optional. What do you want to do with the old snaps if you change to DONOTPROTECT?\n  }) {\n    success\n  }\n}\n</code></pre> <pre><code>$vm = Get-RscVmwareVm -Name \"foo\"\n$sla = Get-RscSla -Name \"Bar\"\n$vm | Protect-RscWorkload -Sla $sla\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/data-protection/SLA-domains/assignment/#assigning-an-sla-to-a-snapshot","title":"Assigning an SLA to a snapshot","text":"GraphQLPowerShell SDKShell <pre><code>mutation AssignSlaToSnapshot {\n  assignRetentionSLAToSnapshots(\n    snapshotFids: [\"b77f85ae-62d1-435b-9abf-2a1d97c6802f\"]\n    globalSlaAssignType: protectWithSlaId\n    globalSlaOptionalFid: \"5b6e44ca-9a0d-42e8-a6ba-952159c69bab\"\n  ) {\n    success\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/data-protection/SLA-domains/creating-and-modifying/","title":"Creating and modifying","text":""},{"location":"Rubrik-Security-Cloud-API/data-protection/SLA-domains/creating-and-modifying/#creating-an-sla-domain","title":"Creating an SLA Domain","text":"<p>SLA domains can range from simple to very complex policy definitions.</p> GraphQLPowerShell SDKShell <pre><code>mutation createSla {\n  createGlobalSla(input: {\n    name: \"foo\"\n    objectTypes: [VSPHERE_OBJECT_TYPE MSSQL_OBJECT_TYPE]\n    snapshotSchedule: {\n      daily: {\n        basicSchedule: {\n          frequency: 1\n          retention: 7\n          retentionUnit: DAYS\n        }\n      }\n    }\n  }) {\n    name\n    id\n  }\n}\n</code></pre> <pre><code>$dailySchedule = New-RscSlaSnapshotSchedule -Type daily -Frequency 1 -Retention 2 -RetentionUnit DAYS\nNew-RscSla -name \"foo\" -DailySchedule $dailySchedule -ObjectType VSPHERE_OBJECT_TYPE,MSSQL_OBJECT_TYPE\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/data-protection/SLA-domains/creating-and-modifying/#modifying-an-sla-domain","title":"Modifying an SLA Domain","text":"<p>Modification of an SLA requires the entire SLA object to be passed in to the mutation. If every property is not passed in, the SLA update will either fail, or will be updated with only the portions of the object that were passed in to the update arguments.</p> GraphQLPowerShell SDKShell <pre><code>mutation createSla {\n  updateGlobalSla(input: {\n    id: \"2794261b-0e3b-4eab-8a32-f1ce4579e8c7\"\n    name: \"foo\"\n    objectTypes: [VSPHERE_OBJECT_TYPE MSSQL_OBJECT_TYPE]\n    description: \"This is my foo SLA Domain\"\n    snapshotSchedule: {\n      daily: {\n        basicSchedule: {\n          frequency: 1\n          retention: 7\n          retentionUnit: DAYS\n        }\n      }\n    }\n  }) {\n    name\n    id\n  }\n}\n</code></pre> <pre><code>$sla = Get-RscSla \"foo\"\n$sla | Set-RscSla -Description \"This is my foo SLA\"\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/data-protection/data-center/VMware-vSphere/","title":"VMware vSphere Virtual Machines","text":""},{"location":"Rubrik-Security-Cloud-API/data-protection/data-center/VMware-vSphere/#description","title":"Description","text":"<p>For information on protection capabilities, see the Rubrik Security Cloud documentation</p>"},{"location":"Rubrik-Security-Cloud-API/data-protection/data-center/VMware-vSphere/#retrieving-vsphere-virtual-machine-information","title":"Retrieving vSphere Virtual Machine Information","text":"<p>To list virtual machines known by Rubrik, you can perform the following. There are various filters to search by name, MOID, cluster, organization, and more.</p> GraphQLPowerShell SDKPython SDKShell <pre><code>query getVirtualMachines {\n  objects: vSphereVmNewConnection(\n    filter: [\n      {field: NAME_EXACT_MATCH texts: \"foo\"}\n      {field: IS_RELIC texts: \"false\"}\n      {field: IS_REPLICATED texts: \"false\"}\n    ]\n  ) {\n    nodes {\n      name\n      id\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/data-protection/data-center/VMware-vSphere/job-status/","title":"Job status","text":""},{"location":"Rubrik-Security-Cloud-API/data-protection/data-center/VMware-vSphere/job-status/#description","title":"Description","text":"<p>Tasks such as on-demand backups and recoveries are asynchronous requests and return an AsynRequestStatus which can be monitored for progress and completion.</p> <p>To monitor the asynchronous request status for VMware vSphere, provide the ID of the cluster and the ID of the job. You can query the request status periodically until a terminal state (<code>SUCCEEDED</code>, <code>FAILED</code>, <code>CANCELLED</code>) is set given in the status field.</p>"},{"location":"Rubrik-Security-Cloud-API/data-protection/data-center/VMware-vSphere/job-status/#code-samples","title":"Code Samples","text":"GraphQLPowerShell SDKShellPython SDK <pre><code>query requestStatus($id: String! $clusterUuid: UUID!) {\n  vSphereVMAsyncRequestStatus(id: $id, clusterUuid: $clusterUuid) {\n    id\n    status\n    startTime\n    progress\n    endTime\n    error {\n      message\n    }\n  }\n}\n</code></pre> <pre><code>$statusQuery = New-RscQuery -GqlQuery vSphereVMAsyncRequestStatus\n$statusQuery.var.id = $request.Id\n$statusQuery.var.clusterUuid = $my_vm.cluster.Id\n$status = Invoke-Rsc $statusQuery\n</code></pre> <pre><code>    curl --location 'https://EXAMPLE.my.rubrik.com/api/graphql' \\\n    --header 'Content-Type: application/json' \\\n    --header 'Authorization: Bearer XXXXXXX' \\\n    --data '{\"query\":\"query requestStatus($id: String! $clusterUuid: UUID!) {  vSphereVMAsyncRequestStatus(id: $id clusterUuid: $clusterUuid) { id status startTime progress endTime error { message }}}\",\"variables\":{\"id\":\"TASK_ID\",\"clusterUuid\":\"CLUSTER_UUID\"}}'\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/data-protection/data-center/VMware-vSphere/on-demand-backup/","title":"On demand backup","text":"<p>To Perform an On-Demand Backup, you will need the Virtual Machine <code>ID</code> and SLA <code>ID</code>.</p> GraphQLPowerShell SDKShellPython SDK <pre><code>mutation snapshotVm {\n  vsphereBulkOnDemandSnapshot(\n    input: {\n      config: {\n        vms: [\"EC6A4D79-8F6F-4105-9DD6-11F4875C7A8B\"]\n        slaId: \"def96ac0-be74-5e59-87e2-5af73b65ac1e\"\n        }\n      }\n    ) {\n    responses {\n      id\n    }\n  }\n}\n</code></pre> <pre><code>$query = New-Rscmutation -GqlMutation vsphereBulkOnDemandSnapshot -FieldProfile FULL\n$query.var.input = Get-RscType -Name vsphereBulkOnDemandSnapshotInput\n$query.var.input.config = Get-RscType -Name BulkOnDemandSnapshotJobConfigInput\n$query.var.input.config.Vms = @($vm.id)\n$query.var.input.config.SlaId = $vm.EffectiveSlaDomain.Id\ninvoke-rsc $query\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre> <p>To monitor the status of the on-demand backup, see job status</p>"},{"location":"Rubrik-Security-Cloud-API/data-protection/data-center/VMware-vSphere/recovery/","title":"Recovery","text":"<p>Recoveries, especially Exports, can be very complex </p>"},{"location":"Rubrik-Security-Cloud-API/data-protection/data-center/VMware-vSphere/recovery/#export","title":"Export","text":"<p>Create a new virtual machine from this snapshot</p> GraphQLPowerShell SDKShellPython SDK"},{"location":"Rubrik-Security-Cloud-API/data-protection/data-center/VMware-vSphere/recovery/#recover-files","title":"Recover Files","text":"<p>Restore files and folders from this snapshot</p> GraphQLPowerShell SDKShellPython SDK"},{"location":"Rubrik-Security-Cloud-API/data-protection/data-center/VMware-vSphere/recovery/#in-place-recovery","title":"In-Place Recovery","text":"<p>Update the source virtual machine with data from this snapshot using only changed blocks.</p> GraphQLPowerShell SDKShellPython SDK"},{"location":"Rubrik-Security-Cloud-API/data-protection/data-center/VMware-vSphere/recovery/#live-mount","title":"Live Mount","text":"<p>Create a new virtual machine from this snapshot. The recovered virtual machine uses the Rubrik cluster as its datastore.</p> GraphQLPowerShell SDKShellPython SDK"},{"location":"Rubrik-Security-Cloud-API/data-protection/data-center/VMware-vSphere/recovery/#instant-recovery","title":"Instant Recovery","text":"<p>Replace the source virtual machine with a virtual machine recovered from this snapshot. The recovered virtual machine uses the Rubrik cluster as the datastore.</p> GraphQLPowerShell SDKShellPython SDK"},{"location":"Rubrik-Security-Cloud-API/data-protection/data-center/VMware-vSphere/recovery/#mount-virtual-disks","title":"Mount Virtual Disks","text":"<p>Create new virtual disks from this snapshot, using the Rubrik cluster as the datastore. Mount these disks to another virtual machine.</p> GraphQLPowerShell SDKShellPython SDK"},{"location":"Rubrik-Security-Cloud-API/data-protection/data-center/VMware-vSphere/vSphere-Compute-Clusters/","title":"vSphere Compute Clusters","text":""},{"location":"Rubrik-Security-Cloud-API/data-protection/data-center/VMware-vSphere/vSphere-Compute-Clusters/#retrieving-vmware-vsphere-compute-clusters","title":"Retrieving VMware vSphere Compute Clusters","text":"GraphQLPowerShell SDKShellPython SDK <pre><code>query vsphereClusters {\n  vSphereComputeClusters(filter: {field: NAME_EXACT_MATCH texts: \"foo\"}) {\n    nodes {\n      name\n      id\n      logicalPath {\n        name\n        fid\n        objectType\n      }\n      descendantConnection(typeFilter: [VSphereHost,VSphereNetwork,VSphereDatastore,VSphereResourcePool]) {\n        nodes {\n          name\n          id\n          objectType\n        }\n      }\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/data-protection/data-center/VMware-vSphere/vSphere-Folders/","title":"vSphere Folders","text":""},{"location":"Rubrik-Security-Cloud-API/data-protection/data-center/VMware-vSphere/vSphere-Folders/#retrieving-vmware-vsphere-folders","title":"Retrieving VMware vSphere Folders","text":"GraphQLPowerShell SDKShellPython SDK <pre><code>query vsphereFolders {\n  vSphereFolders(filter: {field: NAME_EXACT_MATCH texts: \"SQL Server\"}) {\n    nodes {\n      name\n      id\n      folderType\n      vCenterId\n      datacenterId\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/data-protection/data-center/VMware-vSphere/vSphere-Hosts/","title":"vSphere Hosts","text":""},{"location":"Rubrik-Security-Cloud-API/data-protection/data-center/VMware-vSphere/vSphere-Hosts/#retrieving-vmware-vsphere-hosts","title":"Retrieving VMware vSphere Hosts","text":"GraphQLPowerShell SDKShellPython SDK <pre><code>query vsphereHosts {\n  vSphereHostConnection(filter: {field: NAME_EXACT_MATCH texts: \"esx001.example.com\"}) {\n    nodes {\n      name\n      id\n    }\n  }\n}\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Rubrik-Security-Cloud-API/data-protection/data-center/VMware-vSphere/script-examples/restore-vm-file/","title":"Restore File or Folder","text":""},{"location":"Rubrik-Security-Cloud-API/data-protection/data-center/VMware-vSphere/script-examples/restore-vm-file/#description","title":"Description","text":"<p>This full working example performs a restore of the file or folder specified in the script.  </p>"},{"location":"Rubrik-Security-Cloud-API/data-protection/data-center/VMware-vSphere/script-examples/restore-vm-file/#code","title":"Code","text":"<pre><code>$snapshot = Get-RscSnapshot -id \"123\"\n$SourceFilePath = \"C:\\foo\\bar.txt\"\n$DestinationFilePath = \"C:\\restore\\\"\n\n# Optional\n# $DestinationVm = Get-RscVmwareVm -id \"123\"\n\n$query = New-RscMutation -GqlMutation vsphereVmRecoverFilesNew -FieldProfile FULL\n\n$query.var.input = New-Object -Typename RubrikSecurityCloud.Types.VsphereVmRecoverFilesNewInput\n$query.var.input.Config = New-Object RubrikSecurityCloud.Types.RestoreFilesJobConfigInput\n$query.var.input.Config.RestoreConfig = New-Object -TypeName RubrikSecurityCloud.Types.VmRestorePathPairInput\n$query.var.input.Config.RestoreConfig[0].RestorePathPair = New-Object RubrikSecurityCloud.Types.RestorePathPairInput\n\n$query.var.input.id = $snapshot.id\n$query.var.input.clusterUuid = $snapshot.Cluster.id\n\nif ($DestinationVm) {\n    $query.var.input.config.destinationObjectId = $DestinationVm.id\n}\nelse {\n    $query.var.input.config.destinationObjectId = $snapshot.SnappableNew.Id\n}\n\n$query.var.input.config.restoreConfig[0].RestorePathPair.path = $SourceFilePath\n$query.var.input.config.restoreConfig[0].RestorePathPair.restorePath = $DestinationFilePath\n\n$result = Invoke-Rsc -Query $query\n$result\n</code></pre>"}]}